cscope 15 $HOME/mysql/Lab/bpt -q 0000000226 0000042064
	@include/bpt.h

1 #i‚de‡
__BPT_H__


2 
	#__BPT_H__


	)

6 
	~<°dio.h
>

7 
	~<°dlib.h
>

8 
	~<°dboﬁ.h
>

10 
	#_LARGEFILE_SOURCE


	)

11 
	#_FILE_OFEESET_BITS
 64

	)

12 #ifde‡
WINDOWS


13 
	#boﬁ
 

	)

14 
	#Ál£
 0

	)

15 
	#åue
 1

	)

19 
	#DEFAULT_ORDER
 4

	)

23 
	#MIN_ORDER
 3

	)

24 
	#MAX_ORDER
 20

	)

27 
	#LICENSE_FILE
 "LICENSE.txt"

	)

28 
	#LICENSE_WARRANTEE
 0

	)

29 
	#LICENSE_WARRANTEE_START
 592

	)

30 
	#LICENSE_WARRANTEE_END
 624

	)

31 
	#LICENSE_CONDITIONS
 1

	)

32 
	#LICENSE_CONDITIONS_START
 70

	)

33 
	#LICENSE_CONDITIONS_END
 625

	)

47 
	sªc‹d
 {

48 
	mvÆue
[120];

49 } 
	tªc‹d
;

56 
	s∑ge_li°
 {

57 
öt64_t
 
	moff£t
;

58 
boﬁ
 
	mis_‰ì
;

59 
∑ge_li°
 *
	m√xt
;

60 } 
	t∑ge_li°
;

90 
	snode
 {

91 ** 
	mpoöãrs
;

92 * 
	mkeys
;

93 
node
 * 
	m∑ª¡
;

94 
boﬁ
 
	mis_Àaf
;

95 
	mnum_keys
;

96 
node
 * 
	m√xt
;

97 } 
	tnode
;

111 
‹dî
;

118 
node
 * 
queue
;

125 
boﬁ
 
vîbo£_ouçut
;

132 
li˚n£_nŸi˚
( );

133 
¥öt_li˚n£
–
li˚n˚_∑π
 );

134 
ußge_1
( );

135 
ußge_2
( );

136 
ußge_3
( );

137 
íqueue
–
node
 * 
√w_node
 );

138 
node
 * 
dequeue
( );

139 
height
–
node
 * 
roŸ
 );

140 
∑th_to_roŸ
–
node
 * 
roŸ
,Çodê* 
chûd
 );

141 
¥öt_Àaves
–
node
 * 
roŸ
 );

142 
¥öt_åì
–
node
 * 
roŸ
 );

143 
föd_™d_¥öt
(
node
 * 
roŸ
, 
key
, 
boﬁ
 
vîbo£
);

144 
föd_™d_¥öt_ønge
(
node
 * 
roŸ
, 
ønge1
, 
ønge2
, 
boﬁ
 
vîbo£
);

145 
föd_ønge
–
node
 * 
roŸ
, 
key_°¨t
, 
key_íd
, 
boﬁ
 
vîbo£
,

146 
ªtu∫ed_keys
[], * 
ªtu∫ed_poöãrs
[]);

147 
node
 * 
föd_Àaf
–nodê* 
roŸ
, 
key
, 
boﬁ
 
vîbo£
 );

148 
ªc‹d
 * 
föd_åì
–
node
 * 
roŸ
, 
key
, 
boﬁ
 
vîbo£
 );

149 
cut
–
Àngth
 );

153 
ªc‹d
 * 
make_ªc‹d
(
vÆue
[]);

154 
node
 * 
make_node
( );

155 
node
 * 
make_Àaf
( );

156 
gë_À·_ödex
(
node
 * 
∑ª¡
,Çodê* 
À·
);

157 
node
 * 
ö£π_öto_Àaf
–nodê* 
Àaf
, 
key
, 
ªc‹d
 * 
poöãr
 );

158 
node
 * 
ö£π_öto_Àaf_a·î_•lôtög
“odê* 
roŸ
,Çodê* 
Àaf
, 
key
,

159 
ªc‹d
 * 
poöãr
);

160 
node
 * 
ö£π_öto_node
“odê* 
roŸ
,Çodê* 
∑ª¡
,

161 
À·_ödex
, 
key
, 
node
 * 
right
);

162 
node
 * 
ö£π_öto_node_a·î_•lôtög
“odê* 
roŸ
,Çodê* 
∑ª¡
,

163 
À·_ödex
,

164 
key
, 
node
 * 
right
);

165 
node
 * 
ö£π_öto_∑ª¡
“odê* 
roŸ
,Çodê* 
À·
, 
key
,Çodê* 
right
);

166 
node
 * 
ö£π_öto_√w_roŸ
“odê* 
À·
, 
key
,Çodê* 
right
);

167 
node
 * 
°¨t_√w_åì
(
key
, 
ªc‹d
 * 
poöãr
);

168 
node
 * 
ö£π_åì
–nodê* 
roŸ
, 
key
, 
vÆue
[] );

172 
gë_√ighb‹_ödex
–
node
 * 
n
 );

173 
node
 * 
adju°_roŸ
“odê* 
roŸ
);

174 
node
 * 
cﬂÀs˚_nodes
“odê* 
roŸ
,Çodê* 
n
,Çodê* 
√ighb‹
,

175 
√ighb‹_ödex
, 
k_¥ime
);

176 
node
 * 
ªdi°ribuã_nodes
“odê* 
roŸ
,Çodê* 
n
,Çodê* 
√ighb‹
,

177 
√ighb‹_ödex
,

178 
k_¥ime_ödex
, 
k_¥ime
);

179 
node
 * 
dñëe_íåy
–nodê* 
roŸ
,Çodê* 
n
, 
key
, * 
poöãr
 );

180 
node
 * 
dñëe_åì
–nodê* 
roŸ
, 
key
 );

182 
de°roy_åì_nodes
(
node
 * 
roŸ
);

183 
node
 * 
de°roy_åì
“odê* 
roŸ
);

	@src/bpt.c

4 
	#Vîsi⁄
 "1.14"

	)

55 
	~"b±.h
"

69 
	g‹dî
 = 
DEFAULT_ORDER
;

70 
	gÀaf_‹dî
 = 32;

71 
	göã∫Æ_‹dî
 = 249;

78 
node
 * 
	gqueue
 = 
NULL
;

85 
boﬁ
 
	gvîbo£_ouçut
 = 
Ál£
;

90 
FILE
 *
	gÂ
;

91 
	gfd
;

97 
öt64_t
 
	gdeÁu…_off£t
;

103 
∑ge_li°
 *
	ghód
 = 
NULL
;

106 
öt64_t
 
	$ö£π_öto_∑ª¡_∑ge
(
öt64_t
 
Ω_off£t
, i¡64_à
l_off£t
, i¡64_à
key
, i¡64_à
r_off£t
){

108 
öt64_t
 
	`ö£π_öto_√w_roŸ_∑ge
(öt64_à
l_off£t
, i¡64_à
key
, i¡64_à
r_off£t
){

116 
	`li˚n£_nŸi˚
( ) {

117 
	`¥ötf
("bpt version %s -- Copyright (C) 2010 Amittai Aviram "

118 "hâp://www.amôèi.com\n", 
Vîsi⁄
);

119 
	`¥ötf
("ThisÖrogram comes with ABSOLUTELY NO WARRANTY; for details "

128 
	`¥öt_li˚n£
–
li˚n£_∑π
 ) {

129 
°¨t
, 
íd
, 
löe
;

130 
FILE
 * 
Â
;

131 
buf„r
[0x100];

133 
li˚n£_∑π
) {

134 
LICENSE_WARRANTEE
:

135 
°¨t
 = 
LICENSE_WARRANTEE_START
;

136 
íd
 = 
LICENSE_WARRANTEE_END
;

138 
LICENSE_CONDITIONS
:

139 
°¨t
 = 
LICENSE_CONDITIONS_START
;

140 
íd
 = 
LICENSE_CONDITIONS_END
;

146 
Â
 = 
	`f›í
(
LICENSE_FILE
, "r");

147 i‡(
Â
 =
NULL
) {

148 
	`≥º‹
("print_license: fopen");

149 
	`exô
(
EXIT_FAILURE
);

151 
löe
 = 0;Üöê< 
°¨t
;Üine++)

152 
	`fgës
(
buf„r
, (buf„r), 
Â
);

153  ; 
löe
 < 
íd
;Üine++) {

154 
	`fgës
(
buf„r
, (buf„r), 
Â
);

155 
	`¥ötf
("%s", 
buf„r
);

157 
	`f˛o£
(
Â
);

163 
	`ußge_1
( ) {

164 
	`¥ötf
("B+ Tªêo‡Ordî %d.\n", 
‹dî
);

165 
	`¥ötf
("Following Silberschatz, Korth, Sidarshan, Database Concepts, "

170 
	`¥ötf
("(%d <‹dî <%d).\n", 
MIN_ORDER
, 
MAX_ORDER
);

171 
	`¥ötf
("To start with input fromá file ofÇewline-delimited integers, \n"

179 
	`ußge_2
( ) {

180 
	`¥ötf
("Enterány ofÅhe following commandsáfterÅheÖrompt > :\n"

201 
	`ußge_3
( ) {

202 
	`¥ötf
("Usage: ./bpt [<order>]\n");

203 
	`¥ötf
("\twhîê%d <‹dî <%d .\n", 
MIN_ORDER
, 
MAX_ORDER
);

210 
	`íqueue
–
node
 * 
√w_node
 ) {

211 
node
 * 
c
;

212 i‡(
queue
 =
NULL
) {

213 
queue
 = 
√w_node
;

214 
queue
->
√xt
 = 
NULL
;

217 
c
 = 
queue
;

218 
c
->
√xt
 !
NULL
) {

219 
c
 = c->
√xt
;

221 
c
->
√xt
 = 
√w_node
;

222 
√w_node
->
√xt
 = 
NULL
;

230 
node
 * 
	`dequeue
( ) {

231 
node
 * 
n
 = 
queue
;

232 
queue
 = queue->
√xt
;

233 
n
->
√xt
 = 
NULL
;

234  
n
;

242 
	`¥öt_Àaves
–
node
 * 
roŸ
 ) {

243 
i
;

244 
node
 * 
c
 = 
roŸ
;

245 i‡(
roŸ
 =
NULL
) {

246 
	`¥ötf
("EmptyÅree.\n");

249 !
c
->
is_Àaf
)

250 
c
 = c->
poöãrs
[0];

251 
åue
) {

252 
i
 = 0; i < 
c
->
num_keys
; i++) {

253 i‡(
vîbo£_ouçut
)

254 
	`¥ötf
("%lx ", ()
c
->
poöãrs
[
i
]);

255 
	`¥ötf
("%d ", 
c
->
keys
[
i
]);

257 i‡(
vîbo£_ouçut
)

258 
	`¥ötf
("%lx ", ()
c
->
poöãrs
[
‹dî
 - 1]);

259 i‡(
c
->
poöãrs
[
‹dî
 - 1] !
NULL
) {

260 
	`¥ötf
(" | ");

261 
c
 = c->
poöãrs
[
‹dî
 - 1];

266 
	`¥ötf
("\n");

274 
	`height
–
node
 * 
roŸ
 ) {

275 
h
 = 0;

276 
node
 * 
c
 = 
roŸ
;

277 !
c
->
is_Àaf
) {

278 
c
 = c->
poöãrs
[0];

279 
h
++;

281  
h
;

288 
	`∑th_to_roŸ
–
node
 * 
roŸ
,Çodê* 
chûd
 ) {

289 
Àngth
 = 0;

290 
node
 * 
c
 = 
chûd
;

291 
c
 !
roŸ
) {

292 
c
 = c->
∑ª¡
;

293 
Àngth
++;

295  
Àngth
;

308 
	`¥öt_åì
–
node
 * 
roŸ
 ) {

310 
node
 * 
n
 = 
NULL
;

311 
i
 = 0;

312 
ønk
 = 0;

313 
√w_ønk
 = 0;

315 i‡(
roŸ
 =
NULL
) {

316 
	`¥ötf
("EmptyÅree.\n");

319 
queue
 = 
NULL
;

320 
	`íqueue
(
roŸ
);

321  
queue
 !
NULL
 ) {

322 
n
 = 
	`dequeue
();

323 i‡(
n
->
∑ª¡
 !
NULL
 &&Ç =n->∑ª¡->
poöãrs
[0]) {

324 
√w_ønk
 = 
	`∑th_to_roŸ
–
roŸ
, 
n
 );

325 i‡(
√w_ønk
 !
ønk
) {

326 
ønk
 = 
√w_ønk
;

327 
	`¥ötf
("\n");

330 i‡(
vîbo£_ouçut
)

331 
	`¥ötf
("(%lx)", ()
n
);

332 
i
 = 0; i < 
n
->
num_keys
; i++) {

333 i‡(
vîbo£_ouçut
)

334 
	`¥ötf
("%lx ", ()
n
->
poöãrs
[
i
]);

335 
	`¥ötf
("%d ", 
n
->
keys
[
i
]);

337 i‡(!
n
->
is_Àaf
)

338 
i
 = 0; i <
n
->
num_keys
; i++)

339 
	`íqueue
(
n
->
poöãrs
[
i
]);

340 i‡(
vîbo£_ouçut
) {

341 i‡(
n
->
is_Àaf
)

342 
	`¥ötf
("%lx ", ()
n
->
poöãrs
[
‹dî
 - 1]);

344 
	`¥ötf
("%lx ", ()
n
->
poöãrs
[n->
num_keys
]);

346 
	`¥ötf
("| ");

348 
	`¥ötf
("\n");

355 
	`föd_™d_¥öt
(
node
 * 
roŸ
, 
key
, 
boﬁ
 
vîbo£
) {

356 
ªc‹d
 * 
r
 = 
	`föd_åì
(
roŸ
, 
key
, 
vîbo£
);

357 i‡(
r
 =
NULL
)

358 
	`¥ötf
("Rec‹dÇŸ found undî key %d.\n", 
key
);

360 
	`¥ötf
("Recordát %lx -- key %d, value %s.\n",

361 ()
r
, 
key
,Ñ->
vÆue
);

368 
	`föd_™d_¥öt_ønge
–
node
 * 
roŸ
, 
key_°¨t
, 
key_íd
,

369 
boﬁ
 
vîbo£
 ) {

370 
i
;

371 
¨øy_size
 = 
key_íd
 - 
key_°¨t
 + 1;

372 
ªtu∫ed_keys
[
¨øy_size
];

373 * 
ªtu∫ed_poöãrs
[
¨øy_size
];

374 
num_found
 = 
	`föd_ønge
–
roŸ
, 
key_°¨t
, 
key_íd
, 
vîbo£
,

375 
ªtu∫ed_keys
, 
ªtu∫ed_poöãrs
 );

376 i‡(!
num_found
)

377 
	`¥ötf
("None found.\n");

379 
i
 = 0; i < 
num_found
; i++)

380 
	`¥ötf
("Key: %d Location: %lx Value: %s\n",

381 
ªtu∫ed_keys
[
i
],

382 ()
ªtu∫ed_poöãrs
[
i
],

383 ((
ªc‹d
 *)

384 
ªtu∫ed_poöãrs
[
i
])->
vÆue
);

394 
	`föd_ønge
–
node
 * 
roŸ
, 
key_°¨t
, 
key_íd
, 
boﬁ
 
vîbo£
,

395 
ªtu∫ed_keys
[], * 
ªtu∫ed_poöãrs
[]) {

396 
i
, 
num_found
;

397 
num_found
 = 0;

398 
node
 * 
n
 = 
	`föd_Àaf
–
roŸ
, 
key_°¨t
, 
vîbo£
 );

399 i‡(
n
 =
NULL
)  0;

400 
i
 = 0; i < 
n
->
num_keys
 &&Ç->
keys
[i] < 
key_°¨t
; i++) ;

401 i‡(
i
 =
n
->
num_keys
)  0;

402 
n
 !
NULL
) {

403  ; 
i
 < 
n
->
num_keys
 &&Ç->
keys
[i] <
key_íd
; i++) {

404 
ªtu∫ed_keys
[
num_found
] = 
n
->
keys
[
i
];

405 
ªtu∫ed_poöãrs
[
num_found
] = 
n
->
poöãrs
[
i
];

406 
num_found
++;

408 
n
 =Ç->
poöãrs
[
‹dî
 - 1];

409 
i
 = 0;

411  
num_found
;

420 
node
 * 
	`föd_Àaf
–nodê* 
roŸ
, 
key
, 
boﬁ
 
vîbo£
 ) {

421 
i
 = 0;

422 
node
 * 
c
 = 
roŸ
;

423 i‡(
c
 =
NULL
) {

424 i‡(
vîbo£
)

425 
	`¥ötf
("EmptyÅree.\n");

426  
c
;

428 !
c
->
is_Àaf
) {

429 i‡(
vîbo£
) {

430 
	`¥ötf
("[");

431 
i
 = 0; i < 
c
->
num_keys
 - 1; i++)

432 
	`¥ötf
("%d ", 
c
->
keys
[
i
]);

433 
	`¥ötf
("%d] ", 
c
->
keys
[
i
]);

435 
i
 = 0;

436 
i
 < 
c
->
num_keys
) {

437 i‡(
key
 >
c
->
keys
[
i
]) i++;

440 i‡(
vîbo£
)

441 
	`¥ötf
("%d ->\n", 
i
);

442 
c
 = (
node
 *)c->
poöãrs
[
i
];

444 i‡(
vîbo£
) {

445 
	`¥ötf
("Leaf [");

446 
i
 = 0; i < 
c
->
num_keys
 - 1; i++)

447 
	`¥ötf
("%d ", 
c
->
keys
[
i
]);

448 
	`¥ötf
("%d] ->\n", 
c
->
keys
[
i
]);

450  
c
;

457 
ªc‹d
 * 
	`föd_åì
–
node
 * 
roŸ
, 
key
, 
boﬁ
 
vîbo£
 ) {

458 
i
 = 0;

459 
node
 * 
c
 = 
	`föd_Àaf
–
roŸ
, 
key
, 
vîbo£
 );

460 i‡(
c
 =
NULL
)  NULL;

461 
i
 = 0; i < 
c
->
num_keys
; i++)

462 i‡(
c
->
keys
[
i
] =
key
) ;

463 i‡(
i
 =
c
->
num_keys
)

464  
NULL
;

466  (
ªc‹d
 *)
c
->
poöãrs
[
i
];

472 
	`cut
–
Àngth
 ) {

473 i‡(
Àngth
 % 2 == 0)

474  
Àngth
/2;

476  
Àngth
/2 + 1;

485 
ªc‹d
 * 
	`make_ªc‹d
(
vÆue
[]) {

486 
ªc‹d
 * 
√w_ªc‹d
 = (ªc‹d *)
	`mÆloc
((record));

487 i‡(
√w_ªc‹d
 =
NULL
) {

488 
	`≥º‹
("Record creation.");

489 
	`exô
(
EXIT_FAILURE
);

492 
	`°r˝y
(
√w_ªc‹d
->
vÆue
,value);

494  
√w_ªc‹d
;

501 
node
 * 
	`make_node
( ) {

502 
node
 * 
√w_node
;

503 
√w_node
 = 
	`mÆloc
((
node
));

504 i‡(
√w_node
 =
NULL
) {

505 
	`≥º‹
("Node creation.");

506 
	`exô
(
EXIT_FAILURE
);

508 
√w_node
->
keys
 = 
	`mÆloc
–(
‹dî
 - 1) * () );

509 i‡(
√w_node
->
keys
 =
NULL
) {

510 
	`≥º‹
("NewÇode keysárray.");

511 
	`exô
(
EXIT_FAILURE
);

513 
√w_node
->
poöãrs
 = 
	`mÆloc
–
‹dî
 * (*) );

514 i‡(
√w_node
->
poöãrs
 =
NULL
) {

515 
	`≥º‹
("NewÇodeÖointersárray.");

516 
	`exô
(
EXIT_FAILURE
);

518 
√w_node
->
is_Àaf
 = 
Ál£
;

519 
√w_node
->
num_keys
 = 0;

520 
√w_node
->
∑ª¡
 = 
NULL
;

521 
√w_node
->
√xt
 = 
NULL
;

522  
√w_node
;

528 
node
 * 
	`make_Àaf
( ) {

529 
node
 * 
Àaf
 = 
	`make_node
();

530 
Àaf
->
is_Àaf
 = 
åue
;

531  
Àaf
;

539 
	`gë_À·_ödex
(
node
 * 
∑ª¡
,Çodê* 
À·
) {

541 
À·_ödex
 = 0;

542 
À·_ödex
 <
∑ª¡
->
num_keys
 &&

543 
∑ª¡
->
poöãrs
[
À·_ödex
] !
À·
)

544 
À·_ödex
++;

545  
À·_ödex
;

552 
node
 * 
	`ö£π_öto_Àaf
–nodê* 
Àaf
, 
key
, 
ªc‹d
 * 
poöãr
 ) {

554 
i
, 
ö£πi⁄_poöt
;

556 
ö£πi⁄_poöt
 = 0;

557 
ö£πi⁄_poöt
 < 
Àaf
->
num_keys
 &&Üóf->
keys
[ö£πi⁄_poöt] < 
key
)

558 
ö£πi⁄_poöt
++;

560 
i
 = 
Àaf
->
num_keys
; i > 
ö£πi⁄_poöt
; i--) {

561 
Àaf
->
keys
[
i
] =Üeaf->keys[i - 1];

562 
Àaf
->
poöãrs
[
i
] =Üeaf->pointers[i - 1];

564 
Àaf
->
keys
[
ö£πi⁄_poöt
] = 
key
;

565 
Àaf
->
poöãrs
[
ö£πi⁄_poöt
] = 
poöãr
;

566 
Àaf
->
num_keys
++;

567  
Àaf
;

576 
node
 * 
	`ö£π_öto_Àaf_a·î_•lôtög
“odê* 
roŸ
,Çodê* 
Àaf
, 
key
, 
ªc‹d
 * 
poöãr
) {

578 
node
 * 
√w_Àaf
;

579 * 
ãmp_keys
;

580 ** 
ãmp_poöãrs
;

581 
ö£πi⁄_ödex
, 
•lô
, 
√w_key
, 
i
, 
j
;

583 
√w_Àaf
 = 
	`make_Àaf
();

585 
ãmp_keys
 = 
	`mÆloc
–
‹dî
 * () );

586 i‡(
ãmp_keys
 =
NULL
) {

587 
	`≥º‹
("Temporary keysárray.");

588 
	`exô
(
EXIT_FAILURE
);

591 
ãmp_poöãrs
 = 
	`mÆloc
–
‹dî
 * (*) );

592 i‡(
ãmp_poöãrs
 =
NULL
) {

593 
	`≥º‹
("TemporaryÖointersárray.");

594 
	`exô
(
EXIT_FAILURE
);

597 
ö£πi⁄_ödex
 = 0;

598 
ö£πi⁄_ödex
 < 
‹dî
 - 1 && 
Àaf
->
keys
[ö£πi⁄_ödex] < 
key
)

599 
ö£πi⁄_ödex
++;

601 
i
 = 0, 
j
 = 0; i < 
Àaf
->
num_keys
; i++, j++) {

602 i‡(
j
 =
ö£πi⁄_ödex
) j++;

603 
ãmp_keys
[
j
] = 
Àaf
->
keys
[
i
];

604 
ãmp_poöãrs
[
j
] = 
Àaf
->
poöãrs
[
i
];

607 
ãmp_keys
[
ö£πi⁄_ödex
] = 
key
;

608 
ãmp_poöãrs
[
ö£πi⁄_ödex
] = 
poöãr
;

610 
Àaf
->
num_keys
 = 0;

612 
•lô
 = 
	`cut
(
‹dî
 - 1);

614 
i
 = 0; i < 
•lô
; i++) {

615 
Àaf
->
poöãrs
[
i
] = 
ãmp_poöãrs
[i];

616 
Àaf
->
keys
[
i
] = 
ãmp_keys
[i];

617 
Àaf
->
num_keys
++;

620 
i
 = 
•lô
, 
j
 = 0; i < 
‹dî
; i++, j++) {

621 
√w_Àaf
->
poöãrs
[
j
] = 
ãmp_poöãrs
[
i
];

622 
√w_Àaf
->
keys
[
j
] = 
ãmp_keys
[
i
];

623 
√w_Àaf
->
num_keys
++;

626 
	`‰ì
(
ãmp_poöãrs
);

627 
	`‰ì
(
ãmp_keys
);

629 
√w_Àaf
->
poöãrs
[
‹dî
 - 1] = 
Àaf
->pointers[order - 1];

630 
Àaf
->
poöãrs
[
‹dî
 - 1] = 
√w_Àaf
;

632 
i
 = 
Àaf
->
num_keys
; i < 
‹dî
 - 1; i++)

633 
Àaf
->
poöãrs
[
i
] = 
NULL
;

634 
i
 = 
√w_Àaf
->
num_keys
; i < 
‹dî
 - 1; i++)

635 
√w_Àaf
->
poöãrs
[
i
] = 
NULL
;

637 
√w_Àaf
->
∑ª¡
 = 
Àaf
->parent;

638 
√w_key
 = 
√w_Àaf
->
keys
[0];

640  
	`ö£π_öto_∑ª¡
(
roŸ
, 
Àaf
, 
√w_key
, 
√w_Àaf
);

648 
node
 * 
	`ö£π_öto_node
“odê* 
roŸ
,Çodê* 
n
,

649 
À·_ödex
, 
key
, 
node
 * 
right
) {

650 
i
;

652 
i
 = 
n
->
num_keys
; i > 
À·_ödex
; i--) {

653 
n
->
poöãrs
[
i
 + 1] =Ç->pointers[i];

654 
n
->
keys
[
i
] =Ç->keys[i - 1];

656 
n
->
poöãrs
[
À·_ödex
 + 1] = 
right
;

657 
n
->
keys
[
À·_ödex
] = 
key
;

658 
n
->
num_keys
++;

659  
roŸ
;

667 
node
 * 
	`ö£π_öto_node_a·î_•lôtög
“odê* 
roŸ
,Çodê* 
ﬁd_node
, 
À·_ödex
,

668 
key
, 
node
 * 
right
) {

670 
i
, 
j
, 
•lô
, 
k_¥ime
;

671 
node
 * 
√w_node
, * 
chûd
;

672 * 
ãmp_keys
;

673 
node
 ** 
ãmp_poöãrs
;

684 
ãmp_poöãrs
 = 
	`mÆloc
–(
‹dî
 + 1Ë* (
node
 *) );

685 i‡(
ãmp_poöãrs
 =
NULL
) {

686 
	`≥º‹
("TemporaryÖointersárray for splittingÇodes.");

687 
	`exô
(
EXIT_FAILURE
);

689 
ãmp_keys
 = 
	`mÆloc
–
‹dî
 * () );

690 i‡(
ãmp_keys
 =
NULL
) {

691 
	`≥º‹
("Temporary keysárray for splittingÇodes.");

692 
	`exô
(
EXIT_FAILURE
);

695 
i
 = 0, 
j
 = 0; i < 
ﬁd_node
->
num_keys
 + 1; i++, j++) {

696 i‡(
j
 =
À·_ödex
 + 1) j++;

697 
ãmp_poöãrs
[
j
] = 
ﬁd_node
->
poöãrs
[
i
];

700 
i
 = 0, 
j
 = 0; i < 
ﬁd_node
->
num_keys
; i++, j++) {

701 i‡(
j
 =
À·_ödex
) j++;

702 
ãmp_keys
[
j
] = 
ﬁd_node
->
keys
[
i
];

705 
ãmp_poöãrs
[
À·_ödex
 + 1] = 
right
;

706 
ãmp_keys
[
À·_ödex
] = 
key
;

712 
•lô
 = 
	`cut
(
‹dî
);

713 
√w_node
 = 
	`make_node
();

714 
ﬁd_node
->
num_keys
 = 0;

715 
i
 = 0; i < 
•lô
 - 1; i++) {

716 
ﬁd_node
->
poöãrs
[
i
] = 
ãmp_poöãrs
[i];

717 
ﬁd_node
->
keys
[
i
] = 
ãmp_keys
[i];

718 
ﬁd_node
->
num_keys
++;

720 
ﬁd_node
->
poöãrs
[
i
] = 
ãmp_poöãrs
[i];

721 
k_¥ime
 = 
ãmp_keys
[
•lô
 - 1];

722 ++
i
, 
j
 = 0; i < 
‹dî
; i++, j++) {

723 
√w_node
->
poöãrs
[
j
] = 
ãmp_poöãrs
[
i
];

724 
√w_node
->
keys
[
j
] = 
ãmp_keys
[
i
];

725 
√w_node
->
num_keys
++;

727 
√w_node
->
poöãrs
[
j
] = 
ãmp_poöãrs
[
i
];

728 
	`‰ì
(
ãmp_poöãrs
);

729 
	`‰ì
(
ãmp_keys
);

730 
√w_node
->
∑ª¡
 = 
ﬁd_node
->parent;

731 
i
 = 0; i <
√w_node
->
num_keys
; i++) {

732 
chûd
 = 
√w_node
->
poöãrs
[
i
];

733 
chûd
->
∑ª¡
 = 
√w_node
;

741  
	`ö£π_öto_∑ª¡
(
roŸ
, 
ﬁd_node
, 
k_¥ime
, 
√w_node
);

749 
node
 * 
	`ö£π_öto_∑ª¡
“odê* 
roŸ
,Çodê* 
À·
, 
key
,Çodê* 
right
) {

751 
À·_ödex
;

752 
node
 * 
∑ª¡
;

754 
∑ª¡
 = 
À·
->parent;

758 i‡(
∑ª¡
 =
NULL
)

759  
	`ö£π_öto_√w_roŸ
(
À·
, 
key
, 
right
);

769 
À·_ödex
 = 
	`gë_À·_ödex
(
∑ª¡
, 
À·
);

775 i‡(
∑ª¡
->
num_keys
 < 
‹dî
 - 1)

776  
	`ö£π_öto_node
(
roŸ
, 
∑ª¡
, 
À·_ödex
, 
key
, 
right
);

782  
	`ö£π_öto_node_a·î_•lôtög
(
roŸ
, 
∑ª¡
, 
À·_ödex
, 
key
, 
right
);

790 
node
 * 
	`ö£π_öto_√w_roŸ
“odê* 
À·
, 
key
,Çodê* 
right
) {

792 
node
 * 
roŸ
 = 
	`make_node
();

793 
roŸ
->
keys
[0] = 
key
;

794 
roŸ
->
poöãrs
[0] = 
À·
;

795 
roŸ
->
poöãrs
[1] = 
right
;

796 
roŸ
->
num_keys
++;

797 
roŸ
->
∑ª¡
 = 
NULL
;

798 
À·
->
∑ª¡
 = 
roŸ
;

799 
right
->
∑ª¡
 = 
roŸ
;

800  
roŸ
;

808 
node
 * 
	`°¨t_√w_åì
(
key
, 
ªc‹d
 * 
poöãr
) {

810 
node
 * 
roŸ
 = 
	`make_Àaf
();

811 
roŸ
->
keys
[0] = 
key
;

812 
roŸ
->
poöãrs
[0] = 
poöãr
;

813 
roŸ
->
poöãrs
[
‹dî
 - 1] = 
NULL
;

814 
roŸ
->
∑ª¡
 = 
NULL
;

815 
roŸ
->
num_keys
++;

816  
roŸ
;

827 
node
 * 
	`ö£π_åì
–nodê* 
roŸ
, 
key
, 
vÆue
[] ) {

829 
ªc‹d
 * 
poöãr
;

830 
node
 * 
Àaf
;

836 i‡(
	`föd_åì
(
roŸ
, 
key
, 
Ál£
Ë!
NULL
)

837  
roŸ
;

842 
poöãr
 = 
	`make_ªc‹d
(
vÆue
);

849 i‡(
roŸ
 =
NULL
)

850  
	`°¨t_√w_åì
(
key
, 
poöãr
);

857 
Àaf
 = 
	`föd_Àaf
(
roŸ
, 
key
, 
Ál£
);

862 i‡(
Àaf
->
num_keys
 < 
‹dî
 - 1) {

863 
Àaf
 = 
	`ö£π_öto_Àaf
÷óf, 
key
, 
poöãr
);

864  
roŸ
;

871  
	`ö£π_öto_Àaf_a·î_•lôtög
(
roŸ
, 
Àaf
, 
key
, 
poöãr
);

885 
	`gë_√ighb‹_ödex
–
node
 * 
n
 ) {

887 
i
;

895 
i
 = 0; i <
n
->
∑ª¡
->
num_keys
; i++)

896 i‡(
n
->
∑ª¡
->
poöãrs
[
i
] ==Ç)

897  
i
 - 1;

900 
	`¥ötf
("Search forÇonexistentÖointerÅoÇode inÖarent.\n");

901 
	`¥ötf
("Node: %#lx\n", ()
n
);

902 
	`exô
(
EXIT_FAILURE
);

906 
node
 * 
	`ªmove_íåy_‰om_node
“odê* 
n
, 
key
,Çodê* 
poöãr
) {

908 
i
, 
num_poöãrs
;

911 
i
 = 0;

912 
n
->
keys
[
i
] !
key
)

913 
i
++;

914 ++
i
; i < 
n
->
num_keys
; i++)

915 
n
->
keys
[
i
 - 1] =Ç->keys[i];

919 
num_poöãrs
 = 
n
->
is_Àaf
 ?Ç->
num_keys
 :Ç->num_keys + 1;

920 
i
 = 0;

921 
n
->
poöãrs
[
i
] !
poöãr
)

922 
i
++;

923 ++
i
; i < 
num_poöãrs
; i++)

924 
n
->
poöãrs
[
i
 - 1] =Ç->pointers[i];

928 
n
->
num_keys
--;

932 i‡(
n
->
is_Àaf
)

933 
i
 = 
n
->
num_keys
; i < 
‹dî
 - 1; i++)

934 
n
->
poöãrs
[
i
] = 
NULL
;

936 
i
 = 
n
->
num_keys
 + 1; i < 
‹dî
; i++)

937 
n
->
poöãrs
[
i
] = 
NULL
;

939  
n
;

943 
node
 * 
	`adju°_roŸ
“odê* 
roŸ
) {

945 
node
 * 
√w_roŸ
;

952 i‡(
roŸ
->
num_keys
 > 0)

953  
roŸ
;

962 i‡(!
roŸ
->
is_Àaf
) {

963 
√w_roŸ
 = 
roŸ
->
poöãrs
[0];

964 
√w_roŸ
->
∑ª¡
 = 
NULL
;

971 
√w_roŸ
 = 
NULL
;

973 
	`‰ì
(
roŸ
->
keys
);

974 
	`‰ì
(
roŸ
->
poöãrs
);

975 
	`‰ì
(
roŸ
);

977  
√w_roŸ
;

987 
node
 * 
	`cﬂÀs˚_nodes
“odê* 
roŸ
,Çodê* 
n
,Çodê* 
√ighb‹
, 
√ighb‹_ödex
, 
k_¥ime
) {

989 
i
, 
j
, 
√ighb‹_ö£πi⁄_ödex
, 
n_íd
;

990 
node
 * 
tmp
;

996 i‡(
√ighb‹_ödex
 == -1) {

997 
tmp
 = 
n
;

998 
n
 = 
√ighb‹
;

999 
√ighb‹
 = 
tmp
;

1008 
√ighb‹_ö£πi⁄_ödex
 = 
√ighb‹
->
num_keys
;

1015 i‡(!
n
->
is_Àaf
) {

1020 
√ighb‹
->
keys
[
√ighb‹_ö£πi⁄_ödex
] = 
k_¥ime
;

1021 
√ighb‹
->
num_keys
++;

1024 
n_íd
 = 
n
->
num_keys
;

1026 
i
 = 
√ighb‹_ö£πi⁄_ödex
 + 1, 
j
 = 0; j < 
n_íd
; i++, j++) {

1027 
√ighb‹
->
keys
[
i
] = 
n
->keys[
j
];

1028 
√ighb‹
->
poöãrs
[
i
] = 
n
->poöãrs[
j
];

1029 
√ighb‹
->
num_keys
++;

1030 
n
->
num_keys
--;

1037 
√ighb‹
->
poöãrs
[
i
] = 
n
->poöãrs[
j
];

1042 
i
 = 0; i < 
√ighb‹
->
num_keys
 + 1; i++) {

1043 
tmp
 = (
node
 *)
√ighb‹
->
poöãrs
[
i
];

1044 
tmp
->
∑ª¡
 = 
√ighb‹
;

1055 
i
 = 
√ighb‹_ö£πi⁄_ödex
, 
j
 = 0; j < 
n
->
num_keys
; i++, j++) {

1056 
√ighb‹
->
keys
[
i
] = 
n
->keys[
j
];

1057 
√ighb‹
->
poöãrs
[
i
] = 
n
->poöãrs[
j
];

1058 
√ighb‹
->
num_keys
++;

1060 
√ighb‹
->
poöãrs
[
‹dî
 - 1] = 
n
->pointers[order - 1];

1063 
roŸ
 = 
	`dñëe_íåy
‘oŸ, 
n
->
∑ª¡
, 
k_¥ime
,Ç);

1064 
	`‰ì
(
n
->
keys
);

1065 
	`‰ì
(
n
->
poöãrs
);

1066 
	`‰ì
(
n
);

1067  
roŸ
;

1077 
node
 * 
	`ªdi°ribuã_nodes
“odê* 
roŸ
,Çodê* 
n
,Çodê* 
√ighb‹
, 
√ighb‹_ödex
,

1078 
k_¥ime_ödex
, 
k_¥ime
) {

1080 
i
;

1081 
node
 * 
tmp
;

1088 i‡(
√ighb‹_ödex
 != -1) {

1089 i‡(!
n
->
is_Àaf
)

1090 
n
->
poöãrs
[n->
num_keys
 + 1] =Ç->pointers[n->num_keys];

1091 
i
 = 
n
->
num_keys
; i > 0; i--) {

1092 
n
->
keys
[
i
] =Ç->keys[i - 1];

1093 
n
->
poöãrs
[
i
] =Ç->pointers[i - 1];

1095 i‡(!
n
->
is_Àaf
) {

1096 
n
->
poöãrs
[0] = 
√ighb‹
->poöãrs[√ighb‹->
num_keys
];

1097 
tmp
 = (
node
 *)
n
->
poöãrs
[0];

1098 
tmp
->
∑ª¡
 = 
n
;

1099 
√ighb‹
->
poöãrs
[√ighb‹->
num_keys
] = 
NULL
;

1100 
n
->
keys
[0] = 
k_¥ime
;

1101 
n
->
∑ª¡
->
keys
[
k_¥ime_ödex
] = 
√ighb‹
->keys[√ighb‹->
num_keys
 - 1];

1104 
n
->
poöãrs
[0] = 
√ighb‹
->poöãrs[√ighb‹->
num_keys
 - 1];

1105 
√ighb‹
->
poöãrs
[√ighb‹->
num_keys
 - 1] = 
NULL
;

1106 
n
->
keys
[0] = 
√ighb‹
->keys[√ighb‹->
num_keys
 - 1];

1107 
n
->
∑ª¡
->
keys
[
k_¥ime_ödex
] =Ç->keys[0];

1118 i‡(
n
->
is_Àaf
) {

1119 
n
->
keys
[n->
num_keys
] = 
√ighb‹
->keys[0];

1120 
n
->
poöãrs
[n->
num_keys
] = 
√ighb‹
->pointers[0];

1121 
n
->
∑ª¡
->
keys
[
k_¥ime_ödex
] = 
√ighb‹
->keys[1];

1124 
n
->
keys
[n->
num_keys
] = 
k_¥ime
;

1125 
n
->
poöãrs
[n->
num_keys
 + 1] = 
√ighb‹
->pointers[0];

1126 
tmp
 = (
node
 *)
n
->
poöãrs
[n->
num_keys
 + 1];

1127 
tmp
->
∑ª¡
 = 
n
;

1128 
n
->
∑ª¡
->
keys
[
k_¥ime_ödex
] = 
√ighb‹
->keys[0];

1130 
i
 = 0; i < 
√ighb‹
->
num_keys
 - 1; i++) {

1131 
√ighb‹
->
keys
[
i
] =Çeighbor->keys[i + 1];

1132 
√ighb‹
->
poöãrs
[
i
] =Çeighbor->pointers[i + 1];

1134 i‡(!
n
->
is_Àaf
)

1135 
√ighb‹
->
poöãrs
[
i
] =Çeighbor->pointers[i + 1];

1142 
n
->
num_keys
++;

1143 
√ighb‹
->
num_keys
--;

1145  
roŸ
;

1154 
node
 * 
	`dñëe_íåy
–nodê* 
roŸ
,Çodê* 
n
, 
key
, * 
poöãr
 ) {

1156 
mö_keys
;

1157 
node
 * 
√ighb‹
;

1158 
√ighb‹_ödex
;

1159 
k_¥ime_ödex
, 
k_¥ime
;

1160 
ˇ∑côy
;

1164 
n
 = 
	`ªmove_íåy_‰om_node
“, 
key
, 
poöãr
);

1169 i‡(
n
 =
roŸ
)

1170  
	`adju°_roŸ
(
roŸ
);

1181 
mö_keys
 = 
n
->
is_Àaf
 ? 
	`cut
(
‹dî
 - 1) : cut(order) - 1;

1187 i‡(
n
->
num_keys
 >
mö_keys
)

1188  
roŸ
;

1202 
√ighb‹_ödex
 = 
	`gë_√ighb‹_ödex
–
n
 );

1203 
k_¥ime_ödex
 = 
√ighb‹_ödex
 == -1 ? 0 :Çeighbor_index;

1204 
k_¥ime
 = 
n
->
∑ª¡
->
keys
[
k_¥ime_ödex
];

1205 
√ighb‹
 = 
√ighb‹_ödex
 =-1 ? 
n
->
∑ª¡
->
poöãrs
[1] :

1206 
n
->
∑ª¡
->
poöãrs
[
√ighb‹_ödex
];

1208 
ˇ∑côy
 = 
n
->
is_Àaf
 ? 
‹dî
 : order - 1;

1212 i‡(
√ighb‹
->
num_keys
 + 
n
->num_key†< 
ˇ∑côy
)

1213  
	`cﬂÀs˚_nodes
(
roŸ
, 
n
, 
√ighb‹
, 
√ighb‹_ödex
, 
k_¥ime
);

1218  
	`ªdi°ribuã_nodes
(
roŸ
, 
n
, 
√ighb‹
, 
√ighb‹_ödex
, 
k_¥ime_ödex
, 
k_¥ime
);

1225 
node
 * 
	`dñëe_åì
“odê* 
roŸ
, 
key
) {

1227 
node
 * 
key_Àaf
;

1228 
ªc‹d
 * 
key_ªc‹d
;

1230 
key_ªc‹d
 = 
	`föd_åì
(
roŸ
, 
key
, 
Ál£
);

1231 
key_Àaf
 = 
	`föd_Àaf
(
roŸ
, 
key
, 
Ál£
);

1232 i‡(
key_ªc‹d
 !
NULL
 && 
key_Àaf
 != NULL) {

1233 
roŸ
 = 
	`dñëe_íåy
‘oŸ, 
key_Àaf
, 
key
, 
key_ªc‹d
);

1234 
	`‰ì
(
key_ªc‹d
);

1236  
roŸ
;

1240 
	`de°roy_åì_nodes
(
node
 * 
roŸ
) {

1241 
i
;

1242 i‡(
roŸ
->
is_Àaf
)

1243 
i
 = 0; i < 
roŸ
->
num_keys
; i++)

1244 
	`‰ì
(
roŸ
->
poöãrs
[
i
]);

1246 
i
 = 0; i < 
roŸ
->
num_keys
 + 1; i++)

1247 
	`de°roy_åì_nodes
(
roŸ
->
poöãrs
[
i
]);

1248 
	`‰ì
(
roŸ
->
poöãrs
);

1249 
	`‰ì
(
roŸ
->
keys
);

1250 
	`‰ì
(
roŸ
);

1254 
node
 * 
	`de°roy_åì
“odê* 
roŸ
) {

1255 
	`de°roy_åì_nodes
(
roŸ
);

1256  
NULL
;

1260 
	`öô_∑ge_li°
(){

1261 
hód
 = (
∑ge_li°
 *)
	`mÆloc
((page_list));

1262 
∑ge_li°
 *
√w
 = (∑ge_li° *)
	`mÆloc
((page_list));

1265 
hód
->
off£t
 = 4096;

1266 
hód
->
is_‰ì
 = 
åue
;

1267 
hód
->
√xt
 = 
√w
;

1268 
√w
->
off£t
 = 0;

1269 
√w
->
is_‰ì
 = 
Ál£
;

1270 
√w
->
√xt
 = 
NULL
;

1275 
öt64_t
 
	`sˇn_‰ì_∑ge
(){

1276 
öt64_t
 
œ°_off£t
;

1277 
öt64_t
 
√xt_Â_off£t
 = 0;

1278 
∑ge_li°
 *
poöãr
;

1279 
∑ge_li°
 *
√w
;

1281 
poöãr
 = 
hód
;Öoöãr->
off£t
 !0 &&Öoöãr->
√xt
 !
NULL
;Öointer =Öointer->next){

1282 if(
poöãr
->
is_‰ì
 =
åue
){

1283  
poöãr
->
off£t
;

1285 
œ°_off£t
 = 
poöãr
->
off£t
;

1289 
poöãr
->
off£t
 = 
œ°_off£t
 + 4096;

1290 
poöãr
->
is_‰ì
 = 
åue
;

1291 
√w
 = (
∑ge_li°
 *)
	`mÆloc
((page_list));

1292 
√w
->
off£t
 = 0;

1293 
√w
->
is_‰ì
 = 
Ál£
;

1294 
poöãr
->
√xt
 = 
√w
;

1295 
√w
->
√xt
 = 
NULL
;

1298 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
poöãr
->
off£t
, 
SEEK_SET
);

1299 
	`fwrôe
(&
√xt_Â_off£t
, 8, 1, 
Â
);

1301  
poöãr
->
off£t
;

1306 
öt64_t
 
	`sˇn_u£_∑ge
(){

1307 
öt64_t
 
cou¡
 = 0;

1308 
∑ge_li°
 *
poöãr
;

1310 
poöãr
 = 
hód
;Öoöãr->
off£t
 !0 &&Öoöãr->
√xt
 !
NULL
;Öointer =Öointer->next){

1311 if(
poöãr
->
is_‰ì
 =
Ál£
){

1312 
cou¡
++;

1316  
cou¡
;

1323 
	`ch™ge_‰ì_∑ge
(
öt64_t
 
off£t
){

1324 
∑ge_li°
 *
poöãr
;

1326 
poöãr
 = 
hód
;Öoöãr->
off£t
 !0 &&Öoöãr->
√xt
 !
NULL
;Öointer =Öointer->next){

1327 if(
poöãr
->
off£t
 == offset){

1328 
poöãr
->
is_‰ì
 = 
Ál£
;

1336 
	`vacuum_usög_∑ge
(
öt64_t
 
off£t
){

1337 
∑ge_li°
 *
poöãr
;

1340 
poöãr
 = 
hód
;Öoöãr->
off£t
 !0 &&Öoöãr->
√xt
 !
NULL
;Öointer =Öointer->next){

1341 if(
poöãr
->
off£t
 == offset){

1342 
poöãr
->
is_‰ì
 = 
åue
;

1352 
	`öô_hódî_∑ge
(){

1353 
öt64_t
 
Â_off£t
 = 4096;

1355 
öt64_t
 
Ω_off£t
 = 0;

1356 
öt64_t
 
≤um
 = 1;

1362 
	`f£eko
(
Â
, 
deÁu…_off£t
, 
SEEK_SET
);

1363 
	`fwrôe
(&
Â_off£t
, 8, 1, 
Â
);

1364 
	`fwrôe
(&
Ω_off£t
, 8, 1, 
Â
);

1365 
	`fwrôe
(&
≤um
, 8, 1, 
Â
);

1367 
	`modify_hódî_∑ge
(
öt64_t
 
Ω_off£t
){

1368 
öt64_t
 
Â_off£t
 = 
	`sˇn_‰ì_li°
();

1369 
öt64_t
 
≤um
 = 
	`sˇn_u£_li°
();

1372 
	`f£eko
(
Â
, 
deÁu…_off£t
, 
SEEK_SET
);

1373 
	`fwrôe
(&
Â_off£t
, 8, 1, 
Â
);

1374 
	`fwrôe
(&
Ω_off£t
, 8, 1, 
Â
);

1375 
	`fwrôe
(&
≤um
, 8, 1, 
Â
);

1384 
	`›í_db
(*
∑th«me
){

1385 
Â
 = 
	`f›í
(
∑th«me
, "a+");

1386 if(
Â
 =
NULL
){

1387 
	`Ârötf
(
°dîr
, "Error : fileÖath\n");

1388 
	`exô
(
EXIT_FAILURE
);

1392 
deÁu…_off£t
 = 
	`·ñlo
(
Â
);

1395 
	`öô_∑ge_li°
();

1398 
	`öô_hódî_∑ge
();

1401 
	`fÊush
(
Â
);

1402 
fd
 = 
	`fûío
(
Â
);

1408 
öt64_t
 
	`öô_Àaf_∑ge
(öt64_à
off£t
){

1409 
öt64_t
 
p_off£t
 = 0;

1410 
öt64_t
 
rs_off£t
 = 0;

1411 
is_Àaf
 = 1;

1412 
num_keys
 = 0;

1414 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
off£t
, 
SEEK_SET
);

1416 
	`fwrôe
(&
p_off£t
, 8, 1, 
Â
);

1418 
	`fwrôe
(&
is_Àaf
, 4, 1, 
Â
);

1420 
	`fwrôe
(&
num_keys
, 4, 1, 
Â
);

1423 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
off£t
 + 120, 
SEEK_SET
);

1425 
	`fwrôe
(&
rs_off£t
, 8, 1, 
Â
);

1427  
off£t
;

1429 
öt64_t
 
	`öô_öã∫Æ_∑ge
(öt64_à
off£t
, i¡64_à
p_off£t
){

1431 
is_Àaf
 = 0, 
num_keys
 = 0;

1433 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
off£t
, 
SEEK_SET
);

1435 
	`fwrôe
(&
p_off£t
, 8, 1, 
Â
);

1437 
	`fwrôe
(&
is_Àaf
, 4, 1, 
Â
);

1439 
	`fwrôe
(&
num_keys
, 4, 1, 
Â
);

1441  
off£t
;

1443 
öt64_t
 
	`gë_À·_off£t
(öt64_à
p_off£t
, i¡64_à
l_off£t
){

1444 
öt64_t
 
À·_off£t
 = 0, 
èrgë_off£t
;

1445 
num_keys
;

1448 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
p_off£t
 + 12, 
SEEK_SET
);

1449 
	`‰ód
(&
num_keys
, 4, 1, 
Â
);

1451 
À·_off£t
 <
num_keys
){

1453 if(
À·_off£t
 == 0)

1454 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
p_off£t
 + 120, 
SEEK_SET
);

1456 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
p_off£t
 + 128 + (
À·_off£t
-1)*16 + 8, 
SEEK_SET
);

1457 
	`‰ód
(&
èrgë_off£t
, 8, 1, 
Â
);

1459 if(
l_off£t
 =
èrgë_off£t
){

1462 
À·_off£t
++;

1465  
À·_off£t
;

1467 
öt64_t
 
	`ö£π_öto_Àaf_∑ge
(öt64_à
Àaf_off£t
, i¡64_à
key
, *
vÆue
){

1468 
i
, 
ö£πi⁄_poöt
, 
num_keys
;

1469 
öt64_t
 
èrgë_key
, 
ãmp_key
;

1470 
ãmp_vÆue
[120];

1473 
ö£πi⁄_poöt
 = 0;

1476 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
Àaf_off£t
 + 12, 
SEEK_SET
);

1477 
	`‰ód
(&
num_keys
, 4, 1, 
Â
);

1479 
ö£πi⁄_poöt
 < 
num_keys
){

1481 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
Àaf_off£t
 + 128 + 
ö£πi⁄_poöt
*128, 
SEEK_SET
);

1482 
	`‰ód
(&
èrgë_key
, 8, 1, 
Â
);

1483 if(
key
 <
èrgë_key
){

1486 
ö£πi⁄_poöt
++;

1490 
i
 = 
num_keys
; i > 
ö£πi⁄_poöt
; i--){

1491 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
Àaf_off£t
 + 128 + 
i
*128, 
SEEK_SET
);

1492 
	`‰ód
(&
ãmp_key
, 8, 1, 
Â
);

1493 
	`‰ód
(&
ãmp_vÆue
, 1, 120, 
Â
);

1495 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
Àaf_off£t
 + 128 + (
i
+1)*128, 
SEEK_SET
);

1496 
	`fwrôe
(&
ãmp_key
, 8, 1, 
Â
);

1497 
	`fwrôe
(&
ãmp_vÆue
, 1, 120, 
Â
);

1501 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
Àaf_off£t
 + 128 + 
ö£πi⁄_poöt
*128, 
SEEK_SET
);

1502 
	`fwrôe
(&
key
, 8, 1, 
Â
);

1503 
	`fwrôe
(
vÆue
, 1, 120, 
Â
);

1506 
num_keys
++;

1507 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
Àaf_off£t
 + 12, 
SEEK_SET
);

1508 
	`fwrôe
(&
num_keys
, 4, 1, 
Â
);

1510  
Àaf_off£t
;

1512 
öt64_t
 
	`ö£π_öto_Àaf_∑ge_a·î_•lôtög
(öt64_à
Ω_off£t
, i¡64_à
Àaf_off£t
, i¡64_à
key
, *
vÆue
){

1513 
öt64_t
 
√w_Àaf_off£t
, *
ãmp_keys
, 
èrgë_key
, 
√w_key
, 
√w_rs_off£t
 = 0, 
p_off£t
;

1514 
ö£πi⁄_ödex
, 
•lô
, 
i
, 
j
, 
num_keys
, 
√w_num_keys
;

1515 **
ãmp_vÆues
;

1518 
√w_Àaf_off£t
 = 
	`öô_Àaf_∑ge
(
	`sˇn_‰ì_∑ge
());

1521 
	`ch™ge_‰ì_∑ge
(
√w_Àaf_off£t
);

1522 
	`modify_hódî_∑ge
(
Ω_off£t
);

1525 
ãmp_keys
 = (
öt64_t
 *)
	`mÆloc
(
Àaf_‹dî
 * (int64_t));

1526 
ãmp_vÆues
 =(**)
	`mÆloc
(
Àaf_‹dî
 * (*));

1528 
i
 = 0; i < 
Àaf_‹dî
; i++){

1529 
ãmp_vÆues
[
i
] = (*)
	`mÆloc
(() * 120);

1532 
ö£πi⁄_ödex
 = 0;

1535 
ö£πi⁄_ödex
 < 
Àaf_‹dî
 -1){

1537 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
Àaf_off£t
 + 128 + 128*
ö£πi⁄_ödex
, 
SEEK_SET
);

1538 
	`‰ód
(&
èrgë_key
, 8, 1, 
Â
);

1539 if(
èrgë_key
 >
key
){

1542 
ö£πi⁄_ödex
++;

1547 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
Àaf_off£t
 + 12, 
SEEK_SET
);

1548 
	`‰ód
(&
num_keys
, 4, 1, 
Â
);

1549 
i
 = 0, 
j
 = 0; i < 
num_keys
; i++, j++){

1550 if(
j
 =
ö£πi⁄_ödex
)

1551 
j
++;

1552 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
Àaf_off£t
 + 128 + 128*
i
, 
SEEK_SET
);

1553 
	`‰ód
((
ãmp_keys
+
j
), 8, 1, 
Â
);

1554 
	`‰ód
(*(
ãmp_vÆues
+
j
), 1, 120, 
Â
);

1557 
ãmp_keys
[
ö£πi⁄_ödex
] = 
key
;

1558 
	`°r˝y
(
ãmp_vÆues
[
ö£πi⁄_ödex
], 
vÆue
);

1561 
num_keys
 = 0;

1562 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
Àaf_off£t
 + 12, 
SEEK_SET
);

1563 
	`fwrôe
(&
num_keys
, 4, 1, 
Â
);

1565 
•lô
 = 
	`cut
(
Àaf_‹dî
 - 1);

1568 
i
 = 0; i < 
•lô
; i++){

1569 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
Àaf_off£t
 + 128 + 128*
i
, 
SEEK_SET
);

1570 
	`fwrôe
((
ãmp_keys
+
i
), 8, 1, 
Â
);

1571 
	`fwrôe
(*(
ãmp_vÆues
+
i
), 1, 120, 
Â
);

1572 
num_keys
++;

1575 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
Àaf_off£t
 + 12, 
SEEK_SET
);

1576 
	`fwrôe
(&
num_keys
, 4, 1, 
Â
);

1578 
i
 = 
•lô
, 
j
 = 0; i < 
‹dî
; i++, j++){

1579 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
√w_Àaf_off£t
 + 128 + 128*
j
, 
SEEK_SET
);

1580 
	`fwrôe
((
ãmp_keys
+
i
), 8, 1, 
Â
);

1581 
	`fwrôe
(*(
ãmp_vÆues
+
i
), 1, 120, 
Â
);

1582 
√w_num_keys
++;

1585 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
√w_Àaf_off£t
 + 12, 
SEEK_SET
);

1586 
	`fwrôe
(&
√w_num_keys
, 4, 1, 
Â
);

1589 
	`‰ì
(
ãmp_keys
);

1590 
i
 = 0; i < 
Àaf_‹dî
; i++){

1591 
	`‰ì
(
ãmp_vÆues
[
i
]);

1593 
	`‰ì
(
ãmp_vÆues
);

1597 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
Àaf_off£t
 + 120, 
SEEK_SET
);

1598 
	`fwrôe
(&
√w_Àaf_off£t
, 8, 1, 
Â
);

1600 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
√w_Àaf_off£t
 +120, 
SEEK_SET
);

1601 
	`fwrôe
(&
√w_rs_off£t
, 8, 1, 
Â
);

1604 
i
 = 
num_keys
; i < 
Àaf_‹dî
 -1; i++){

1607 
i
 = 
√w_num_keys
; i < 
Àaf_‹dî
 -1; i++){

1613 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
Àaf_off£t
, 
SEEK_SET
);

1614 
	`‰ód
(&
p_off£t
, 8, 1, 
Â
);

1615 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
√w_Àaf_off£t
, 
SEEK_SET
);

1616 
	`fwrôe
(&
p_off£t
, 8, 1, 
Â
);

1618 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
√w_Àaf_off£t
 + 128, 
SEEK_SET
);

1619 
	`‰ód
(&
√w_key
, 8, 1, 
Â
);

1622  
	`ö£π_öto_∑ª¡
(
Ω_off£t
, 
Àaf_off£t
, 
√w_key
, 
√w_Àaf_off£t
);

1624 
öt64_t
 
	`ö£π_öto_öã∫Æ_∑ge
(öt64_à
Ω_off£t
, i¡64_à
p_off£t
, i¡64_à
À·_off£t
, i¡64_à
key
, i¡64_à
r_off£t
){

1625 
öt64_t
 
ãmp_key
, 
ãmp_off£t
;

1626 
num_keys
, 
i
;

1629 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
p_off£t
 + 12, 
SEEK_SET
);

1630 
	`‰ód
(&
num_keys
, 4, 1, 
Â
);

1634 if(
À·_off£t
 != 0){

1635 
i
 = 
num_keys
; i > (
À·_off£t
-1); i--){

1636 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
p_off£t
 + 128 + 
i
*16, 
SEEK_SET
);

1637 
	`‰ód
(&
ãmp_key
, 8, 1, 
Â
);

1638 
	`‰ód
(&
ãmp_off£t
, 8, 1, 
Â
);

1640 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
p_off£t
 + 128 + (
i
+1)*16, 
SEEK_SET
);

1641 
	`fwrôe
(&
ãmp_key
, 8, 1, 
Â
);

1642 
	`fwrôe
(&
ãmp_off£t
, 8, 1, 
Â
);

1647 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
p_off£t
 + 128 + (
À·_off£t
)*16, 
SEEK_SET
);

1648 
	`fwrôe
(&
key
, 8, 1, 
Â
);

1649 
	`fwrôe
(&
r_off£t
, 8, 1, 
Â
);

1652 
num_keys
++;

1653 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
p_off£t
 + 12, 
SEEK_SET
);

1654 
	`fwrôe
(&
num_keys
, 4, 1, 
Â
);

1656  
Ω_off£t
;

1658 
öt64_t
 
	`ö£π_öto_öã∫Æ_∑ge_a·î_•lôtög
(öt64_à
Ω_off£t
, i¡64_à
ﬁd_off£t
, 
À·_off£t
, i¡64_à
key
, i¡64_à
r_off£t
){

1659 
i
, 
j
, 
•lô
, 
k_¥ime
, 
ﬁd_num_keys
, 
√w_num_keys
;

1660 
öt64_t
 *
ãmp_keys
, *
ãmp_off£ts
, 
√w_öã∫Æ_off£t
, 
chûd_off£t
, 
p_off£t
;

1663 
ãmp_keys
 = (
öt64_t
 *)
	`mÆloc
(
öã∫Æ_‹dî
 * (int64_t));

1664 
ãmp_off£ts
 = (
öt64_t
 *)
	`mÆloc
((
öã∫Æ_‹dî
 + 1) * (int64_t));

1668 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
ﬁd_off£t
 + 12, 
SEEK_SET
);

1669 
	`‰ód
(&
ﬁd_num_keys
, 4, 1, 
Â
);

1672 
i
 = 0, 
j
 = 0; i < 
ﬁd_num_keys
 + 1; i++, j++){

1673 if(
j
 =
À·_off£t
 + 1)

1674 
j
++;

1675 if(
i
 == 0)

1676 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
ﬁd_off£t
 + 120, 
SEEK_SET
);

1678 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
ﬁd_off£t
 + 128 + 8 + 16*(
i
-1), 
SEEK_SET
);

1680 
	`‰ód
((
ãmp_off£ts
+
j
), 8, 1, 
Â
);

1683 
i
 = 0, 
j
 = 0; i < 
ﬁd_num_keys
; i++, j++){

1684 if(
j
 =
À·_off£t
)

1685 
j
++;

1686 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
ﬁd_off£t
 + 128 + 16*
i
, 
SEEK_SET
);

1687 
	`‰ód
((
ãmp_keys
+
j
), 8, 1, 
Â
);

1689 
ãmp_off£ts
[
À·_off£t
 + 1] = 
r_off£t
;

1690 
ãmp_keys
[
À·_off£t
] = 
key
;

1694 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
ﬁd_off£t
, 
SEEK_SET
);

1695 
	`‰ód
(&
p_off£t
, 8, 1, 
Â
);

1697 
•lô
 = 
	`cut
(
öã∫Æ_‹dî
);

1699 
√w_öã∫Æ_off£t
 = 
	`öô_öã∫Æ_∑ge
(
	`sˇn_‰ì_∑ge
(), 
p_off£t
);

1702 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
√w_öã∫Æ_off£t
 + 12, 
SEEK_SET
);

1703 
	`‰ód
(&
√w_num_keys
, 4, 1, 
Â
);

1705 
i
 = 0; i < 
•lô
 - 1; i++){

1706 if(
i
 == 0){

1707 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
ﬁd_off£t
 + 120, 
SEEK_SET
);

1708 
	`fwrôe
((
ãmp_off£ts
 + 
i
), 8, 1, 
Â
);

1709 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
ﬁd_off£t
 + 128, 
SEEK_SET
);

1710 
	`fwrôe
((
ãmp_keys
 + 
i
), 8, 1, 
Â
);

1713 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
ﬁd_off£t
 + 128 + 16*(
i
-1Ë+ 8, 
SEEK_SET
);

1714 
	`fwrôe
((
ãmp_off£ts
 + 
i
), 8, 1, 
Â
);

1715 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
ﬁd_off£t
 + 128 + 16*(
i
-1), 
SEEK_SET
);

1716 
	`fwrôe
((
ãmp_keys
 + 
i
), 8, 1, 
Â
);

1718 
ﬁd_num_keys
++;

1720 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
ﬁd_off£t
 + 128 + 16*(
i
-1Ë+ 8, 
SEEK_SET
);

1721 
	`fwrôe
((
ãmp_off£ts
 + 
i
), 8, 1, 
Â
);

1722 
k_¥ime
 = 
ãmp_keys
[
•lô
 - 1];

1724 ++
i
, 
j
 = 0; i < 
öã∫Æ_‹dî
; i++, j++){

1725 if(
j
 == 0){

1726 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
√w_öã∫Æ_off£t
 + 120, 
SEEK_SET
);

1727 
	`fwrôe
((
ãmp_off£ts
 + 
i
), 8, 1, 
Â
);

1728 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
√w_öã∫Æ_off£t
 + 128, 
SEEK_SET
);

1729 
	`fwrôe
((
ãmp_keys
 + 
i
), 8, 1, 
Â
);

1732 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
√w_öã∫Æ_off£t
 + 128 + 16*(
j
-1Ë+ 8, 
SEEK_SET
);

1733 
	`fwrôe
((
ãmp_off£ts
 + 
i
), 8, 1, 
Â
);

1734 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
√w_öã∫Æ_off£t
 + 128 + 16*(
j
-1), 
SEEK_SET
);

1735 
	`fwrôe
((
ãmp_keys
 + 
i
), 8, 1, 
Â
);

1737 
√w_num_keys
;

1739 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
√w_öã∫Æ_off£t
 + 128 + 16*(
j
-1Ë+ 8, 
SEEK_SET
);

1740 
	`fwrôe
((
ãmp_off£ts
 + 
i
), 8, 1, 
Â
);

1743 
	`‰ì
(
ãmp_keys
);

1744 
	`‰ì
(
ãmp_off£ts
);

1749 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
ﬁd_off£t
 + 12, 
SEEK_SET
);

1750 
	`fwrôe
(&
ﬁd_num_keys
, 4, 1, 
Â
);

1751 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
√w_öã∫Æ_off£t
 + 12, 
SEEK_SET
);

1752 
	`fwrôe
(&
√w_num_keys
, 4, 1, 
Â
);

1755 
i
 = 0; i <
√w_num_keys
; i++){

1757 if(
i
 == 0){

1758 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
√w_öã∫Æ_off£t
 + 120, 
SEEK_SET
);

1761 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
√w_öã∫Æ_off£t
 + 128 + 16*(
i
-1Ë+ 8, 
SEEK_SET
);

1763 
	`‰ód
(&
chûd_off£t
, 8, 1, 
Â
);

1764 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
chûd_off£t
, 
SEEK_SET
);

1765 
	`fwrôe
(&
√w_öã∫Æ_off£t
, 8, 1, 
Â
);

1769  
	`ö£π_öto_∑ª¡_∑ge
(
Ω_off£t
, 
ﬁd_off£t
, 
k_¥ime
, 
√w_öã∫Æ_off£t
);

1771 
öt64_t
 
	`ö£π_öto_∑ª¡_∑ge
(öt64_à
Ω_off£t
, i¡64_à
l_off£t
, i¡64_à
key
, i¡64_à
r_off£t
){

1772 
öt64_t
 
À·_off£t
, 
p_off£t
;

1773 
num_keys
;

1776 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
l_off£t
, 
SEEK_SET
);

1777 
	`‰ód
(&
p_off£t
, 8, 1, 
Â
);

1781 if(
p_off£t
 =
NULL
)

1782  
	`ö£π_öto_√w_roŸ_∑ge
(
l_off£t
, 
key
, 
r_off£t
);

1787 
À·_off£t
 = 
	`gë_À·_off£t
(
p_off£t
, 
l_off£t
);

1791 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
p_off£t
 + 12, 
SEEK_SET
);

1792 
	`‰ód
(&
num_keys
, 4, 1, 
Â
);

1794 if(
num_keys
 < 
öã∫Æ_‹dî
 -1)

1795  
	`ö£π_öto_öã∫Æ_∑ge
(
Ω_off£t
, 
p_off£t
, 
À·_off£t
, 
key
, 
r_off£t
);

1799  
	`ö£π_öto_öã∫Æ_∑ge_a·î_•lôtög
(
Ω_off£t
, 
p_off£t
, 
À·_off£t
, 
key
, 
r_off£t
);

1801 
öt64_t
 
	`ö£π_öto_√w_roŸ_∑ge
(öt64_à
l_off£t
, i¡64_à
key
, i¡64_à
r_off£t
){

1802 
öt64_t
 
√w_Ω_off£t
 = 
	`sˇn_‰ì_∑ge
();

1803 
öt64_t
 
p_off£t
 = 0;

1804 
is_Àaf
 = 0, 
num_keys
 = 1;

1807 
	`ch™ge_‰ì_∑ge
(
√w_Ω_off£t
);

1808 
	`modify_hódî_∑ge
(
√w_Ω_off£t
);

1811 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
√w_Ω_off£t
, 
SEEK_SET
);

1813 
	`fwrôe
(&
p_off£t
, 8, 1, 
Â
);

1814 
	`fwrôe
(&
is_Àaf
, 4, 1, 
Â
);

1815 
	`fwrôe
(&
num_keys
, 4, 1, 
Â
);

1818 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
√w_Ω_off£t
 + 120, 
SEEK_SET
);

1820 
	`fwrôe
(&
l_off£t
, 8, 1, 
Â
);

1822 
	`fwrôe
(&
key
, 8, 1, 
Â
);

1824 
	`fwrôe
(&
r_off£t
, 8, 1, 
Â
);

1827 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
l_off£t
, 
SEEK_SET
);

1828 
	`fwrôe
(&
√w_Ω_off£t
, 8, 1, 
Â
);

1831 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
r_off£t
, 
SEEK_SET
);

1832 
	`fwrôe
(&
√w_Ω_off£t
, 8, 1, 
Â
);

1834  
√w_Ω_off£t
;

1839 
öt64_t
 
	`°¨t_√w_åì_∑ge
(öt64_à
key
, *
vÆue
){

1841 
öt64_t
 
Ω_off£t
 = 
	`sˇn_‰ì_∑ge
();

1842 
num_keys
;

1845 
	`öô_Àaf_∑ge
(
Ω_off£t
);

1847 
	`ch™ge_‰ì_∑ge
(
Ω_off£t
);

1849 
	`modify_hódî_∑ge
(
Ω_off£t
);

1852 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
Ω_off£t
 + 128, 
SEEK_SET
);

1853 
	`fwrôe
(&
key
, 8, 1, 
Â
);

1854 
	`fwrôe
(
vÆue
, 1, 120, 
Â
);

1857 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
Ω_off£t
 + 12, 
SEEK_SET
);

1858 
	`‰ód
(&
num_keys
, 4, 1, 
Â
);

1859 
num_keys
++;

1860 
	`f£eko
(
Â
, 
deÁu…_off£t
 + 
Ω_off£t
 + 12, 
SEEK_SET
);

1861 
	`fwrôe
(&
num_keys
, 4, 1, 
Â
);

1864  
Ω_off£t
;

1871 
	`ö£π
(
öt64_t
 
key
, *
vÆue
){

1872 
ªc‹d
 *
poöãr
;

1873 
öt64_t
 
Ω_off£t
,
Õ_off£t
;

1874 
num_keys
;

1877 
	`f£eko
(
Â
, 
deÁu…_off£t
+8, 
SEEK_SET
);

1878 
	`‰ód
(&
Ω_off£t
, 8, 1, 
Â
);

1881 if(
	`föd
(
key
Ë!
NULL
)

1890 if(
Ω_off£t
 == 0){

1892 
Ω_off£t
 = 
	`°¨t_√w_åì_∑ge
(
key
, 
vÆue
);

1894 
	`modify_hódî_∑ge
(
Ω_off£t
);

1900 
Õ_off£t
 = 
	`föd_Àaf_∑ge
(
Ω_off£t
, 
key
);

1905 
	`f£eko
(
Â
, 
deÁu…_off£t
+
Õ_off£t
+12, 
SEEK_SET
);

1906 
	`‰ód
(&
num_keys
, 4, 1, 
Â
);

1908 if(
num_keys
 < 
Àaf_‹dî
 - 1){

1910 
	`ö£π_öto_Àaf_∑ge
(
Õ_off£t
, 
key
, 
vÆue
);

1916 
	`ö£π_öto_Àaf_a·î_•lôtög
(
Ω_off£t
, 
Õ_off£t
, 
key
, 
vÆue
);

1925 
	`Àaf_∑ge_judge
(
öt64_t
 
off£t
){

1926 
is_Àaf
;

1929 
	`f£eko
(
Â
, 
deÁu…_off£t
+8, 
SEEK_SET
);

1930 
	`‰ód
(&
is_Àaf
, 4, 1, 
Â
);

1932 if(
is_Àaf
)

1941 
öt64_t
 
	`föd_Àaf_∑ge
(öt64_à
Ω_off£t
, i¡64_à
key
){

1942 
öt64_t
 
off£t
 = 
Ω_off£t
, 
èrgë_key
;

1943 
num_keys
,
i
 = 0;

1946 if(
off£t
 == 0){

1947  
off£t
;

1949 !
	`Àaf_∑ge_judge
(
off£t
)){

1950 
i
 = 0;

1952 
	`f£eko
(
Â
, 
deÁu…_off£t
+
off£t
+12, 
SEEK_SET
);

1953 
	`‰ód
(&
num_keys
, 4, 1, 
Â
);

1955 
i
 < 
num_keys
){

1957 
	`f£eko
(
Â
, 
deÁu…_off£t
+
off£t
+128+(16*
i
), 
SEEK_SET
);

1958 
	`‰ód
(&
èrgë_key
, 8, 1, 
Â
);

1960 if(
key
 >
èrgë_key
)

1961 
i
++;

1966 
	`f£eko
(
Â
, 
deÁu…_off£t
+
off£t
+128+(16*
i
)+8, 
SEEK_SET
);

1967 
	`‰ód
(&
off£t
, 8, 1, 
Â
);

1970  
off£t
;

1976 * 
	`föd
(
öt64_t
 
key
){

1977 
öt64_t
 
Ω_off£t
,
Õ_off£t
,
èrgë_key
;

1978 
i
 = 0, 
num_keys
;

1979 
vÆue
[120];

1982 
	`f£eko
(
Â
, 
deÁu…_off£t
+8, 
SEEK_SET
);

1983 
	`‰ód
(&
Ω_off£t
, 8, 1, 
Â
);

1986 
Õ_off£t
 = 
	`föd_Àaf_∑ge
(
Ω_off£t
, 
key
);

1989 if(
Õ_off£t
 == 0)

1990  
NULL
;

1993 
	`f£eko
(
Â
, 
deÁu…_off£t
+
Õ_off£t
+12, 
SEEK_SET
);

1994 
	`‰ód
(&
num_keys
, 4, 1, 
Â
);

1996 
i
 = 0; i < 
num_keys
; i++){

1998 
	`f£eko
(
Â
, 
deÁu…_off£t
+
Õ_off£t
+128+(
i
*128), 
SEEK_SET
);

1999 
	`‰ód
(&
èrgë_key
, 8, 1, 
Â
);

2001 if(
èrgë_key
 =
key
)

2004 if(
i
 =
num_keys
)

2005  
NULL
;

2009 
	`f£eko
(
Â
, 
deÁu…_off£t
+
Õ_off£t
+128+(
i
*128)+8, 
SEEK_SET
);

2010 
	`‰ód
(&
vÆue
, 1, 120, 
Â
);

2012  
vÆue
;

2023 
	`dñëe
(
öt64_t
 
key
){

	@src/main.c

1 
	~"b±.h
"

5 
	$maö
–
¨gc
, ** 
¨gv
 ) {

7 * 
öput_fûe
;

8 
FILE
 * 
Â
;

9 
node
 * 
roŸ
;

10 
öput
, 
ønge2
;

11 
ö°ru˘i⁄
;

12 
li˚n£_∑π
;

14 
roŸ
 = 
NULL
;

15 
vîbo£_ouçut
 = 
Ál£
;

17 i‡(
¨gc
 > 1) {

18 
‹dî
 = 
	`©oi
(
¨gv
[1]);

19 i‡(
‹dî
 < 
MIN_ORDER
 || ordî > 
MAX_ORDER
) {

20 
	`Ârötf
(
°dîr
, "InvÆid ordî: %d .\n\n", 
‹dî
);

21 
	`ußge_3
();

22 
	`exô
(
EXIT_FAILURE
);

26 
	`li˚n£_nŸi˚
();

27 
	`ußge_1
();

28 
	`ußge_2
();

30 i‡(
¨gc
 > 2) {

31 
öput_fûe
 = 
¨gv
[2];

32 
Â
 = 
	`f›í
(
öput_fûe
, "r");

33 i‡(
Â
 =
NULL
) {

34 
	`≥º‹
("Failure open input file.");

35 
	`exô
(
EXIT_FAILURE
);

37 !
	`„of
(
Â
)) {

38 
	`fsˇnf
(
Â
, "%d\n", &
öput
);

39 
roŸ
 = 
	`ö£π_åì
‘oŸ, 
öput
, input);

41 
	`f˛o£
(
Â
);

42 
	`¥öt_åì
(
roŸ
);

45 
	`¥ötf
("> ");

46 
	`sˇnf
("%c", &
ö°ru˘i⁄
Ë!
EOF
) {

47 
ö°ru˘i⁄
) {

49 
	`sˇnf
("%d", &
öput
);

50 
roŸ
 = 
	`dñëe_åì
‘oŸ, 
öput
);

51 
	`¥öt_åì
(
roŸ
);

54 
	`sˇnf
("%d", &
öput
);

55 
roŸ
 = 
	`ö£π_åì
‘oŸ, 
öput
, input);

56 
	`¥öt_åì
(
roŸ
);

60 
	`sˇnf
("%d", &
öput
);

61 
	`föd_™d_¥öt
(
roŸ
, 
öput
, 
ö°ru˘i⁄
 == 'p');

64 
	`sˇnf
("%d %d", &
öput
, &
ønge2
);

65 i‡(
öput
 > 
ønge2
) {

66 
tmp
 = 
ønge2
;

67 
ønge2
 = 
öput
;

68 
öput
 = 
tmp
;

70 
	`föd_™d_¥öt_ønge
(
roŸ
, 
öput
, 
ønge2
, 
ö°ru˘i⁄
 == 'p');

73 
	`¥öt_Àaves
(
roŸ
);

76 
	`gëch¨
() != ()'\n');

77  
EXIT_SUCCESS
;

80 
	`¥öt_åì
(
roŸ
);

83 
vîbo£_ouçut
 = !verbose_output;

86 i‡(
roŸ
)

87 
roŸ
 = 
	`de°roy_åì
(root);

88 
	`¥öt_åì
(
roŸ
);

91 
	`ußge_2
();

94 
	`gëch¨
() != ()'\n');

95 
	`¥ötf
("> ");

97 
	`¥ötf
("\n");

99  
EXIT_SUCCESS
;

100 
	}
}

	@
1
.
0
3
35
include/bpt.h
src/bpt.c
src/main.c
