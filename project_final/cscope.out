cscope 15 $HOME/mysql/Lab/project_final -q 0000000325 0000049869
	@include/bpt.h

1 #i‚de‡
__BPT_H__


2 
	#__BPT_H__


	)

4 
›í_èbÀ
(c⁄° * 
fûíame
);

5 * 
föd
(
èbÀ_id
, 
uöt64_t
 
key
);

6 
ö£π
(
èbÀ_id
, 
uöt64_t
 
key
, c⁄° * 
vÆue
);

7 
dñëe
(
èbÀ_id
, 
uöt64_t
 
key
);

9 
¥öt_åì
(
èbÀ_id
);

13 
öô_db
(
num_buf
);

15 
˛o£_èbÀ
(
èbÀ_id
);

17 
shutdown_db
();

	@include/file.h

1 
	~<°ddef.h
>

2 
	~<öây≥s.h
>

4 
	#BPTREE_INTERNAL_ORDER
 249

5 
	#BPTREE_LEAF_ORDER
 32

6 

	)

7 
	#PAGE_SIZE
 4096

	)

9 
	#SIZE_KEY
 8

	)

10 
	#SIZE_VALUE
 120

	)

11 
	#SIZE_RECORD
 (
SIZE_KEY
 + 
SIZE_VALUE
)

	)

13 
	#BPTREE_MAX_NODE
 (1024 * 1024)

14 

	)

15 
	#OUTPUT_ORDER
 16

	)

16 
	#SIZE_LOG
 280

	)

28 
	s_Rec‹d
 {

29 
uöt64_t
 
	mkey
;

30 
	mvÆue
[
SIZE_VALUE
];

31 } 
	tRec‹d
;

33 
	s_I¡î«lRec‹d
 {

34 
uöt64_t
 
	mkey
;

35 
off_t
 
	moff£t
;

36 } 
	tI¡î«lRec‹d
;

39 
	s_Resu…
 {

40 
uöt64_t
 
	mkey1
;

41 
	mvÆue1
[
SIZE_VALUE
];

42 
uöt64_t
 
	mkey2
;

43 
	mvÆue2
[
SIZE_VALUE
];

44 } 
	tResu…
;

46 
	s_Page
 {

47 
	mbyãs
[
PAGE_SIZE
];

50 
off_t
 
	mfûe_off£t
;

51 } 
	tPage
;

53 
	s_FªePage
 {

54 
off_t
 
	m√xt
;

55 
	mª£rved
[
PAGE_SIZE
 - 8];

58 
off_t
 
	mfûe_off£t
;

59 } 
	tFªePage
;

61 
	s_HódîPage
 {

62 
off_t
 
	m‰ìli°
;

63 
off_t
 
	mroŸ_off£t
;

64 
uöt64_t
 
	mnum_∑ges
;

65 
off_t
 
	m∑ge_l¢
;

66 
	mª£rved
[
PAGE_SIZE
 - 32];

69 
off_t
 
	mfûe_off£t
;

70 } 
	tHódîPage
;

72 
	#INTERNAL_KEY
(
n
, 
i
Ë(“)->
úec‹ds
[(i)+1].
key
)

	)

73 
	#INTERNAL_OFFSET
(
n
, 
i
Ë(“)->
úec‹ds
[(i)].
off£t
)

	)

74 
	s_I¡î«lPage
 {

77 
off_t
 
	m∑ª¡
;

78 
	mis_Àaf
;

79 
	mnum_keys
;

80 
	mª£rved_1
[8];

81 
off_t
 
	m∑ge_l¢
;

82 
	mª£rved_2
[112 - 32];

83 
I¡î«lRec‹d
 
	múec‹ds
[
BPTREE_INTERNAL_ORDER
];

85 
	m•a˚
[
PAGE_SIZE
];

88 
off_t
 
	mfûe_off£t
;

89 } 
	tI¡î«lPage
;

91 
	#LEAF_KEY
(
n
, 
i
Ë(“)->
ªc‹ds
[(i)].
key
)

	)

92 
	#LEAF_VALUE
(
n
, 
i
Ë(“)->
ªc‹ds
[(i)].
vÆue
)

	)

93 
	s_LófPage
 {

96 
off_t
 
	m∑ª¡
;

97 
	mis_Àaf
;

98 
	mnum_keys
;

99 
	mª£rved_1
[8];

100 
off_t
 
	m∑ge_l¢
;

101 
	mª£rved_2
[120 - 32];

102 
off_t
 
	msiblög
;

103 
Rec‹d
 
	mªc‹ds
[
BPTREE_LEAF_ORDER
-1];

105 
	m•a˚
[
PAGE_SIZE
];

109 
off_t
 
	mfûe_off£t
;

110 } 
	tLófPage
;

112 
	s_NodePage
 {

115 
off_t
 
	m∑ª¡
;

116 
	mis_Àaf
;

117 
	mnum_keys
;

118 
	mª£rved_1
[8];

119 
off_t
 
	m∑ge_l¢
;

121 
	m•a˚
[
PAGE_SIZE
];

125 
off_t
 
	mfûe_off£t
;

126 } 
	tNodePage
;

129 
	#RESULT_KEY1
(
n
, 
i
Ë(“)->
ªsu…s
[(i)].
key1
)

	)

130 
	#RESULT_VALUE1
(
n
, 
i
Ë(“)->
ªsu…s
[(i)].
vÆue1
)

	)

131 
	#RESULT_KEY2
(
n
, 
i
Ë(“)->
ªsu…s
[(i)].
key2
)

	)

132 
	#RESULT_VALUE2
(
n
, 
i
Ë(“)->
ªsu…s
[(i)].
vÆue2
)

	)

133 
	s_OuçutPage
 {

135 
Resu…
 
	mªsu…s
[
OUTPUT_ORDER
];

136 
	m•a˚
[
PAGE_SIZE
];

140 
off_t
 
	mfûe_off£t
;

141 } 
	tOuçutPage
;

144 
›í_èbÀ
(c⁄° * 
fûíame
);

148 
˛o£_db
(
èbÀ_id
);

151 
off_t
 
gë_‰ì_∑ge
(
èbÀ_id
);

154 
put_‰ì_∑ge
(
èbÀ_id
, 
off_t
 
∑ge_off£t
);

157 
ex∑nd_fûe
(
èbÀ_id
, 
size_t
 
˙t_∑ge_to_ex∑nd
);

160 
lﬂd_∑ge
(
èbÀ_id
, 
off_t
 
off£t
, 
Page
* 
∑ge
);

163 
Êush_∑ge
(
èbÀ_id
, 
Page
* 
∑ge
);

165 
HódîPage
 
dbhódî
[10];

169 
	s_Buf„r
{

170 
Page
 *
	m‰ame
;

171 
	mèbÀ_id
;

172 
off_t
 
	m∑ge_off£t
;

173 
	mis_dúty
;

175 
	mªfbô
;

176 } 
	tBuf„r
;

179 
lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
off_t
 
off£t
, 
Page
* 
∑ge
);

182 
Page
* 
check_buf„r_f‹_lﬂd
(
èbÀ_id
, 
off_t
 
off£t
);

185 
check_buf„r_f‹_Êush
(
èbÀ_id
, 
off_t
 
off£t
);

187 
ª∂a˚_∑ge
(
FILE
 *
fûe
);

190 
Êush_∑ge_to_buf„r
(
èbÀ_id
, 
Page
* 
∑ge
);

193 
joö_èbÀ
(
èbÀ_id_1
, 
èbÀ_id_2
, *
∑th«me
);

195 
èbÀ_öfo
(
èbÀ_id
, 
uöt64_t
 *
num_keys
, uöt64_à*
mö_key
, uöt64_à*
max_key
);

197 
wrôe_ouçut_buf„r
(
FILE
 *
fûe
, 
uöt64_t
 
key1
, *
vÆue1
, uöt64_à
key2
, *
vÆue2
);

199 
lﬂd_ouçut_∑ge
(
Page
 *
∑ge
);

201 
Êush_ouçut_∑ge
(
FILE
 *
fûe
, 
Page
 *
∑ge
);

203 
sync_buf„r
(
FILE
 *
fûe
);

206 
	s_LogRec‹d
{

208 
off_t
 
	ml¢
;

209 
off_t
 
	m¥ev_l¢
;

210 
	mxid
;

211 
	mty≥
;

217 
	mèbÀ_id
;

218 
	m≤um
;

219 
	moff£t
;

220 
	mÀngth
;

221 
	mﬁd_image
[120];

222 
	m√w_image
[120];

224 }
	tLogRec‹d
;

228 
begö_å™ß˘i⁄
();

233 
commô_å™ß˘i⁄
();

237 
ab‹_å™ß˘i⁄
();

241 
upd©e
(
èbÀ_id
, 
öt64_t
 
key
, *
vÆue
);

243 
¸óã_log
(
ty≥
, 
èbÀ_id
, 
≤um
, 
off£t
, 
Àngth
, *
ﬁd_image
, *
√w_image
);

245 
Êush_log
(
size
);

247 
ªcovîy
();

249 
execuã_wÆ
(
∑ge_l¢
);

251 
ex˛ude_hódî
();

253 
ex˛ude_öã∫Æ
();

	@src/bpt.c

4 
	#Vîsi⁄
 "1.14"

	)

57 
	~<°dio.h
>

58 
	~<°dlib.h
>

59 
	~<°dboﬁ.h
>

60 
	~<°döt.h
>

61 
	~<°rög.h
>

62 
	~<öây≥s.h
>

63 
	~<as£π.h
>

64 
	~<f˙é.h
>

65 
	~<uni°d.h
>

66 
	~"b±.h
"

67 
	~"fûe.h
"

68 #ifde‡
WINDOWS


69 
	#boﬁ
 

	)

70 
	#Ál£
 0

	)

71 
	#åue
 1

	)

78 
	#MIN_ORDER
 3

	)

79 
	#MAX_ORDER
 256

	)

81 
	#SIZE_LOG_BUFFER
 3

	)

84 
	#LICENSE_FILE
 "LICENSE.txt"

	)

85 
	#LICENSE_WARRANTEE
 0

	)

86 
	#LICENSE_WARRANTEE_START
 592

	)

87 
	#LICENSE_WARRANTEE_END
 624

	)

88 
	#LICENSE_CONDITIONS
 1

	)

89 
	#LICENSE_CONDITIONS_START
 70

	)

90 
	#LICENSE_CONDITIONS_END
 625

	)

93 
HódîPage
 
dbhódî
[10];

94 
dbfûe
[10];

106 
	g‹dî_öã∫Æ
 = 
BPTREE_INTERNAL_ORDER
;

107 
	g‹dî_Àaf
 = 
BPTREE_LEAF_ORDER
;

114 
boﬁ
 
	gvîbo£_ouçut
 = 
Ál£
;

117 
Buf„r
 *
	gbuf_mgr
;

118 
	gbuf_size
 = -1;

119 
	g˛ock_h™d
 = 0;

120 
	gèrgë_buf
 = 0;

124 
LogRec‹d
 
	glog_buf
[
SIZE_LOG_BUFFER
];

127 
uöt64_t
 
	gxid
 = 0;

128 
uöt64_t
 
	gl¢
 = 
SIZE_LOG
;

129 
	glog
 = -1;

130 
	glog_h™d
 = 0;

136 
li˚n£_nŸi˚
( );

137 
¥öt_li˚n£
–
li˚n˚_∑π
 );

138 
ußge_1
( );

139 
ußge_2
( );

140 
föd_™d_¥öt
(
èbÀ_id
, 
uöt64_t
 
key
);

141 
boﬁ
 
föd_Àaf
(
èbÀ_id
, 
uöt64_t
 
key
, 
LófPage
* 
out_Àaf_node
);

144 
°¨t_√w_åì
(
èbÀ_id
, 
uöt64_t
 
key
, c⁄° * 
vÆue
);

145 
ö£π_öto_Àaf
(
èlbe_id
, 
LófPage
* 
Àaf_node
, 
uöt64_t
 
key
, c⁄° * 
vÆue
);

146 
ö£π_öto_Àaf_a·î_•lôtög
(
èbÀ_id
, 
LófPage
* 
Àaf_node
, 
uöt64_t
 
key
, c⁄° * 
vÆue
);

147 
ö£π_öto_∑ª¡
(
èbÀ_id
, 
NodePage
* 
À·
, 
uöt64_t
 
key
, NodePage* 
right
);

148 
ö£π_öto_√w_roŸ
(
èbÀ_id
, 
NodePage
* 
À·
, 
uöt64_t
 
key
, NodePage* 
right
);

149 
gë_À·_ödex
(
I¡î«lPage
* 
∑ª¡
, 
off_t
 
À·_off£t
);

150 
ö£π_öto_node
(
I¡î«lPage
 * 
∑ª¡
, 
À·_ödex
, 
uöt64_t
 
key
, 
off_t
 
right_off£t
);

151 
ö£π_öto_node_a·î_•lôtög
(
èbÀ_id
, 
I¡î«lPage
* 
∑ª¡
, 
À·_ödex
, 
uöt64_t
 
key
, 
off_t
 
right_off£t
);

154 
gë_√ighb‹_ödex
(
èbÀ_id
, 
NodePage
* 
node_∑ge
);

155 
adju°_roŸ
(
èbÀ_id
);

156 
cﬂÀs˚_nodes
(
èbÀ_id
, 
NodePage
* 
node_∑ge
, NodePage* 
√ighb‹_∑ge
,

157 
√ighb‹_ödex
, 
k_¥ime
);

158 
ªdi°ribuã_nodes
(
èbÀ_id
, 
NodePage
* 
node_∑ge
, NodePage* 
√ighb‹_∑ge
,

159 
√ighb‹_ödex
,

160 
k_¥ime_ödex
, 
k_¥ime
);

161 
dñëe_íåy
(
èbÀ_id
, 
NodePage
* 
node_∑ge
, 
uöt64_t
 
key
);

170 
	$li˚n£_nŸi˚
( ) {

171 
	`¥ötf
("bpt version %s -- Copyright (C) 2010 Amittai Aviram "

172 "hâp://www.amôèi.com\n", 
Vîsi⁄
);

173 
	`¥ötf
("ThisÖrogram comes with ABSOLUTELY NO WARRANTY; for details "

177 
	}
}

182 
	$¥öt_li˚n£
–
li˚n£_∑π
 ) {

183 
°¨t
, 
íd
, 
löe
;

184 
FILE
 * 
Â
;

185 
buf„r
[0x100];

187 
li˚n£_∑π
) {

188 
LICENSE_WARRANTEE
:

189 
°¨t
 = 
LICENSE_WARRANTEE_START
;

190 
íd
 = 
LICENSE_WARRANTEE_END
;

192 
LICENSE_CONDITIONS
:

193 
°¨t
 = 
LICENSE_CONDITIONS_START
;

194 
íd
 = 
LICENSE_CONDITIONS_END
;

200 
Â
 = 
	`f›í
(
LICENSE_FILE
, "r");

201 i‡(
Â
 =
NULL
) {

202 
	`≥º‹
("print_license: fopen");

203 
	`exô
(
EXIT_FAILURE
);

205 
löe
 = 0;Üöê< 
°¨t
;Üine++)

206 
	`fgës
(
buf„r
, (buf„r), 
Â
);

207  ; 
löe
 < 
íd
;Üine++) {

208 
	`fgës
(
buf„r
, (buf„r), 
Â
);

209 
	`¥ötf
("%s", 
buf„r
);

211 
	`f˛o£
(
Â
);

212 
	}
}

216 
	$ußge_1
( ) {

217 
	`¥ötf
("B+ Tªêo‡Ordî %d(I¡î«l).\n", 
‹dî_öã∫Æ
);

218 
	`¥ötf
("Following Silberschatz, Korth, Sidarshan, Database Concepts, "

223 
	`¥ötf
("(%d <‹dî <%d).\n", 
MIN_ORDER
, 
MAX_ORDER
);

224 
	`¥ötf
("To start with input fromá file ofÇewline-delimited integers, \n"

227 
	}
}

231 
	$ußge_2
( ) {

232 
	`¥ötf
("Enterány ofÅhe following commandsáfterÅheÖrompt > :\n"

248 
	}
}

252 
	$›í_èbÀ
(c⁄° * 
fûíame
) {

253 
i
, 
èbÀ_id
;

254 
size_t
 
Àn
;

256 
Àn
 = 
	`°æí
(
fûíame
);

258 if(()
Àn
 == 5){

259 
èbÀ_id
 = 
fûíame
[4];

260 
i
 = 
èbÀ_id
 - '0' - 1;

262 if(()
Àn
 == 6){

263 
i
 = 9;

267 
	`¥ötf
("Wrong input!\n");

271 
dbfûe
[
i
] = 
	`›í
(
fûíame
, 
O_RDWR
);

272 i‡(
dbfûe
[
i
] < 0) {

274 
dbfûe
[
i
] = 
	`›í
(
fûíame
, 
O_CREAT
|
O_RDWR
, 
S_IRUSR
|
S_IWUSR
);

275 i‡(
dbfûe
[
i
] < 0) {

276 
	`as£π
("failedÅo createÇew db file");

280 
	`mem£t
((
dbhódî
+
i
), 0, 
PAGE_SIZE
);

281 
dbhódî
[
i
].
‰ìli°
 = 0;

282 
dbhódî
[
i
].
roŸ_off£t
 = 0;

283 
dbhódî
[
i
].
num_∑ges
 = 1;

284 
dbhódî
[
i
].
fûe_off£t
 = 0;

285 
dbhódî
[
i
].
∑ge_l¢
 = -1;

286 
	`Êush_∑ge_to_buf„r
(
i
+1, (
Page
*)(
dbhódî
 + i));

289 
	`lﬂd_∑ge_‰om_buf„r
(
i
+1, 0, (
Page
*)(
dbhódî
+i));

292 if(
dbhódî
[
i
].
num_∑ges
 == 0){

293 
dbhódî
[
i
].
num_∑ges
 = 1;

294 
	`Êush_∑ge_to_buf„r
(
i
+1, (
Page
*)(
dbhódî
 + i));

296 
dbhódî
[
i
].
fûe_off£t
 = 0;

299  
i
+1;

300 
	}
}

303 
	$˛o£_db
(
èbÀ_id
) {

304 
	`˛o£
(
dbfûe
[
èbÀ_id
 - 1]);

305 
	}
}

320 
off_t
 
	gqueue
[
BPTREE_MAX_NODE
];

321 
	$¥öt_åì
(
èbÀ_id
) {

323 
i
;

324 
‰⁄t
 = 0;

325 
ª¨
 = 0;

327 i‡(
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
 == 0) {

328 
	`¥ötf
("EmptyÅree.\n");

332 
queue
[
ª¨
] = 
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
;

333 
ª¨
++;

334 
queue
[
ª¨
] = 0;

335 
ª¨
++;

336 
‰⁄t
 < 
ª¨
) {

337 
off_t
 
∑ge_off£t
 = 
queue
[
‰⁄t
];

338 
‰⁄t
++;

340 i‡(
∑ge_off£t
 == 0) {

341 
	`¥ötf
("\n");

343 i‡(
‰⁄t
 =
ª¨
) ;

346 
queue
[
ª¨
] = 0;

347 
ª¨
++;

351 
NodePage
 
node_∑ge
;

352 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
∑ge_off£t
, (
Page
*)&
node_∑ge
);

353 i‡(
node_∑ge
.
is_Àaf
 == 1) {

355 
LófPage
* 
Àaf_node
 = (LófPage*)&
node_∑ge
;

356 
i
 = 0; i < 
Àaf_node
->
num_keys
; i++) {

357 
	`¥ötf
("%" 
PRIu64
 " ", 
	`LEAF_KEY
(
Àaf_node
, 
i
));

359 
	`¥ötf
("| ");

362 
I¡î«lPage
* 
öã∫Æ_node
 = (I¡î«lPage*)&
node_∑ge
;

363 
i
 = 0; i < 
öã∫Æ_node
->
num_keys
; i++) {

364 
	`¥ötf
("%" 
PRIu64
 " ", 
	`INTERNAL_KEY
(
öã∫Æ_node
, 
i
));

365 
queue
[
ª¨
] = 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, 
i
);

366 
ª¨
++;

368 
queue
[
ª¨
] = 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, 
i
);

369 
ª¨
++;

370 
	`¥ötf
("| ");

373 
	}
}

378 
	$föd_™d_¥öt
(
èbÀ_id
, 
uöt64_t
 
key
) {

379 * 
vÆue_found
 = 
NULL
;

380 
vÆue_found
 = 
	`föd
(
èbÀ_id
, 
key
);

381 i‡(
vÆue_found
 =
NULL
) {

382 
	`¥ötf
("Rec‹dÇŸ found undî key %" 
PRIu64
 ".\n", 
key
);

385 
	`¥ötf
("key %" 
PRIu64
 ", vÆuê[%s].\n", 
key
, 
vÆue_found
);

386 
	`‰ì
(
vÆue_found
);

388 
	}
}

395 
boﬁ
 
	$föd_Àaf
(
èbÀ_id
, 
uöt64_t
 
key
, 
LófPage
* 
out_Àaf_node
) {

396 
i
 = 0;

397 
off_t
 
roŸ_off£t
 = 
dbhódî
[
èbÀ_id
 - 1].root_offset;

399 i‡(
roŸ_off£t
 == 0) {

400  
Ál£
;

403 
NodePage
 
∑ge
;

404 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
roŸ_off£t
, (
Page
*)&
∑ge
);

406 !
∑ge
.
is_Àaf
) {

407 
I¡î«lPage
* 
öã∫Æ_node
 = (I¡î«lPage*)&
∑ge
;

409 
i
 = 0;

410 
i
 < 
öã∫Æ_node
->
num_keys
) {

411 i‡(
key
 >
	`INTERNAL_KEY
(
öã∫Æ_node
, 
i
)) i++;

415 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, 
i
), (
Page
*)&
∑ge
);

418 
	`mem˝y
(
out_Àaf_node
, &
∑ge
, (
LófPage
));

420  
åue
;

421 
	}
}

427 * 
	$föd
(
èbÀ_id
, 
uöt64_t
 
key
) {

428 
i
 = 0;

429 * 
out_vÆue
;

431 
LófPage
 
Àaf_node
;

432 i‡(!
	`föd_Àaf
(
èbÀ_id
, 
key
, &
Àaf_node
)) {

433  
NULL
;

436 
i
 = 0; i < 
Àaf_node
.
num_keys
; i++) {

437 i‡(
	`LEAF_KEY
(&
Àaf_node
, 
i
Ë=
key
) {

438 
out_vÆue
 = (*)
	`mÆloc
(
SIZE_VALUE
 * ());

439 
	`mem˝y
(
out_vÆue
, 
	`LEAF_VALUE
(&
Àaf_node
, 
i
), 
SIZE_VALUE
);

440  
out_vÆue
;

444  
NULL
;

445 
	}
}

450 
	$cut
–
Àngth
 ) {

451 i‡(
Àngth
 % 2 == 0)

452  
Àngth
/2;

454  
Àngth
/2 + 1;

455 
	}
}

462 
	$gë_À·_ödex
(
I¡î«lPage
* 
∑ª¡
, 
off_t
 
À·_off£t
) {

464 
À·_ödex
 = 0;

465 
À·_ödex
 <
∑ª¡
->
num_keys
 &&

466 
	`INTERNAL_OFFSET
(
∑ª¡
, 
À·_ödex
Ë!
À·_off£t
)

467 
À·_ödex
++;

468  
À·_ödex
;

469 
	}
}

475 
	$ö£π_öto_Àaf
(
èbÀ_id
, 
LófPage
* 
Àaf_node
, 
uöt64_t
 
key
, c⁄° * 
vÆue
) {

476 
ö£πi⁄_poöt
;

477 
i
;

479 
ö£πi⁄_poöt
 = 0;

480 
ö£πi⁄_poöt
 < 
Àaf_node
->
num_keys
 &&

481 
	`LEAF_KEY
(
Àaf_node
, 
ö£πi⁄_poöt
Ë< 
key
)

482 
ö£πi⁄_poöt
++;

485 
i
 = 
Àaf_node
->
num_keys
 - 1; i >
ö£πi⁄_poöt
; i--) {

486 
	`LEAF_KEY
(
Àaf_node
, 
i
+1) = LEAF_KEY(leaf_node, i);

487 
	`mem˝y
(
	`LEAF_VALUE
(
Àaf_node
, 
i
+1), LEAF_VALUE÷óf_node, i), 
SIZE_VALUE
);

490 
	`LEAF_KEY
(
Àaf_node
, 
ö£πi⁄_poöt
Ë
key
;

491 
	`mem˝y
(
	`LEAF_VALUE
(
Àaf_node
, 
ö£πi⁄_poöt
), 
vÆue
, 
SIZE_VALUE
);

492 
Àaf_node
->
num_keys
++;

495 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
Àaf_node
);

496 
	}
}

503 
	$ö£π_öto_Àaf_a·î_•lôtög
(
èbÀ_id
, 
LófPage
* 
Àaf
, 
uöt64_t
 
key
, c⁄° * 
vÆue
) {

505 
ö£πi⁄_ödex
, 
•lô
, 
i
, 
j
;

506 
uöt64_t
 
√w_key
;

509 
LófPage
 
√w_Àaf
;

510 
√w_Àaf
.
is_Àaf
 = 
åue
;

511 
√w_Àaf
.
num_keys
 = 0;

513 
ö£πi⁄_ödex
 = 0;

514 
ö£πi⁄_ödex
 < 
‹dî_Àaf
 - 1 && 
	`LEAF_KEY
(
Àaf
, in£πi⁄_ödexË< 
key
)

515 
ö£πi⁄_ödex
++;

517 
•lô
 = 
	`cut
(
‹dî_Àaf
 - 1);

519 i‡(
ö£πi⁄_ödex
 < 
•lô
) {

521 
i
 = 
•lô
 - 1, 
j
 = 0; i < 
‹dî_Àaf
 - 1; i++, j++) {

522 
	`LEAF_KEY
(&
√w_Àaf
, 
j
ËLEAF_KEY(
Àaf
, 
i
);

523 
	`mem˝y
(
	`LEAF_VALUE
(&
√w_Àaf
, 
j
), LEAF_VALUE(
Àaf
, 
i
), 
SIZE_VALUE
);

525 
√w_Àaf
.
num_keys
++;

526 
Àaf
->
num_keys
--;

529 
i
 = 
•lô
 - 2; i >
ö£πi⁄_ödex
; i--) {

530 
	`LEAF_KEY
(
Àaf
, 
i
+1) = LEAF_KEY(leaf, i);

531 
	`mem˝y
(
	`LEAF_VALUE
(
Àaf
, 
i
+1), LEAF_VALUE÷óf, i), 
SIZE_VALUE
);

533 
	`LEAF_KEY
(
Àaf
, 
ö£πi⁄_ödex
Ë
key
;

534 
	`mem˝y
(
	`LEAF_VALUE
(
Àaf
, 
ö£πi⁄_ödex
), 
vÆue
, 
SIZE_VALUE
);

535 
Àaf
->
num_keys
++;

538 
i
 = 
•lô
, 
j
 = 0; i < 
‹dî_Àaf
 - 1; i++, j++) {

539 i‡(
i
 =
ö£πi⁄_ödex
) {

541 
j
++;

543 
	`LEAF_KEY
(&
√w_Àaf
, 
j
ËLEAF_KEY(
Àaf
, 
i
);

544 
	`mem˝y
(
	`LEAF_VALUE
(&
√w_Àaf
, 
j
), LEAF_VALUE(
Àaf
, 
i
), 
SIZE_VALUE
);

546 
√w_Àaf
.
num_keys
++;

547 
Àaf
->
num_keys
--;

549 
	`LEAF_KEY
(&
√w_Àaf
, 
ö£πi⁄_ödex
 - 
•lô
Ë
key
;

550 
	`mem˝y
(
	`LEAF_VALUE
(&
√w_Àaf
, 
ö£πi⁄_ödex
 - 
•lô
), 
vÆue
, 
SIZE_VALUE
);

551 
√w_Àaf
.
num_keys
++;

555 
√w_Àaf
.
fûe_off£t
 = 
	`gë_‰ì_∑ge
(
èbÀ_id
);

558 
√w_Àaf
.
∑ge_l¢
 = -1;

561 
√w_Àaf
.
siblög
 = 
Àaf
->sibling;

562 
Àaf
->
siblög
 = 
√w_Àaf
.
fûe_off£t
;

565 
i
 = 
Àaf
->
num_keys
; i < 
‹dî_Àaf
 - 1; i++) {

566 
	`LEAF_KEY
(
Àaf
, 
i
) = 0;

567 
	`mem£t
(
	`LEAF_VALUE
(
Àaf
, 
i
), 0, 
SIZE_VALUE
);

569 
i
 = 
√w_Àaf
.
num_keys
; i < 
‹dî_Àaf
 - 1; i++) {

570 
	`LEAF_KEY
(&
√w_Àaf
, 
i
) = 0;

571 
	`mem£t
(
	`LEAF_VALUE
(&
√w_Àaf
, 
i
), 0, 
SIZE_VALUE
);

574 
√w_Àaf
.
∑ª¡
 = 
Àaf
->parent;

576 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
Àaf
);

577 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
√w_Àaf
);

579 
√w_key
 = 
	`LEAF_KEY
(&
√w_Àaf
, 0);

582 
	`ö£π_öto_∑ª¡
(
èbÀ_id
, (
NodePage
*)
Àaf
, 
√w_key
, (NodePage*)&
√w_Àaf
);

583 
	}
}

589 
	$ö£π_öto_node
(
I¡î«lPage
* 
n
, 
À·_ödex
, 
uöt64_t
 
key
, 
off_t
 
right_off£t
) {

590 
i
;

592 
i
 = 
n
->
num_keys
; i > 
À·_ödex
; i--) {

593 
	`INTERNAL_OFFSET
(
n
, 
i
 + 1) = INTERNAL_OFFSET(n, i);

594 
	`INTERNAL_KEY
(
n
, 
i
) = INTERNAL_KEY(n, i - 1);

596 
	`INTERNAL_OFFSET
(
n
, 
À·_ödex
 + 1Ë
right_off£t
;

597 
	`INTERNAL_KEY
(
n
, 
À·_ödex
Ë
key
;

598 
n
->
num_keys
++;

599 
	}
}

605 
	$ö£π_öto_node_a·î_•lôtög
(
èbÀ_id
, 
I¡î«lPage
* 
ﬁd_node
, 
À·_ödex
, 
uöt64_t
 
key
, 
off_t
 
right_off£t
) {

606 
i
, 
j
, 
•lô
, 
k_¥ime
;

607 
uöt64_t
* 
ãmp_keys
;

608 
off_t
* 
ãmp_poöãrs
;

619 
ãmp_poöãrs
 = 
	`mÆloc
–(
‹dî_öã∫Æ
 + 1Ë* (
off_t
) );

620 i‡(
ãmp_poöãrs
 =
NULL
) {

621 
	`≥º‹
("TemporaryÖointersárray for splittingÇodes.");

622 
	`exô
(
EXIT_FAILURE
);

624 
ãmp_keys
 = 
	`mÆloc
–
‹dî_öã∫Æ
 * (
uöt64_t
) );

625 i‡(
ãmp_keys
 =
NULL
) {

626 
	`≥º‹
("Temporary keysárray for splittingÇodes.");

627 
	`exô
(
EXIT_FAILURE
);

630 
i
 = 0, 
j
 = 0; i < 
ﬁd_node
->
num_keys
 + 1; i++, j++) {

631 i‡(
j
 =
À·_ödex
 + 1) j++;

632 
ãmp_poöãrs
[
j
] = 
	`INTERNAL_OFFSET
(
ﬁd_node
, 
i
);

635 
i
 = 0, 
j
 = 0; i < 
ﬁd_node
->
num_keys
; i++, j++) {

636 i‡(
j
 =
À·_ödex
) j++;

637 
ãmp_keys
[
j
] = 
	`INTERNAL_KEY
(
ﬁd_node
, 
i
);

640 
ãmp_poöãrs
[
À·_ödex
 + 1] = 
right_off£t
;

641 
ãmp_keys
[
À·_ödex
] = 
key
;

647 
•lô
 = 
	`cut
(
‹dî_öã∫Æ
);

649 
I¡î«lPage
 
√w_node
;

650 
√w_node
.
num_keys
 = 0;

651 
√w_node
.
is_Àaf
 = 0;

652 
√w_node
.
fûe_off£t
 = 
	`gë_‰ì_∑ge
(
èbÀ_id
);

655 
√w_node
.
∑ge_l¢
 = -1;

657 
ﬁd_node
->
num_keys
 = 0;

658 
i
 = 0; i < 
•lô
 - 1; i++) {

659 
	`INTERNAL_OFFSET
(
ﬁd_node
, 
i
Ë
ãmp_poöãrs
[i];

660 
	`INTERNAL_KEY
(
ﬁd_node
, 
i
Ë
ãmp_keys
[i];

661 
ﬁd_node
->
num_keys
++;

663 
	`INTERNAL_OFFSET
(
ﬁd_node
, 
i
Ë
ãmp_poöãrs
[i];

664 
k_¥ime
 = 
ãmp_keys
[
•lô
 - 1];

665 ++
i
, 
j
 = 0; i < 
‹dî_öã∫Æ
; i++, j++) {

666 
	`INTERNAL_OFFSET
(&
√w_node
, 
j
Ë
ãmp_poöãrs
[
i
];

667 
	`INTERNAL_KEY
(&
√w_node
, 
j
Ë
ãmp_keys
[
i
];

668 
√w_node
.
num_keys
++;

670 
	`INTERNAL_OFFSET
(&
√w_node
, 
j
Ë
ãmp_poöãrs
[
i
];

671 
	`‰ì
(
ãmp_poöãrs
);

672 
	`‰ì
(
ãmp_keys
);

673 
√w_node
.
∑ª¡
 = 
ﬁd_node
->parent;

674 
i
 = 0; i <
√w_node
.
num_keys
; i++) {

675 
NodePage
 
chûd_∑ge
;

676 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
	`INTERNAL_OFFSET
(&
√w_node
, 
i
), (
Page
*)&
chûd_∑ge
);

677 
chûd_∑ge
.
∑ª¡
 = 
√w_node
.
fûe_off£t
;

678 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
chûd_∑ge
);

682 
i
 = 
ﬁd_node
->
num_keys
; i < 
‹dî_öã∫Æ
 - 1; i++) {

683 
	`INTERNAL_OFFSET
(
ﬁd_node
, 
i
+1) = 0;

684 
	`INTERNAL_KEY
(
ﬁd_node
, 
i
) = 0;

687 
i
 = 
√w_node
.
num_keys
; i < 
‹dî_öã∫Æ
 - 1; i++) {

688 
	`INTERNAL_OFFSET
(&
√w_node
, 
i
+1) = 0;

689 
	`INTERNAL_KEY
(&
√w_node
, 
i
) = 0;

693 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
√w_node
);

694 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
ﬁd_node
);

700 
	`ö£π_öto_∑ª¡
(
èbÀ_id
, (
NodePage
*)
ﬁd_node
, 
k_¥ime
, (NodePage*)&
√w_node
);

701 
	}
}

706 
	$ö£π_öto_∑ª¡
(
èbÀ_id
, 
NodePage
* 
À·
, 
uöt64_t
 
key
, NodePage* 
right
) {

708 
I¡î«lPage
 
∑ª¡_node
;

711 i‡(
À·
->
∑ª¡
 == 0) {

712 
	`ö£π_öto_√w_roŸ
(
èbÀ_id
, 
À·
, 
key
, 
right
);

716 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
À·
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

726 
À·_ödex
 = 
	`gë_À·_ödex
(&
∑ª¡_node
, 
À·
->
fûe_off£t
);

731 i‡(
∑ª¡_node
.
num_keys
 < 
‹dî_öã∫Æ
 - 1) {

732 
	`ö£π_öto_node
(&
∑ª¡_node
, 
À·_ödex
, 
key
, 
right
->
fûe_off£t
);

733 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
∑ª¡_node
);

741  
	`ö£π_öto_node_a·î_•lôtög
(
èbÀ_id
, &
∑ª¡_node
, 
À·_ödex
, 
key
, 
right
->
fûe_off£t
);

742 
	}
}

748 
	$ö£π_öto_√w_roŸ
(
èbÀ_id
, 
NodePage
* 
À·
, 
uöt64_t
 
key
, NodePage* 
right
) {

750 
I¡î«lPage
 
roŸ_node
;

751 
	`mem£t
(&
roŸ_node
, 0, (
I¡î«lPage
));

752 
roŸ_node
.
fûe_off£t
 = 
	`gë_‰ì_∑ge
(
èbÀ_id
);

755 
roŸ_node
.
∑ge_l¢
 = -1;

757 
	`INTERNAL_KEY
(&
roŸ_node
, 0Ë
key
;

758 
	`INTERNAL_OFFSET
(&
roŸ_node
, 0Ë
À·
->
fûe_off£t
;

759 
	`INTERNAL_OFFSET
(&
roŸ_node
, 1Ë
right
->
fûe_off£t
;

760 
roŸ_node
.
num_keys
++;

761 
roŸ_node
.
∑ª¡
 = 0;

762 
roŸ_node
.
is_Àaf
 = 0;

763 
À·
->
∑ª¡
 = 
roŸ_node
.
fûe_off£t
;

764 
right
->
∑ª¡
 = 
roŸ_node
.
fûe_off£t
;

766 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
roŸ_node
);

767 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
À·
);

768 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
right
);

770 
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
 = 
roŸ_node
.
fûe_off£t
;

771 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)(
dbhódî
 +Åable_id - 1));

772 
	}
}

776 
	$°¨t_√w_åì
(
èbÀ_id
, 
uöt64_t
 
key
, c⁄° * 
vÆue
) {

777 
LófPage
 
roŸ_node
;

779 
off_t
 
roŸ_off£t
 = 
	`gë_‰ì_∑ge
(
èbÀ_id
);

780 
roŸ_node
.
fûe_off£t
 = 
roŸ_off£t
;

782 
roŸ_node
.
∑ª¡
 = 0;

783 
roŸ_node
.
is_Àaf
 = 1;

784 
roŸ_node
.
num_keys
 = 1;

785 
	`LEAF_KEY
(&
roŸ_node
, 0Ë
key
;

786 
roŸ_node
.
siblög
 = 0;

789 
roŸ_node
.
∑ge_l¢
 = -1;

791 
	`mem˝y
(
	`LEAF_VALUE
(&
roŸ_node
, 0), 
vÆue
, 
SIZE_VALUE
);

793 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
roŸ_node
);

795 
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
 =Ñoot_offset;

796 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)(
dbhódî
 +Åable_id - 1));

797 
	}
}

805 
	$ö£π
(
èbÀ_id
, 
uöt64_t
 
key
, c⁄° * 
vÆue
) {

809 * 
vÆue_found
 = 
NULL
;

811 i‡((
vÆue_found
 = 
	`föd
(
èbÀ_id
, 
key
)) != 0) {

812 
	`‰ì
(
vÆue_found
);

819 i‡(
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
 == 0) {

820 
	`°¨t_√w_åì
(
èbÀ_id
, 
key
, 
vÆue
);

828 
LófPage
 
Àaf_node
;

829 
	`föd_Àaf
(
èbÀ_id
, 
key
, &
Àaf_node
);

834 i‡(
Àaf_node
.
num_keys
 < 
‹dî_Àaf
 - 1) {

835 
	`ö£π_öto_Àaf
(
èbÀ_id
, &
Àaf_node
, 
key
, 
vÆue
);

839 
	`ö£π_öto_Àaf_a·î_•lôtög
(
èbÀ_id
, &
Àaf_node
, 
key
, 
vÆue
);

842 
	}
}

852 
	$gë_√ighb‹_ödex
(
èbÀ_id
, 
NodePage
* 
node_∑ge
) {

854 
i
;

862 
I¡î«lPage
 
∑ª¡_node
;

863 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
node_∑ge
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

864 
i
 = 0; i <
∑ª¡_node
.
num_keys
; i++)

865 i‡(
	`INTERNAL_OFFSET
(&
∑ª¡_node
, 
i
Ë=
node_∑ge
->
fûe_off£t
)

866  
i
 - 1;

869 
	`as£π
("Search forÇonexistentÖointerÅoÇode inÖarent.");

871 
	}
}

873 
	$ªmove_íåy_‰om_node
(
èbÀ_id
, 
NodePage
* 
node_∑ge
, 
uöt64_t
 
key
) {

875 
i
;

876 
key_idx
 = 0;

878 i‡(
node_∑ge
->
is_Àaf
) {

879 
LófPage
* 
Àaf_node
 = (LófPage*)
node_∑ge
;

882 
i
 = 0; i < 
Àaf_node
->
num_keys
; i++) {

883 i‡(
	`LEAF_KEY
(
Àaf_node
, 
i
Ë=
key
) {

884 
key_idx
 = 
i
;

888 i‡(
i
 =
Àaf_node
->
num_keys
) {

889 
	`as£π
("remove_entry_from_node:Ço key inÅhisÖage");

893 
i
 = 
key_idx
; i < 
Àaf_node
->
num_keys
 - 1; i++) {

894 
	`LEAF_KEY
(
Àaf_node
, 
i
) = LEAF_KEY(leaf_node, i+1);

895 
	`mem˝y
(
	`LEAF_VALUE
(
Àaf_node
, 
i
), LEAF_VALUE÷óf_node, i+1), 
SIZE_VALUE
);

898 
	`LEAF_KEY
(
Àaf_node
,Üóf_node->
num_keys
 - 1) = 0;

899 
	`mem£t
(
	`LEAF_VALUE
(
Àaf_node
,Üóf_node->
num_keys
 - 1), 0, 
SIZE_VALUE
);

901 
Àaf_node
->
num_keys
--;

904 
I¡î«lPage
* 
öã∫Æ_node
 = (I¡î«lPage*)
node_∑ge
;

907 
i
 = 0; i < 
öã∫Æ_node
->
num_keys
; i++) {

908 i‡(
	`INTERNAL_KEY
(
öã∫Æ_node
, 
i
Ë=
key
) {

909 
key_idx
 = 
i
;

913 i‡(
i
 =
öã∫Æ_node
->
num_keys
) {

914 
	`as£π
("remove_entry_from_node:Ço key inÅhisÖage");

918 
i
 = 
key_idx
; i < 
öã∫Æ_node
->
num_keys
 - 1; i++) {

919 
	`INTERNAL_KEY
(
öã∫Æ_node
, 
i
) = INTERNAL_KEY(internal_node, i+1);

920 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, 
i
+1) = INTERNAL_OFFSET(internal_node, i+2);

923 
	`INTERNAL_KEY
(
öã∫Æ_node
, i¡î«l_node->
num_keys
 - 1) = 0;

924 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, i¡î«l_node->
num_keys
) = 0;

926 
öã∫Æ_node
->
num_keys
--;

929 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
node_∑ge
);

930 
	}
}

932 
	$adju°_roŸ
(
èbÀ_id
) {

934 
NodePage
 
roŸ_∑ge
;

935 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
dbhódî
[èbÀ_id - 1].
roŸ_off£t
, (
Page
*)&
roŸ_∑ge
);

942 i‡(
roŸ_∑ge
.
num_keys
 > 0)

952 i‡(!
roŸ_∑ge
.
is_Àaf
) {

953 
I¡î«lPage
* 
roŸ_node
 = (I¡î«lPage*)&
roŸ_∑ge
;

954 
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
 = 
	`INTERNAL_OFFSET
(
roŸ_node
, 0);

956 
NodePage
 
node_∑ge
;

957 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
dbhódî
[èbÀ_id - 1].
roŸ_off£t
, (
Page
*)&
node_∑ge
);

958 
node_∑ge
.
∑ª¡
 = 0;

960 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
node_∑ge
);

961 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)(
dbhódî
 +Åable_id - 1));

968 
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
 = 0;

969 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)(
dbhódî
 +Åable_id - 1));

972 
	`put_‰ì_∑ge
(
èbÀ_id
, 
roŸ_∑ge
.
fûe_off£t
);

973 
	}
}

981 
	$cﬂÀs˚_nodes
(
èbÀ_id
, 
NodePage
* 
node_∑ge
, NodePage* 
√ighb‹_∑ge
, 
√ighb‹_ödex
, 
k_¥ime
) {

983 
i
, 
j
, 
√ighb‹_ö£πi⁄_ödex
, 
n_íd
;

984 
NodePage
* 
tmp
;

990 i‡(
√ighb‹_ödex
 == -1) {

991 
tmp
 = 
node_∑ge
;

992 
node_∑ge
 = 
√ighb‹_∑ge
;

993 
√ighb‹_∑ge
 = 
tmp
;

1002 
√ighb‹_ö£πi⁄_ödex
 = 
√ighb‹_∑ge
->
num_keys
;

1009 i‡(!
node_∑ge
->
is_Àaf
) {

1010 
I¡î«lPage
* 
node
 = (I¡î«lPage*)
node_∑ge
;

1011 
I¡î«lPage
* 
√ighb‹_node
 = (I¡î«lPage*)
√ighb‹_∑ge
;

1016 
	`INTERNAL_KEY
(
√ighb‹_node
, 
√ighb‹_ö£πi⁄_ödex
Ë
k_¥ime
;

1017 
√ighb‹_node
->
num_keys
++;

1019 
n_íd
 = 
node
->
num_keys
;

1021 
i
 = 
√ighb‹_ö£πi⁄_ödex
 + 1, 
j
 = 0; j < 
n_íd
; i++, j++) {

1022 
	`INTERNAL_KEY
(
√ighb‹_node
, 
i
ËINTERNAL_KEY(
node
, 
j
);

1023 
	`INTERNAL_OFFSET
(
√ighb‹_node
, 
i
ËINTERNAL_OFFSET(
node
, 
j
);

1024 
√ighb‹_node
->
num_keys
++;

1025 
node
->
num_keys
--;

1032 
	`INTERNAL_OFFSET
(
√ighb‹_node
, 
i
ËINTERNAL_OFFSET(
node
, 
j
);

1037 
i
 = 0; i < 
√ighb‹_node
->
num_keys
 + 1; i++) {

1038 
NodePage
 
chûd_∑ge
;

1039 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
	`INTERNAL_OFFSET
(
√ighb‹_node
, 
i
), (
Page
*)&
chûd_∑ge
);

1040 
chûd_∑ge
.
∑ª¡
 = 
√ighb‹_node
->
fûe_off£t
;

1041 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
chûd_∑ge
);

1044 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
√ighb‹_node
);

1046 
	`put_‰ì_∑ge
(
èbÀ_id
, 
node
->
fûe_off£t
);

1056 
LófPage
* 
node
 = (LófPage*)
node_∑ge
;

1057 
LófPage
* 
√ighb‹_node
 = (LófPage*)
√ighb‹_∑ge
;

1059 
i
 = 
√ighb‹_ö£πi⁄_ödex
, 
j
 = 0; j < 
node
->
num_keys
; i++, j++) {

1060 
	`LEAF_KEY
(
√ighb‹_node
, 
i
ËLEAF_KEY(
node
, 
j
);

1061 
	`mem˝y
(
	`LEAF_VALUE
(
√ighb‹_node
, 
i
), LEAF_VALUE(
node
, 
j
), 
SIZE_VALUE
);

1062 
√ighb‹_node
->
num_keys
++;

1064 
√ighb‹_node
->
siblög
 = 
node
->sibling;

1066 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
√ighb‹_node
);

1068 
	`put_‰ì_∑ge
(
èbÀ_id
, 
node
->
fûe_off£t
);

1071 
NodePage
 
∑ª¡_node
;

1072 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
node_∑ge
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

1073 
	`dñëe_íåy
(
èbÀ_id
, &
∑ª¡_node
, 
k_¥ime
);

1074 
	}
}

1082 
	$ªdi°ribuã_nodes
(
èbÀ_id
, 
NodePage
* 
node_∑ge
, NodePage* 
√ighb‹_∑ge
,

1083 
√ighb‹_ödex
,

1084 
k_¥ime_ödex
, 
k_¥ime
) {

1086 
i
;

1093 i‡(
√ighb‹_ödex
 != -1) {

1094 i‡(!
node_∑ge
->
is_Àaf
) {

1095 
I¡î«lPage
* 
node
 = (I¡î«lPage*)
node_∑ge
;

1096 
I¡î«lPage
* 
√ighb‹_node
 = (I¡î«lPage*)
√ighb‹_∑ge
;

1097 
	`INTERNAL_OFFSET
(
node
,Çode->
num_keys
 + 1) = INTERNAL_OFFSET(node,Çode->num_keys);

1099 
i
 = 
node
->
num_keys
; i > 0; i--) {

1100 
	`INTERNAL_KEY
(
node
, 
i
) = INTERNAL_KEY(node, i - 1);

1101 
	`INTERNAL_OFFSET
(
node
, 
i
) = INTERNAL_OFFSET(node, i - 1);

1103 
	`INTERNAL_OFFSET
(
node
, 0ËINTERNAL_OFFSET(
√ighb‹_node
,Çeighb‹_node->
num_keys
);

1104 
NodePage
 
chûd_∑ge
;

1105 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
	`INTERNAL_OFFSET
(
node
, 0), (
Page
*)&
chûd_∑ge
);

1106 
chûd_∑ge
.
∑ª¡
 = 
node
->
fûe_off£t
;

1107 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
chûd_∑ge
);

1109 
	`INTERNAL_OFFSET
(
√ighb‹_node
,Çeighb‹_node->
num_keys
) = 0;

1110 
	`INTERNAL_KEY
(
node
, 0Ë
k_¥ime
;

1112 
I¡î«lPage
 
∑ª¡_node
;

1113 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
node
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

1114 
	`INTERNAL_KEY
(&
∑ª¡_node
, 
k_¥ime_ödex
ËINTERNAL_KEY(
√ighb‹_node
,Çeighb‹_node->
num_keys
 - 1);

1115 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
∑ª¡_node
);

1120 
node
->
num_keys
++;

1121 
√ighb‹_node
->
num_keys
--;

1123 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
node_∑ge
);

1124 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
√ighb‹_∑ge
);

1127 
LófPage
* 
node
 = (LófPage*)
node_∑ge
;

1128 
LófPage
* 
√ighb‹_node
 = (LófPage*)
√ighb‹_∑ge
;

1130 
i
 = 
node
->
num_keys
; i > 0; i--) {

1131 
	`LEAF_KEY
(
node
, 
i
) = LEAF_KEY(node, i - 1);

1132 
	`mem˝y
(
	`LEAF_VALUE
(
node
, 
i
), LEAF_VALUE“ode, i - 1), 
SIZE_VALUE
);

1134 
	`mem˝y
(
	`LEAF_VALUE
(
node
, 0), LEAF_VALUE(
√ighb‹_node
,Çeighb‹_node->
num_keys
 - 1), 
SIZE_VALUE
);

1135 
	`mem£t
(
	`LEAF_VALUE
(
√ighb‹_node
,Çeighb‹_node->
num_keys
 - 1), 0, 
SIZE_VALUE
);

1136 
	`LEAF_KEY
(
node
, 0ËLEAF_KEY(
√ighb‹_node
,Çeighb‹_node->
num_keys
 - 1);

1138 
I¡î«lPage
 
∑ª¡_node
;

1139 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
node
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

1140 
	`INTERNAL_KEY
(&
∑ª¡_node
, 
k_¥ime_ödex
Ë
	`LEAF_KEY
(
node
, 0);

1141 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
∑ª¡_node
);

1146 
node
->
num_keys
++;

1147 
√ighb‹_node
->
num_keys
--;

1149 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
node_∑ge
);

1150 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
√ighb‹_∑ge
);

1161 i‡(
node_∑ge
->
is_Àaf
) {

1162 
LófPage
* 
node
 = (LófPage*)
node_∑ge
;

1163 
LófPage
* 
√ighb‹_node
 = (LófPage*)
√ighb‹_∑ge
;;

1165 
	`LEAF_KEY
(
node
,Çode->
num_keys
ËLEAF_KEY(
√ighb‹_node
, 0);

1166 
	`mem˝y
(
	`LEAF_VALUE
(
node
,Çode->
num_keys
), LEAF_VALUE(
√ighb‹_node
, 0), 
SIZE_VALUE
);

1168 
I¡î«lPage
 
∑ª¡_node
;

1169 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
node
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

1170 
	`INTERNAL_KEY
(&
∑ª¡_node
, 
k_¥ime_ödex
Ë
	`LEAF_KEY
(
√ighb‹_node
, 1);

1171 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
∑ª¡_node
);

1173 
i
 = 0; i < 
√ighb‹_node
->
num_keys
 - 1; i++) {

1174 
	`LEAF_KEY
(
√ighb‹_node
, 
i
) = LEAF_KEY(neighbor_node, i + 1);

1175 
	`mem˝y
(
	`LEAF_VALUE
(
√ighb‹_node
, 
i
), LEAF_VALUE“eighb‹_node, i + 1), 
SIZE_VALUE
);

1181 
node
->
num_keys
++;

1182 
√ighb‹_node
->
num_keys
--;

1184 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
node_∑ge
);

1185 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
√ighb‹_∑ge
);

1189 
I¡î«lPage
* 
node
 = (I¡î«lPage*)
node_∑ge
;

1190 
I¡î«lPage
* 
√ighb‹_node
 = (I¡î«lPage*)
√ighb‹_∑ge
;

1192 
	`INTERNAL_KEY
(
node
,Çode->
num_keys
Ë
k_¥ime
;

1193 
	`INTERNAL_OFFSET
(
node
,Çode->
num_keys
 + 1ËINTERNAL_OFFSET(
√ighb‹_node
, 0);

1195 
NodePage
 
chûd_∑ge
;

1196 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
	`INTERNAL_OFFSET
(
node
,Çode->
num_keys
 + 1), (
Page
*)&
chûd_∑ge
);

1197 
chûd_∑ge
.
∑ª¡
 = 
node
->
fûe_off£t
;

1198 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
chûd_∑ge
);

1200 
I¡î«lPage
 
∑ª¡_node
;

1201 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
node
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

1202 
	`INTERNAL_KEY
(&
∑ª¡_node
, 
k_¥ime_ödex
ËINTERNAL_KEY(
√ighb‹_node
, 0);

1203 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
∑ª¡_node
);

1205 
i
 = 0; i < 
√ighb‹_node
->
num_keys
 - 1; i++) {

1206 
	`INTERNAL_KEY
(
√ighb‹_node
, 
i
) = INTERNAL_KEY(neighbor_node, i + 1);

1207 
	`INTERNAL_OFFSET
(
√ighb‹_node
, 
i
) = INTERNAL_OFFSET(neighbor_node, i + 1);

1210 
	`INTERNAL_OFFSET
(
√ighb‹_node
, 
i
) = INTERNAL_OFFSET(neighbor_node, i + 1);

1217 
node
->
num_keys
++;

1218 
√ighb‹_node
->
num_keys
--;

1220 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
node_∑ge
);

1221 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
√ighb‹_∑ge
);

1225 
	}
}

1233 
	$dñëe_íåy
(
èbÀ_id
, 
NodePage
* 
node_∑ge
, 
uöt64_t
 
key
) {

1235 
mö_keys
;

1236 
off_t
 
√ighb‹_off£t
;

1237 
√ighb‹_ödex
;

1238 
k_¥ime_ödex
, 
k_¥ime
;

1239 
ˇ∑côy
;

1243 
	`ªmove_íåy_‰om_node
(
èbÀ_id
, 
node_∑ge
, 
key
);

1247 i‡(
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
 =
node_∑ge
->
fûe_off£t
) {

1248 
	`adju°_roŸ
(
èbÀ_id
);

1260 
mö_keys
 = 
node_∑ge
->
is_Àaf
 ? 
	`cut
(
‹dî_Àaf
 - 1Ë: cut(
‹dî_öã∫Æ
) - 1;

1266 i‡(
node_∑ge
->
num_keys
 >
mö_keys
)

1281 
√ighb‹_ödex
 = 
	`gë_√ighb‹_ödex
(
èbÀ_id
, 
node_∑ge
);

1282 
k_¥ime_ödex
 = 
√ighb‹_ödex
 == -1 ? 0 :Çeighbor_index;

1284 
I¡î«lPage
 
∑ª¡_node
;

1285 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
node_∑ge
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

1287 
k_¥ime
 = 
	`INTERNAL_KEY
(&
∑ª¡_node
, 
k_¥ime_ödex
);

1288 
√ighb‹_off£t
 = 
√ighb‹_ödex
 =-1 ? 
	`INTERNAL_OFFSET
(&
∑ª¡_node
, 1) :

1289 
	`INTERNAL_OFFSET
(&
∑ª¡_node
, 
√ighb‹_ödex
);

1291 
ˇ∑côy
 = 
node_∑ge
->
is_Àaf
 ? 
‹dî_Àaf
 : 
‹dî_öã∫Æ
 - 1;

1293 
NodePage
 
√ighb‹_∑ge
;

1294 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
√ighb‹_off£t
, (
Page
*)&
√ighb‹_∑ge
);

1297 i‡(
√ighb‹_∑ge
.
num_keys
 + 
node_∑ge
->num_key†< 
ˇ∑côy
)

1298 
	`cﬂÀs˚_nodes
(
èbÀ_id
, 
node_∑ge
, &
√ighb‹_∑ge
, 
√ighb‹_ödex
, 
k_¥ime
);

1303 
	`ªdi°ribuã_nodes
(
èbÀ_id
, 
node_∑ge
, &
√ighb‹_∑ge
, 
√ighb‹_ödex
, 
k_¥ime_ödex
, 
k_¥ime
);

1306 
	}
}

1310 
	$dñëe
(
èbÀ_id
, 
uöt64_t
 
key
) {

1312 * 
vÆue_found
 = 
NULL
;

1313 i‡((
vÆue_found
 = 
	`föd
(
èbÀ_id
, 
key
)) == 0) {

1315 
	`‰ì
(
vÆue_found
);

1319 
LófPage
 
Àaf_node
;

1320 
	`föd_Àaf
(
èbÀ_id
, 
key
, &
Àaf_node
);

1322 
	`dñëe_íåy
(
èbÀ_id
, (
NodePage
*)&
Àaf_node
, 
key
);

1325 
	}
}

1328 
	$öô_db
(
num_buf
){

1329 
i
;

1332 
buf_mgr
 = (
Buf„r
 *)
	`ˇŒoc
(
num_buf
, (Buffer));

1334 
i
 = 0; i < 
num_buf
; i++){

1335 
buf_mgr
[
i
].
‰ame
 = (
Page
*)
	`mÆloc
((Page));

1338 if(
buf_mgr
 =
NULL
){

1345 
buf_size
 = 
num_buf
;

1348 
log
 = 
	`›í
("log.db", 
O_RDWR
);

1353 if(
log
 > 0){

1355 
	`ªcovîy
();

1358 
	`˛o£
(
log
);

1359 
	`ªmove
("log.db");

1360 
log
 = -1;

1364 
	}
}

1366 
	$˛o£_èbÀ
(
èbÀ_id
){

1367 
i
;

1370 if(
èbÀ_id
 < 1 ||ÅabÀ_id > 10 || 
buf_size
 =-1 || 
buf_mgr
 =
NULL
){

1374 
i
 = 0; i < 
buf_size
; i++){

1375 if(
buf_mgr
[
i
].
èbÀ_id
 ==Åable_id){

1377 if(
buf_mgr
[
i
].
is_dúty
 == 1){

1378 
	`Êush_∑ge
(
èbÀ_id
, 
buf_mgr
[
i
].
‰ame
);

1381 
	`mem£t
(
buf_mgr
[
i
].
‰ame
, 0, (
Page
));

1382 
buf_mgr
[
i
].
èbÀ_id
 = 0;

1383 
buf_mgr
[
i
].
∑ge_off£t
 = 0;

1384 
buf_mgr
[
i
].
is_dúty
 = 0;

1385 
buf_mgr
[
i
].
ªfbô
 = 0;

1390 
	`˛o£_db
(
èbÀ_id
);

1393 
dbfûe
[
èbÀ_id
 - 1] = 0;

1396 
	}
}

1398 
	$shutdown_db
(){

1399 
i
,
èbÀ_id
 = -1;

1402 if(
buf_size
 =-1 || 
buf_mgr
 =
NULL
){

1406 
i
 = 0; i < 
buf_size
; i++){

1408 if(
buf_mgr
[
i
].
is_dúty
 == 1){

1409 
èbÀ_id
 = 
buf_mgr
[
i
].table_id;

1410 
	`Êush_∑ge
(
èbÀ_id
, 
buf_mgr
[
i
].
‰ame
);

1413 if(1 <
buf_mgr
[
i
].
èbÀ_id
 && buf_mgr[i].table_id <= 10){

1414 
	`‰ì
(
buf_mgr
[
i
].
‰ame
);

1419 
	`‰ì
(
buf_mgr
);

1422 
	}
}

1424 
	$lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
off_t
 
off£t
, 
Page
* 
∑ge
){

1425 
Page
 *
ãmp
;

1426 
buf_ödex
 = -1;

1428 
ãmp
 = 
	`check_buf„r_f‹_lﬂd
(
èbÀ_id
, 
off£t
);

1431 if(
ãmp
 !
NULL
){

1433 
	`mem˝y
(
∑ge
, 
ãmp
, (
Page
));

1434 
∑ge
->
fûe_off£t
 = 
off£t
;

1441 
buf_ödex
 = 
	`ª∂a˚_∑ge
(
NULL
);

1444 
	`lﬂd_∑ge
(
èbÀ_id
, 
off£t
, 
∑ge
);

1445 
∑ge
->
fûe_off£t
 = 
off£t
;

1452 
	`mem˝y
(
buf_mgr
[
buf_ödex
].
‰ame
, 
∑ge
, (
Page
));

1453 
buf_mgr
[
buf_ödex
].
èbÀ_id
 =Åable_id;

1454 
buf_mgr
[
buf_ödex
].
∑ge_off£t
 = 
off£t
;

1455 
buf_mgr
[
buf_ödex
].
is_dúty
 = 0;

1456 
buf_mgr
[
buf_ödex
].
ªfbô
 = 1;

1458 
	}
}

1459 
Page
* 
	$check_buf„r_f‹_lﬂd
(
èbÀ_id
, 
off_t
 
off£t
){

1460 
i
;

1462 if(
buf_size
 == -1){

1464  
NULL
;

1467 
i
 = 0; i < 
buf_size
; i++){

1468 if(
buf_mgr
[
èrgë_buf
].
èbÀ_id
 =èbÀ_id && buf_mgr[èrgë_buf].
∑ge_off£t
 =
off£t
){

1470 
buf_mgr
[
èrgë_buf
].
ªfbô
 = 1;

1472  
buf_mgr
[
èrgë_buf
].
‰ame
;

1474 
èrgë_buf
 = (èrgë_bu‡+ 1Ë% 
buf_size
;

1478  
NULL
;

1479 
	}
}

1480 
	$check_buf„r_f‹_Êush
(
èbÀ_id
, 
off_t
 
off£t
){

1481 
i
;

1483 if(
buf_size
 == -1){

1488 
i
 = 0; i < 
buf_size
; i++){

1489 if(
buf_mgr
[
èrgë_buf
].
èbÀ_id
 =èbÀ_id && buf_mgr[èrgë_buf].
∑ge_off£t
 =
off£t
){

1491 
buf_mgr
[
èrgë_buf
].
ªfbô
 = 1;

1493  
èrgë_buf
;

1495 
èrgë_buf
 = (èrgë_bu‡+ 1Ë% 
buf_size
;

1500 
	}
}

1502 
	$ª∂a˚_∑ge
(
FILE
 *
fûe
){

1504 
èrgë_ödex
 = -1;

1507 
èrgë_ödex
 == -1){

1510 if(
buf_mgr
[
˛ock_h™d
].
ªfbô
 == 0){

1512 
èrgë_ödex
 = 
˛ock_h™d
;

1515 if(
buf_mgr
[
˛ock_h™d
].
èbÀ_id
 == -1){

1516 
i
;

1517 
OuçutPage
 *
èrgë
;

1519 
	`mem˝y
((
Page
 *)
èrgë
, 
buf_mgr
[
˛ock_h™d
].
‰ame
, (Page));

1521 
i
 = 0; i < 
èrgë
->
fûe_off£t
; i++){

1522 
	`Ârötf
(
fûe
, "%" 
PRIu64
 ",%s," "%" PRIu64 ",%s\n", 
	`RESULT_KEY1
(
èrgë
, 
i
), 
	`RESULT_VALUE1
—¨gë, i), 
	`RESULT_KEY2
—¨gë, i), 
	`RESULT_VALUE2
(target, i) );

1525 
buf_mgr
[
˛ock_h™d
].
is_dúty
 = 0;

1529 if(
buf_mgr
[
˛ock_h™d
].
is_dúty
 == 1){

1530 
∑ge_l¢
;

1535 if(
	`ex˛ude_hódî
()){

1536 
∑ge_l¢
 = 
	`ex˛ude_öã∫Æ
();

1537 if(
∑ge_l¢
 > 0){

1538 
	`execuã_wÆ
(
∑ge_l¢
);

1543 
	`Êush_∑ge
(
buf_mgr
[
˛ock_h™d
].
èbÀ_id
, buf_mgr[˛ock_h™d].
‰ame
);

1547 
	`mem£t
(
buf_mgr
[
˛ock_h™d
].
‰ame
, 0, (
Page
));

1548 
buf_mgr
[
˛ock_h™d
].
èbÀ_id
 = 0;

1549 
buf_mgr
[
˛ock_h™d
].
∑ge_off£t
 = 0;

1550 
buf_mgr
[
˛ock_h™d
].
is_dúty
 = 0;

1551 
buf_mgr
[
˛ock_h™d
].
ªfbô
 = 0;

1557 if(
buf_mgr
[
˛ock_h™d
].
ªfbô
 == 1){

1558 
buf_mgr
[
˛ock_h™d
].
ªfbô
 = 0;

1562 
˛ock_h™d
 = (˛ock_h™d + 1Ë% 
buf_size
;

1566  
èrgë_ödex
;

1567 
	}
}

1570 
	$Êush_∑ge_to_buf„r
(
èbÀ_id
, 
Page
 *
∑ge
){

1571 
i
, 
buf_ödex
 = -1, 
ödex
 = -1;

1576 
ödex
 = 
	`check_buf„r_f‹_Êush
(
èbÀ_id
, 
∑ge
->
fûe_off£t
);

1579 if(
ödex
 != -1){

1580 
	`mem˝y
(
buf_mgr
[
èrgë_buf
].
‰ame
, 
∑ge
, (
Page
));

1581 
buf_mgr
[
èrgë_buf
].
is_dúty
 = 1;

1586 
buf_ödex
 = 
	`ª∂a˚_∑ge
(
NULL
);

1590 
	`mem˝y
(
buf_mgr
[
buf_ödex
].
‰ame
, 
∑ge
, (
Page
));

1591 
buf_mgr
[
buf_ödex
].
èbÀ_id
 =Åable_id;

1592 
buf_mgr
[
buf_ödex
].
∑ge_off£t
 = 
∑ge
->
fûe_off£t
;

1594 
buf_mgr
[
buf_ödex
].
is_dúty
 = 1;

1595 
buf_mgr
[
buf_ödex
].
ªfbô
 = 1;

1597 
	}
}

1602 
	$joö_èbÀ
(
èbÀ_id_1
, 
èbÀ_id_2
, *
∑th«me
){

1603 
FILE
 *
r_Â
;

1604 
uöt64_t
 
num_1
 = -1, 
num_2
 = -1, 
mö_1
 = -1, 
mö_2
 = -1, 
max_1
 = -1, 
max_2
 = -1;

1605 
LófPage
 
Àaf_1
, 
Àaf_2
;

1606 
off_t
 
comp_sib_1
, 
comp_sib_2
;

1607 
comp_num_1
, 
comp_num_2
;

1608 
uöt64_t
 
comp_key_1
, 
comp_key_2
;

1611 if((
r_Â
 = 
	`f›í
(
∑th«me
, "wt")Ë=
NULL
){

1616 
	`èbÀ_öfo
(
èbÀ_id_1
, &
num_1
, &
mö_1
, &
max_1
);

1617 
	`èbÀ_öfo
(
èbÀ_id_2
, &
num_2
, &
mö_2
, &
max_2
);

1625 if(
max_1
 < 
mö_2
 || 
mö_1
 > 
max_2
){

1627 
	`f˛o£
(
r_Â
);

1638 if(
mö_1
 < 
mö_2
){

1641 
	`föd_Àaf
(
èbÀ_id_1
, 
mö_2
, &
Àaf_1
);

1642 
	`föd_Àaf
(
èbÀ_id_2
, 
mö_2
, &
Àaf_2
);

1648 
	`föd_Àaf
(
èbÀ_id_1
, 
mö_1
, &
Àaf_1
);

1649 
	`föd_Àaf
(
èbÀ_id_2
, 
mö_1
, &
Àaf_2
);

1653 
comp_sib_1
 = 
Àaf_1
.
siblög
;

1654 
comp_sib_2
 = 
Àaf_2
.
siblög
;

1655 
comp_num_1
 = 0;

1656 
comp_num_2
 = 0;

1663 (
comp_sib_1
 !0 || 
comp_num_1
 !
Àaf_1
.
num_keys
Ë&& (
comp_sib_2
 !0 || 
comp_num_2
 !
Àaf_2
.num_keys)){

1665 
comp_key_1
 = 
	`LEAF_KEY
(&
Àaf_1
, 
comp_num_1
);

1666 
comp_key_2
 = 
	`LEAF_KEY
(&
Àaf_2
, 
comp_num_2
);

1669 
comp_key_1
 < 
comp_key_2
){

1671 
comp_num_1
++;

1674 if((
comp_num_1
 =
Àaf_1
.
num_keys
Ë&& (
comp_sib_1
 != 0)){

1676 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id_1
, 
comp_sib_1
, (
Page
*)&
Àaf_1
);

1679 
comp_sib_1
 = 
Àaf_1
.
siblög
;

1682 
comp_num_1
 = 0;

1686 if(
comp_sib_1
 =0 && 
comp_num_1
 =
Àaf_1
.
num_keys
){

1687 
	`sync_buf„r
(
r_Â
);

1688 
	`f˛o£
(
r_Â
);

1693 
comp_key_1
 = 
	`LEAF_KEY
(&
Àaf_1
, 
comp_num_1
);

1695 
comp_key_1
 > 
comp_key_2
){

1697 
comp_num_2
++;

1700 if((
comp_num_2
 =
Àaf_2
.
num_keys
Ë&& (
comp_sib_2
 != 0)){

1702 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id_2
, 
comp_sib_2
, (
Page
*)&
Àaf_2
);

1705 
comp_sib_2
 = 
Àaf_2
.
siblög
;

1708 
comp_num_2
 = 0;

1712 if(
comp_sib_1
 =0 && 
comp_num_1
 =
Àaf_1
.
num_keys
){

1713 
	`sync_buf„r
(
r_Â
);

1714 
	`f˛o£
(
r_Â
);

1719 
comp_key_2
 = 
	`LEAF_KEY
(&
Àaf_2
, 
comp_num_2
);

1722 if(
comp_key_1
 =
comp_key_2
){

1725 
	`wrôe_ouçut_buf„r
(
r_Â
, 
comp_key_1
, 
	`LEAF_VALUE
(&
Àaf_1
, 
comp_num_1
), 
comp_key_2
, LEAF_VALUE(&
Àaf_2
, 
comp_num_2
));

1729 
comp_num_1
++;

1730 
comp_num_2
++;

1733 if((
comp_num_1
 =
Àaf_1
.
num_keys
Ë&& (
comp_sib_1
 != 0)){

1735 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id_1
, 
comp_sib_1
, (
Page
*)&
Àaf_1
);

1738 
comp_sib_1
 = 
Àaf_1
.
siblög
;

1741 
comp_num_1
 = 0;

1745 if((
comp_num_2
 =
Àaf_2
.
num_keys
Ë&& (
comp_sib_2
 != 0)){

1747 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id_2
, 
comp_sib_2
, (
Page
*)&
Àaf_2
);

1750 
comp_sib_2
 = 
Àaf_2
.
siblög
;

1753 
comp_num_2
 = 0;

1759 
	`sync_buf„r
(
r_Â
);

1760 
	`f˛o£
(
r_Â
);

1762 
	}
}

1763 
	$èbÀ_öfo
(
èbÀ_id
, 
uöt64_t
 *
num_keys
, uöt64_à*
mö_key
, uöt64_à*
max_key
){

1764 
HódîPage
 
ãmp_hódî
;

1765 
NodePage
 
∑ge
;

1766 
LófPage
 *
ãmp_Àaf
;

1767 
off_t
 
ãmp_siblög
;

1770 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 0, (
Page
*)(&
ãmp_hódî
));

1773 if(
ãmp_hódî
.
roŸ_off£t
 == 0){

1774 *
num_keys
 = 0;

1775 *
max_key
 = 0;

1781 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
ãmp_hódî
.
roŸ_off£t
, (
Page
*)&
∑ge
);

1784 !
∑ge
.
is_Àaf
){

1785 
I¡î«lPage
* 
öã∫Æ_node
 = (I¡î«lPage*)&
∑ge
;

1787 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, 0), (
Page
*)&
∑ge
);

1794 
ãmp_Àaf
 = (
LófPage
 *)&
∑ge
;

1796 *
num_keys
 = 
ãmp_Àaf
->num_keys;

1797 *
mö_key
 = 
	`LEAF_KEY
(
ãmp_Àaf
, 0);

1798 *
max_key
 = 
	`LEAF_KEY
(
ãmp_Àaf
,Åemp_Àaf->
num_keys
 - 1);

1799 
ãmp_siblög
 = 
ãmp_Àaf
->
siblög
;

1801 
ãmp_siblög
 != 0){

1803 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
ãmp_siblög
, (
Page
*)
ãmp_Àaf
);

1805 *
num_keys
 +
ãmp_Àaf
->num_keys;

1806 *
max_key
 = 
	`LEAF_KEY
(
ãmp_Àaf
,Åemp_Àaf->
num_keys
 - 1);

1807 
ãmp_siblög
 = 
ãmp_Àaf
->
siblög
;

1810 
	}
}

1811 
	$wrôe_ouçut_buf„r
(
FILE
 *
fûe
, 
uöt64_t
 
key1
, *
vÆue1
, uöt64_à
key2
, *
vÆue2
){

1812 
OuçutPage
 
ouçut
;

1815 if(
	`lﬂd_ouçut_∑ge
((
Page
*)&
ouçut
) == -1){

1816 
ouçut
.
ªsu…s
[0].
key1
 = key1;

1817 
	`°r˝y
(
ouçut
.
ªsu…s
[0].
vÆue1
, value1);

1818 
ouçut
.
ªsu…s
[0].
key2
 = key2;

1819 
	`°r˝y
(
ouçut
.
ªsu…s
[0].
vÆue2
, value2);

1820 
ouçut
.
fûe_off£t
 = 1;

1825 if(
ouçut
.
fûe_off£t
 < 
OUTPUT_ORDER
){

1826 
	`RESULT_KEY1
(&
ouçut
, ouçut.
fûe_off£t
Ë
key1
;

1827 
	`°r˝y
(
	`RESULT_VALUE1
(&
ouçut
, ouçut.
fûe_off£t
), 
vÆue1
);

1828 
	`RESULT_KEY2
(&
ouçut
, ouçut.
fûe_off£t
Ë
key2
;

1829 
	`°r˝y
(
	`RESULT_VALUE2
(&
ouçut
, ouçut.
fûe_off£t
), 
vÆue2
);

1831 
ouçut
.
fûe_off£t
++;

1835 
OuçutPage
 
√w
;

1837 
	`sync_buf„r
(
fûe
);

1839 
√w
.
ªsu…s
[0].
key1
 = key1;

1840 
	`°r˝y
(
√w
.
ªsu…s
[0].
vÆue1
, value1);

1841 
√w
.
ªsu…s
[0].
key2
 = key2;

1842 
	`°r˝y
(
√w
.
ªsu…s
[0].
vÆue2
, value2);

1843 
√w
.
fûe_off£t
 = 1;

1845 
	`Êush_ouçut_∑ge
(
fûe
, (
Page
 *)&
√w
);

1850 
	`Êush_ouçut_∑ge
(
fûe
, (
Page
 *)&
ouçut
);

1851 
	}
}

1852 
	$lﬂd_ouçut_∑ge
(
Page
 *
∑ge
){

1853 
Page
 *
ãmp
;

1855 
ãmp
 = 
	`check_buf„r_f‹_lﬂd
(-1, 0);

1858 if(
ãmp
 !
NULL
){

1860 
	`mem˝y
(
∑ge
, 
ãmp
, (
Page
));

1870 
	}
}

1871 
	$Êush_ouçut_∑ge
(
FILE
 *
fûe
, 
Page
 *
∑ge
){

1872 
i
, 
buf_ödex
 = -1, 
ödex
 = -1;

1877 
ödex
 = 
	`check_buf„r_f‹_Êush
(-1, 0);

1880 if(
ödex
 != -1){

1881 
	`mem˝y
(
buf_mgr
[
èrgë_buf
].
‰ame
, 
∑ge
, (
Page
));

1882 
buf_mgr
[
èrgë_buf
].
is_dúty
 = 1;

1887 
buf_ödex
 = 
	`ª∂a˚_∑ge
(
fûe
);

1891 
	`mem˝y
(
buf_mgr
[
buf_ödex
].
‰ame
, 
∑ge
, (
Page
));

1892 
buf_mgr
[
buf_ödex
].
èbÀ_id
 = -1;

1893 
buf_mgr
[
buf_ödex
].
∑ge_off£t
 = 0;

1895 
buf_mgr
[
buf_ödex
].
is_dúty
 = 1;

1896 
buf_mgr
[
buf_ödex
].
ªfbô
 = 1;

1898 
	}
}

1899 
	$sync_buf„r
(
FILE
 *
fûe
){

1900 
i
, 
ödex
, 
íd
;

1901 
OuçutPage
 
èrgë
;

1903 
ödex
 = 
	`check_buf„r_f‹_Êush
(-1, 0);

1905 
	`mem˝y
((
Page
 *)&
èrgë
, 
buf_mgr
[
ödex
].
‰ame
, (Page));

1906 
i
 = 0; i < 
èrgë
.
fûe_off£t
; i++){

1907 
	`Ârötf
(
fûe
, "%" 
PRIu64
 ",%s," "%" PRIu64 ",%s\n", 
	`RESULT_KEY1
(&
èrgë
, 
i
), 
	`RESULT_VALUE1
(&èrgë, i), 
	`RESULT_KEY2
(&èrgë, i), 
	`RESULT_VALUE2
(&target, i) );

1911 
	`mem£t
(
buf_mgr
[
ödex
].
‰ame
, 0, (
Page
));

1912 
buf_mgr
[
ödex
].
èbÀ_id
 = 0;

1913 
buf_mgr
[
ödex
].
∑ge_off£t
 = 0;

1914 
buf_mgr
[
ödex
].
is_dúty
 = 0;

1915 
buf_mgr
[
ödex
].
ªfbô
 = 0;

1916 
	}
}

1919 
	$begö_å™ß˘i⁄
(){

1922 i‡(
log
 < 0) {

1924 
log
 = 
	`›í
("log.db", 
O_CREAT
|
O_RDWR
, 
S_IRUSR
|
S_IWUSR
);

1925 i‡(
log
 < 0) {

1926 
	`as£π
("failedÅo createÇewÜog file");

1933 
xid
++;

1936 
	`¸óã_log
(0, 0, 0, 0, 0, 
NULL
, NULL);

1939 
	}
}

1940 
	$commô_å™ß˘i⁄
(){

1942 
	`¸óã_log
(2, 0, 0, 0, 0, 
NULL
, NULL);

1943 
	`Êush_log
(
log_h™d
);

1944 
	`fsync
(
log
);

1945 
log_h™d
 = 0;

1948 
	}
}

1949 
	$ab‹t_å™ß˘i⁄
(){

1952 
	}
}

1953 
	$upd©e
(
èbÀ_id
, 
öt64_t
 
key
, *
vÆue
){

1954 
ﬁd
[120];

1956 if(
	`föd
(
èbÀ_id
, 
key
Ë=
NULL
 || 
dbhódî
[èbÀ_id -1].
roŸ_off£t
 == 0){

1962 
LófPage
 
Àaf_node
;

1963 
fix_poöt
 = 0, 
loˇti⁄
;

1965 
	`föd_Àaf
(
èbÀ_id
, 
key
, &
Àaf_node
);

1967 
fix_poöt
 < 
Àaf_node
.
num_keys
 && 
	`LEAF_KEY
(&Àaf_node, fix_poötË!
key
){

1968 
fix_poöt
++;

1971 
	`°r˝y
(
ﬁd
, 
	`LEAF_VALUE
(&
Àaf_node
, 
fix_poöt
));

1973 
	`mem˝y
(
	`LEAF_VALUE
(&
Àaf_node
, 
fix_poöt
), 
vÆue
, 
SIZE_VALUE
);

1976 
Àaf_node
.
∑ge_l¢
 = 
l¢
;

1980 
loˇti⁄
 = 
Àaf_node
.
fûe_off£t
 + 128 + (
fix_poöt
 * 128) + 8;

1981 
	`¸óã_log
(1, 
èbÀ_id
, 
loˇti⁄
 / 
PAGE_SIZE
,Üoˇti⁄ % PAGE_SIZE, 
	`°æí
(
vÆue
), 
ﬁd
,value);

1984 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
Àaf_node
);

1988 
	}
}

1990 
	$¸óã_log
(
ty≥
, 
èbÀ_id
, 
≤um
, 
off£t
, 
Àngth
, *
ﬁd_image
, *
√w_image
){

1991 
LogRec‹d
 
√w_log
;

1994 
√w_log
.
l¢
 =Üsn;

1995 
√w_log
.
¥ev_l¢
 = 
l¢
 - 
SIZE_LOG
;

1996 
√w_log
.
xid
 = xid;

1997 
√w_log
.
ty≥
 =Åype;

1998 
√w_log
.
èbÀ_id
 =Åable_id;

1999 
√w_log
.
≤um
 =Önum;

2000 
√w_log
.
off£t
 = offset;

2001 
√w_log
.
Àngth
 =Üength;

2002 if(
ﬁd_image
 !
NULL
 & 
√w_image
 != NULL){

2003 
	`°r˝y
(
√w_log
.
ﬁd_image
, old_image);

2004 
	`°r˝y
(
√w_log
.
√w_image
,Çew_image);

2008 
l¢
 +
SIZE_LOG
;

2012 if(
log_h™d
 =
SIZE_LOG_BUFFER
){

2014 
	`Êush_log
(
SIZE_LOG_BUFFER
 / 3);

2015 
	`fsync
(
log
);

2017 
log_buf
[
log_h™d
++] = 
√w_log
;

2018 
	}
}

2020 
	$Êush_log
(
size
){

2021 
i
 = 0;

2024 
i
 = 0; i < 
size
; i++){

2025 
	`l£ek
(
log
, 
log_buf
[
i
].
¥ev_l¢
, 
SEEK_SET
);

2026 
	`wrôe
(
log
, 
log_buf
 + 
i
, 
SIZE_LOG
);

2030 
i
 = 
size
; i < 
SIZE_LOG_BUFFER
; i++){

2031 
log_buf
[
i
-
size
] =Üog_buf[i];

2035 
log_h™d
 -
size
;

2036 
	}
}

2037 
	$ªcovîy
(){

2038 
LogRec‹d
 
ªdo
;

2039 
off_t
 
fûe_size
, 
off£t
 = 0;

2040 
i
;

2043 
fûe_size
 = 
	`l£ek
(
log
, 0, 
SEEK_END
);

2045 
i
 = 0; i < 
fûe_size
 / 
SIZE_LOG
; i++){

2046 
	`l£ek
(
log
, 
off£t
, 
SEEK_SET
);

2047 
	`ªad
(
log
, &
ªdo
, 
SIZE_LOG
);

2048 
	`¥ötf
("%d %d %d %d %d %d %d %d %†%s\n", ()
ªdo
.
l¢
, (Ïedo.
¥ev_l¢
,Ñedo.
xid
,Ñedo.
ty≥
,Ñedo.
èbÀ_id
,Ñedo.
≤um
,Ñedo.
off£t
,Ñedo.
Àngth
,Ñedo.
ﬁd_image
,Ñedo.
√w_image
);

2049 
off£t
 +
SIZE_LOG
;

2051 
	}
}

2052 
	$execuã_wÆ
(){

2054 
	}
}

2056 
	$ex˛ude_hódî
(){

2057 
i
, 
size
 = 0;

2058 
off_t
 
èrgë
;

2060 
èrgë
 = 
buf_mgr
[
˛ock_h™d
].
∑ge_off£t
;

2063 
i
 = 0; i < 10; i++){

2064 if(
dbfûe
[
i
] > 0){

2065 
size
++;

2070 
i
 = 0; i < 
size
; i++){

2071 if(
dbhódî
[
i
].
fûe_off£t
 =
èrgë
){

2076 
	}
}

2078 
	$ex˛ude_öã∫Æ
(){

2079 
NodePage
 
ã°
;

2081 
	`mem˝y
(&
ã°
, 
buf_mgr
[
˛ock_h™d
].
‰ame
, (
Page
));

2083 if(
ã°
.
is_Àaf
 == 1){

2084  
ã°
.
∑ge_l¢
;

2088 
	}
}

	@src/file.c

1 
	~<sys/ty≥s.h
>

2 
	~<f˙é.h
>

3 
	~<°dlib.h
>

4 
	~<as£π.h
>

5 
	~<°dio.h
>

6 
	~<uni°d.h
>

7 
	~<°rög.h
>

8 
	~"fûe.h
"

10 
HódîPage
 
	gdbhódî
[10] = {0,};

11 
	gdbfûe
[10] = {0,};

15 
off_t
 
	$gë_‰ì_∑ge
(
èbÀ_id
) {

16 
off_t
 
‰ì∑ge_off£t
;

18 
‰ì∑ge_off£t
 = 
dbhódî
[
èbÀ_id
 - 1].
‰ìli°
;

19 i‡(
‰ì∑ge_off£t
 == 0) {

21 
	`ex∑nd_fûe
(
èbÀ_id
, 
dbhódî
[èbÀ_id - 1].
num_∑ges
);

22 
‰ì∑ge_off£t
 = 
dbhódî
[
èbÀ_id
 - 1].
‰ìli°
;

25 
FªePage
 
‰ì∑ge
;

26 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
‰ì∑ge_off£t
, (
Page
*)&
‰ì∑ge
);

27 
dbhódî
[
èbÀ_id
 - 1].
‰ìli°
 = 
‰ì∑ge
.
√xt
;

29 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)(
dbhódî
 +Åable_id - 1));

31  
‰ì∑ge_off£t
;

32 
	}
}

35 
	$put_‰ì_∑ge
(
èbÀ_id
, 
off_t
 
∑ge_off£t
) {

36 
FªePage
 
‰ì∑ge
;

37 
	`mem£t
(&
‰ì∑ge
, 0, 
PAGE_SIZE
);

39 
‰ì∑ge
.
√xt
 = 
dbhódî
[
èbÀ_id
 - 1].
‰ìli°
;

40 
‰ì∑ge
.
fûe_off£t
 = 
∑ge_off£t
;

42 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
‰ì∑ge
);

44 
dbhódî
[
èbÀ_id
 - 1].
‰ìli°
 = 
∑ge_off£t
;

46 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)(
dbhódî
 +Åable_id - 1));

47 
	}
}

50 
	$ex∑nd_fûe
(
èbÀ_id
, 
size_t
 
˙t_∑ge_to_ex∑nd
) {

51 
off_t
 
off£t
 = 
dbhódî
[
èbÀ_id
 - 1].
num_∑ges
 * 
PAGE_SIZE
;

53 i‡(
dbhódî
[
èbÀ_id
 - 1].
num_∑ges
 > 1024 * 1024) {

55 
	`as£π
("Test: youáreálready havingá DB file overÅhan 4GB");

58 
i
;

59 
i
 = 0; i < 
˙t_∑ge_to_ex∑nd
; i++) {

60 
	`put_‰ì_∑ge
(
èbÀ_id
, 
off£t
);

61 
dbhódî
[
èbÀ_id
 - 1].
num_∑ges
++;

62 
off£t
 +
PAGE_SIZE
;

65 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)(
dbhódî
 +Åable_id - 1));

66 
	}
}

68 
	$lﬂd_∑ge
(
èbÀ_id
, 
off_t
 
off£t
, 
Page
* 
∑ge
) {

69 
	`l£ek
(
dbfûe
[
èbÀ_id
 - 1], 
off£t
, 
SEEK_SET
);

70 
	`ªad
(
dbfûe
[
èbÀ_id
 - 1], 
∑ge
, 
PAGE_SIZE
);

71 
∑ge
->
fûe_off£t
 = 
off£t
;

72 
	}
}

74 
	$Êush_∑ge
(
èbÀ_id
, 
Page
* 
∑ge
) {

75 
	`l£ek
(
dbfûe
[
èbÀ_id
 - 1], 
∑ge
->
fûe_off£t
, 
SEEK_SET
);

76 
	`wrôe
(
dbfûe
[
èbÀ_id
 - 1], 
∑ge
, 
PAGE_SIZE
);

77 
	}
}

	@src/main.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<f˙é.h
>

4 
	~<uni°d.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<öây≥s.h
>

7 
	~"b±.h
"

8 
	~"fûe.h
"

9 
	~<°rög.h
>

10 
	~<time.h
>

13 
	$maö
–
¨gc
, ** 
¨gv
 ) {

14 
öput_vÆue_1
[
SIZE_VALUE
], 
öput_vÆue_2
[SIZE_VALUE];

15 
uöt64_t
 
°¨t
, 
íd
, 
jump
;

16 
èbÀ_1
 = 0, 
èbÀ_2
 = 0, 
èbÀ_10
 = 0;

17 
time_t
 
°¨t_t
, 
íd_t
;

19 
	`¥ötf
("WelcomeÅoÑecoveryÅest\n");

21 
	`öô_db
(1);

23 
èbÀ_1
 = 
	`›í_èbÀ
("DATA1");

24 
èbÀ_2
 = 
	`›í_èbÀ
("DATA2");

26 
	`ö£π
(
èbÀ_1
, 1, "A");

27 
	`ö£π
(
èbÀ_1
, 2, "B");

28 
	`ö£π
(
èbÀ_2
, 1, "C");

29 
	`ö£π
(
èbÀ_2
, 2, "D");

36 
	`begö_å™ß˘i⁄
();

37 
	`upd©e
(
èbÀ_1
, 1, "table1_A");

38 
	`upd©e
(
èbÀ_1
, 2, "table1_B");

39 
	`upd©e
(
èbÀ_2
, 1, "table2_C");

40 
	`upd©e
(
èbÀ_2
, 2, "table2_D");

41 
	`commô_å™ß˘i⁄
();

48 
	`˛o£_èbÀ
(
èbÀ_1
);

49 
	`˛o£_èbÀ
(
èbÀ_2
);

51 
	`ªmove
("DATA1");

52 
	`ªmove
("DATA2");

54  
EXIT_SUCCESS
;

55 
	}
}

	@
1
.
0
5
61
include/bpt.h
include/file.h
src/bpt.c
src/file.c
src/main.c
