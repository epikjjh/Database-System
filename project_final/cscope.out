cscope 15 $HOME/mysql/Lab/project_final -q 0000000323 0000049223
	@include/bpt.h

1 #i‚de‡
__BPT_H__


2 
	#__BPT_H__


	)

4 
›í_èbÀ
(c⁄° * 
fûíame
);

5 * 
föd
(
èbÀ_id
, 
uöt64_t
 
key
);

6 
ö£π
(
èbÀ_id
, 
uöt64_t
 
key
, c⁄° * 
vÆue
);

7 
dñëe
(
èbÀ_id
, 
uöt64_t
 
key
);

9 
¥öt_åì
(
èbÀ_id
);

13 
öô_db
(
num_buf
);

15 
˛o£_èbÀ
(
èbÀ_id
);

17 
shutdown_db
();

	@include/file.h

1 
	~<°ddef.h
>

2 
	~<öây≥s.h
>

4 
	#BPTREE_INTERNAL_ORDER
 249

5 
	#BPTREE_LEAF_ORDER
 32

6 

	)

7 
	#PAGE_SIZE
 4096

	)

9 
	#SIZE_KEY
 8

	)

10 
	#SIZE_VALUE
 120

	)

11 
	#SIZE_RECORD
 (
SIZE_KEY
 + 
SIZE_VALUE
)

	)

13 
	#BPTREE_MAX_NODE
 (1024 * 1024)

14 

	)

15 
	#OUTPUT_ORDER
 16

	)

16 
	#SIZE_LOG
 280

	)

28 
	s_Rec‹d
 {

29 
uöt64_t
 
	mkey
;

30 
	mvÆue
[
SIZE_VALUE
];

31 } 
	tRec‹d
;

33 
	s_I¡î«lRec‹d
 {

34 
uöt64_t
 
	mkey
;

35 
off_t
 
	moff£t
;

36 } 
	tI¡î«lRec‹d
;

39 
	s_Resu…
 {

40 
uöt64_t
 
	mkey1
;

41 
	mvÆue1
[
SIZE_VALUE
];

42 
uöt64_t
 
	mkey2
;

43 
	mvÆue2
[
SIZE_VALUE
];

44 } 
	tResu…
;

46 
	s_Page
 {

47 
	mbyãs
[
PAGE_SIZE
];

50 
off_t
 
	mfûe_off£t
;

51 } 
	tPage
;

53 
	s_FªePage
 {

54 
off_t
 
	m√xt
;

55 
	mª£rved
[
PAGE_SIZE
 - 8];

58 
off_t
 
	mfûe_off£t
;

59 } 
	tFªePage
;

61 
	s_HódîPage
 {

62 
off_t
 
	m‰ìli°
;

63 
off_t
 
	mroŸ_off£t
;

64 
uöt64_t
 
	mnum_∑ges
;

65 
off_t
 
	m∑ge_l¢
;

66 
	mª£rved
[
PAGE_SIZE
 - 32];

69 
off_t
 
	mfûe_off£t
;

70 } 
	tHódîPage
;

72 
	#INTERNAL_KEY
(
n
, 
i
Ë(“)->
úec‹ds
[(i)+1].
key
)

	)

73 
	#INTERNAL_OFFSET
(
n
, 
i
Ë(“)->
úec‹ds
[(i)].
off£t
)

	)

74 
	s_I¡î«lPage
 {

77 
off_t
 
	m∑ª¡
;

78 
	mis_Àaf
;

79 
	mnum_keys
;

80 
	mª£rved_1
[8];

81 
off_t
 
	m∑ge_l¢
;

82 
	mª£rved_2
[112 - 32];

83 
I¡î«lRec‹d
 
	múec‹ds
[
BPTREE_INTERNAL_ORDER
];

85 
	m•a˚
[
PAGE_SIZE
];

88 
off_t
 
	mfûe_off£t
;

89 } 
	tI¡î«lPage
;

91 
	#LEAF_KEY
(
n
, 
i
Ë(“)->
ªc‹ds
[(i)].
key
)

	)

92 
	#LEAF_VALUE
(
n
, 
i
Ë(“)->
ªc‹ds
[(i)].
vÆue
)

	)

93 
	s_LófPage
 {

96 
off_t
 
	m∑ª¡
;

97 
	mis_Àaf
;

98 
	mnum_keys
;

99 
	mª£rved_1
[8];

100 
off_t
 
	m∑ge_l¢
;

101 
	mª£rved_2
[120 - 32];

102 
off_t
 
	msiblög
;

103 
Rec‹d
 
	mªc‹ds
[
BPTREE_LEAF_ORDER
-1];

105 
	m•a˚
[
PAGE_SIZE
];

109 
off_t
 
	mfûe_off£t
;

110 } 
	tLófPage
;

112 
	s_NodePage
 {

115 
off_t
 
	m∑ª¡
;

116 
	mis_Àaf
;

117 
	mnum_keys
;

118 
	mª£rved_1
[8];

119 
off_t
 
	m∑ge_l¢
;

121 
	m•a˚
[
PAGE_SIZE
];

125 
off_t
 
	mfûe_off£t
;

126 } 
	tNodePage
;

129 
	#RESULT_KEY1
(
n
, 
i
Ë(“)->
ªsu…s
[(i)].
key1
)

	)

130 
	#RESULT_VALUE1
(
n
, 
i
Ë(“)->
ªsu…s
[(i)].
vÆue1
)

	)

131 
	#RESULT_KEY2
(
n
, 
i
Ë(“)->
ªsu…s
[(i)].
key2
)

	)

132 
	#RESULT_VALUE2
(
n
, 
i
Ë(“)->
ªsu…s
[(i)].
vÆue2
)

	)

133 
	s_OuçutPage
 {

135 
Resu…
 
	mªsu…s
[
OUTPUT_ORDER
];

136 
	m•a˚
[
PAGE_SIZE
];

140 
off_t
 
	mfûe_off£t
;

141 } 
	tOuçutPage
;

144 
›í_èbÀ
(c⁄° * 
fûíame
);

148 
˛o£_db
(
èbÀ_id
);

151 
off_t
 
gë_‰ì_∑ge
(
èbÀ_id
);

154 
put_‰ì_∑ge
(
èbÀ_id
, 
off_t
 
∑ge_off£t
);

157 
ex∑nd_fûe
(
èbÀ_id
, 
size_t
 
˙t_∑ge_to_ex∑nd
);

160 
lﬂd_∑ge
(
èbÀ_id
, 
off_t
 
off£t
, 
Page
* 
∑ge
);

163 
Êush_∑ge
(
èbÀ_id
, 
Page
* 
∑ge
);

165 
HódîPage
 
dbhódî
[10];

169 
	s_Buf„r
{

170 
Page
 *
	m‰ame
;

171 
	mèbÀ_id
;

172 
off_t
 
	m∑ge_off£t
;

173 
	mis_dúty
;

175 
	mªfbô
;

176 } 
	tBuf„r
;

179 
lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
off_t
 
off£t
, 
Page
* 
∑ge
);

182 
Page
* 
check_buf„r_f‹_lﬂd
(
èbÀ_id
, 
off_t
 
off£t
);

185 
check_buf„r_f‹_Êush
(
èbÀ_id
, 
off_t
 
off£t
);

187 
ª∂a˚_∑ge
(
FILE
 *
fûe
);

190 
Êush_∑ge_to_buf„r
(
èbÀ_id
, 
Page
* 
∑ge
);

193 
joö_èbÀ
(
èbÀ_id_1
, 
èbÀ_id_2
, *
∑th«me
);

195 
èbÀ_öfo
(
èbÀ_id
, 
uöt64_t
 *
num_keys
, uöt64_à*
mö_key
, uöt64_à*
max_key
);

197 
wrôe_ouçut_buf„r
(
FILE
 *
fûe
, 
uöt64_t
 
key1
, *
vÆue1
, uöt64_à
key2
, *
vÆue2
);

199 
lﬂd_ouçut_∑ge
(
Page
 *
∑ge
);

201 
Êush_ouçut_∑ge
(
FILE
 *
fûe
, 
Page
 *
∑ge
);

203 
sync_buf„r
(
FILE
 *
fûe
);

206 
	s_LogRec‹d
{

208 
off_t
 
	ml¢
;

209 
off_t
 
	m¥ev_l¢
;

210 
	mxid
;

211 
	mty≥
;

217 
	mèbÀ_id
;

218 
	m≤um
;

219 
	moff£t
;

220 
	mÀngth
;

221 
	mﬁd_image
[120];

222 
	m√w_image
[120];

224 }
	tLogRec‹d
;

228 
begö_å™ß˘i⁄
();

233 
commô_å™ß˘i⁄
();

237 
ab‹_å™ß˘i⁄
();

241 
upd©e
(
èbÀ_id
, 
öt64_t
 
key
, *
vÆue
);

243 
¸óã_log
(
ty≥
, 
èbÀ_id
, 
≤um
, 
off£t
, 
Àngth
, *
ﬁd_image
, *
√w_image
);

245 
Êush_log
(
size
);

247 
ªcovîy
();

249 
execuã_wÆ
();

	@src/bpt.c

4 
	#Vîsi⁄
 "1.14"

	)

57 
	~<°dio.h
>

58 
	~<°dlib.h
>

59 
	~<°dboﬁ.h
>

60 
	~<°döt.h
>

61 
	~<°rög.h
>

62 
	~<öây≥s.h
>

63 
	~<as£π.h
>

64 
	~<f˙é.h
>

65 
	~<uni°d.h
>

66 
	~"b±.h
"

67 
	~"fûe.h
"

68 #ifde‡
WINDOWS


69 
	#boﬁ
 

	)

70 
	#Ál£
 0

	)

71 
	#åue
 1

	)

78 
	#MIN_ORDER
 3

	)

79 
	#MAX_ORDER
 256

	)

81 
	#SIZE_LOG_BUFFER
 3

	)

84 
	#LICENSE_FILE
 "LICENSE.txt"

	)

85 
	#LICENSE_WARRANTEE
 0

	)

86 
	#LICENSE_WARRANTEE_START
 592

	)

87 
	#LICENSE_WARRANTEE_END
 624

	)

88 
	#LICENSE_CONDITIONS
 1

	)

89 
	#LICENSE_CONDITIONS_START
 70

	)

90 
	#LICENSE_CONDITIONS_END
 625

	)

93 
HódîPage
 
dbhódî
[10];

94 
dbfûe
[10];

95 
	gèbÀ_ids
[10] = {0,};

107 
	g‹dî_öã∫Æ
 = 
BPTREE_INTERNAL_ORDER
;

108 
	g‹dî_Àaf
 = 
BPTREE_LEAF_ORDER
;

115 
boﬁ
 
	gvîbo£_ouçut
 = 
Ál£
;

118 
Buf„r
 *
	gbuf_mgr
;

119 
	gbuf_size
 = -1;

120 
	g˛ock_h™d
 = 0;

121 
	gèrgë_buf
 = 0;

125 
LogRec‹d
 
	glog_buf
[
SIZE_LOG_BUFFER
];

128 
uöt64_t
 
	gxid
 = 0;

129 
uöt64_t
 
	gl¢
 = 
SIZE_LOG
;

130 
	glog
 = -1;

131 
	glog_h™d
 = 0;

137 
li˚n£_nŸi˚
( );

138 
¥öt_li˚n£
–
li˚n˚_∑π
 );

139 
ußge_1
( );

140 
ußge_2
( );

141 
föd_™d_¥öt
(
èbÀ_id
, 
uöt64_t
 
key
);

142 
boﬁ
 
föd_Àaf
(
èbÀ_id
, 
uöt64_t
 
key
, 
LófPage
* 
out_Àaf_node
);

145 
°¨t_√w_åì
(
èbÀ_id
, 
uöt64_t
 
key
, c⁄° * 
vÆue
);

146 
ö£π_öto_Àaf
(
èlbe_id
, 
LófPage
* 
Àaf_node
, 
uöt64_t
 
key
, c⁄° * 
vÆue
);

147 
ö£π_öto_Àaf_a·î_•lôtög
(
èbÀ_id
, 
LófPage
* 
Àaf_node
, 
uöt64_t
 
key
, c⁄° * 
vÆue
);

148 
ö£π_öto_∑ª¡
(
èbÀ_id
, 
NodePage
* 
À·
, 
uöt64_t
 
key
, NodePage* 
right
);

149 
ö£π_öto_√w_roŸ
(
èbÀ_id
, 
NodePage
* 
À·
, 
uöt64_t
 
key
, NodePage* 
right
);

150 
gë_À·_ödex
(
I¡î«lPage
* 
∑ª¡
, 
off_t
 
À·_off£t
);

151 
ö£π_öto_node
(
I¡î«lPage
 * 
∑ª¡
, 
À·_ödex
, 
uöt64_t
 
key
, 
off_t
 
right_off£t
);

152 
ö£π_öto_node_a·î_•lôtög
(
èbÀ_id
, 
I¡î«lPage
* 
∑ª¡
, 
À·_ödex
, 
uöt64_t
 
key
, 
off_t
 
right_off£t
);

155 
gë_√ighb‹_ödex
(
èbÀ_id
, 
NodePage
* 
node_∑ge
);

156 
adju°_roŸ
(
èbÀ_id
);

157 
cﬂÀs˚_nodes
(
èbÀ_id
, 
NodePage
* 
node_∑ge
, NodePage* 
√ighb‹_∑ge
,

158 
√ighb‹_ödex
, 
k_¥ime
);

159 
ªdi°ribuã_nodes
(
èbÀ_id
, 
NodePage
* 
node_∑ge
, NodePage* 
√ighb‹_∑ge
,

160 
√ighb‹_ödex
,

161 
k_¥ime_ödex
, 
k_¥ime
);

162 
dñëe_íåy
(
èbÀ_id
, 
NodePage
* 
node_∑ge
, 
uöt64_t
 
key
);

171 
	$li˚n£_nŸi˚
( ) {

172 
	`¥ötf
("bpt version %s -- Copyright (C) 2010 Amittai Aviram "

173 "hâp://www.amôèi.com\n", 
Vîsi⁄
);

174 
	`¥ötf
("ThisÖrogram comes with ABSOLUTELY NO WARRANTY; for details "

178 
	}
}

183 
	$¥öt_li˚n£
–
li˚n£_∑π
 ) {

184 
°¨t
, 
íd
, 
löe
;

185 
FILE
 * 
Â
;

186 
buf„r
[0x100];

188 
li˚n£_∑π
) {

189 
LICENSE_WARRANTEE
:

190 
°¨t
 = 
LICENSE_WARRANTEE_START
;

191 
íd
 = 
LICENSE_WARRANTEE_END
;

193 
LICENSE_CONDITIONS
:

194 
°¨t
 = 
LICENSE_CONDITIONS_START
;

195 
íd
 = 
LICENSE_CONDITIONS_END
;

201 
Â
 = 
	`f›í
(
LICENSE_FILE
, "r");

202 i‡(
Â
 =
NULL
) {

203 
	`≥º‹
("print_license: fopen");

204 
	`exô
(
EXIT_FAILURE
);

206 
löe
 = 0;Üöê< 
°¨t
;Üine++)

207 
	`fgës
(
buf„r
, (buf„r), 
Â
);

208  ; 
löe
 < 
íd
;Üine++) {

209 
	`fgës
(
buf„r
, (buf„r), 
Â
);

210 
	`¥ötf
("%s", 
buf„r
);

212 
	`f˛o£
(
Â
);

213 
	}
}

217 
	$ußge_1
( ) {

218 
	`¥ötf
("B+ Tªêo‡Ordî %d(I¡î«l).\n", 
‹dî_öã∫Æ
);

219 
	`¥ötf
("Following Silberschatz, Korth, Sidarshan, Database Concepts, "

224 
	`¥ötf
("(%d <‹dî <%d).\n", 
MIN_ORDER
, 
MAX_ORDER
);

225 
	`¥ötf
("To start with input fromá file ofÇewline-delimited integers, \n"

228 
	}
}

232 
	$ußge_2
( ) {

233 
	`¥ötf
("Enterány ofÅhe following commandsáfterÅheÖrompt > :\n"

249 
	}
}

253 
	$›í_èbÀ
(c⁄° * 
fûíame
) {

254 
i
, 
èbÀ_id
;

255 
size_t
 
Àn
;

257 
Àn
 = 
	`°æí
(
fûíame
);

259 if(()
Àn
 == 5){

260 
èbÀ_id
 = 
fûíame
[4];

261 
i
 = 
èbÀ_id
 - '0' - 1;

263 if(()
Àn
 == 6){

264 
i
 = 9;

268 
	`¥ötf
("Wrong input!\n");

272 
dbfûe
[
i
] = 
	`›í
(
fûíame
, 
O_RDWR
);

273 i‡(
dbfûe
[
i
] < 0) {

275 
dbfûe
[
i
] = 
	`›í
(
fûíame
, 
O_CREAT
|
O_RDWR
, 
S_IRUSR
|
S_IWUSR
);

276 i‡(
dbfûe
[
i
] < 0) {

277 
	`as£π
("failedÅo createÇew db file");

281 
	`mem£t
((
dbhódî
+
i
), 0, 
PAGE_SIZE
);

282 
dbhódî
[
i
].
‰ìli°
 = 0;

283 
dbhódî
[
i
].
roŸ_off£t
 = 0;

284 
dbhódî
[
i
].
num_∑ges
 = 1;

285 
dbhódî
[
i
].
fûe_off£t
 = 0;

286 
dbhódî
[
i
].
∑ge_l¢
 = -1;

287 
	`Êush_∑ge_to_buf„r
(
i
+1, (
Page
*)(
dbhódî
 + i));

290 
	`lﬂd_∑ge_‰om_buf„r
(
i
+1, 0, (
Page
*)(
dbhódî
+i));

293 if(
dbhódî
[
i
].
num_∑ges
 == 0){

294 
dbhódî
[
i
].
num_∑ges
 = 1;

295 
	`Êush_∑ge_to_buf„r
(
i
+1, (
Page
*)(
dbhódî
 + i));

297 
dbhódî
[
i
].
fûe_off£t
 = 0;

300  
i
+1;

301 
	}
}

304 
	$˛o£_db
(
èbÀ_id
) {

305 
	`˛o£
(
dbfûe
[
èbÀ_id
 - 1]);

306 
	}
}

321 
off_t
 
	gqueue
[
BPTREE_MAX_NODE
];

322 
	$¥öt_åì
(
èbÀ_id
) {

324 
i
;

325 
‰⁄t
 = 0;

326 
ª¨
 = 0;

328 i‡(
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
 == 0) {

329 
	`¥ötf
("EmptyÅree.\n");

333 
queue
[
ª¨
] = 
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
;

334 
ª¨
++;

335 
queue
[
ª¨
] = 0;

336 
ª¨
++;

337 
‰⁄t
 < 
ª¨
) {

338 
off_t
 
∑ge_off£t
 = 
queue
[
‰⁄t
];

339 
‰⁄t
++;

341 i‡(
∑ge_off£t
 == 0) {

342 
	`¥ötf
("\n");

344 i‡(
‰⁄t
 =
ª¨
) ;

347 
queue
[
ª¨
] = 0;

348 
ª¨
++;

352 
NodePage
 
node_∑ge
;

353 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
∑ge_off£t
, (
Page
*)&
node_∑ge
);

354 i‡(
node_∑ge
.
is_Àaf
 == 1) {

356 
LófPage
* 
Àaf_node
 = (LófPage*)&
node_∑ge
;

357 
i
 = 0; i < 
Àaf_node
->
num_keys
; i++) {

358 
	`¥ötf
("%" 
PRIu64
 " ", 
	`LEAF_KEY
(
Àaf_node
, 
i
));

360 
	`¥ötf
("| ");

363 
I¡î«lPage
* 
öã∫Æ_node
 = (I¡î«lPage*)&
node_∑ge
;

364 
i
 = 0; i < 
öã∫Æ_node
->
num_keys
; i++) {

365 
	`¥ötf
("%" 
PRIu64
 " ", 
	`INTERNAL_KEY
(
öã∫Æ_node
, 
i
));

366 
queue
[
ª¨
] = 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, 
i
);

367 
ª¨
++;

369 
queue
[
ª¨
] = 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, 
i
);

370 
ª¨
++;

371 
	`¥ötf
("| ");

374 
	}
}

379 
	$föd_™d_¥öt
(
èbÀ_id
, 
uöt64_t
 
key
) {

380 * 
vÆue_found
 = 
NULL
;

381 
vÆue_found
 = 
	`föd
(
èbÀ_id
, 
key
);

382 i‡(
vÆue_found
 =
NULL
) {

383 
	`¥ötf
("Rec‹dÇŸ found undî key %" 
PRIu64
 ".\n", 
key
);

386 
	`¥ötf
("key %" 
PRIu64
 ", vÆuê[%s].\n", 
key
, 
vÆue_found
);

387 
	`‰ì
(
vÆue_found
);

389 
	}
}

396 
boﬁ
 
	$föd_Àaf
(
èbÀ_id
, 
uöt64_t
 
key
, 
LófPage
* 
out_Àaf_node
) {

397 
i
 = 0;

398 
off_t
 
roŸ_off£t
 = 
dbhódî
[
èbÀ_id
 - 1].root_offset;

400 i‡(
roŸ_off£t
 == 0) {

401  
Ál£
;

404 
NodePage
 
∑ge
;

405 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
roŸ_off£t
, (
Page
*)&
∑ge
);

407 !
∑ge
.
is_Àaf
) {

408 
I¡î«lPage
* 
öã∫Æ_node
 = (I¡î«lPage*)&
∑ge
;

410 
i
 = 0;

411 
i
 < 
öã∫Æ_node
->
num_keys
) {

412 i‡(
key
 >
	`INTERNAL_KEY
(
öã∫Æ_node
, 
i
)) i++;

416 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, 
i
), (
Page
*)&
∑ge
);

419 
	`mem˝y
(
out_Àaf_node
, &
∑ge
, (
LófPage
));

421  
åue
;

422 
	}
}

428 * 
	$föd
(
èbÀ_id
, 
uöt64_t
 
key
) {

429 
i
 = 0;

430 * 
out_vÆue
;

432 
LófPage
 
Àaf_node
;

433 i‡(!
	`föd_Àaf
(
èbÀ_id
, 
key
, &
Àaf_node
)) {

434  
NULL
;

437 
i
 = 0; i < 
Àaf_node
.
num_keys
; i++) {

438 i‡(
	`LEAF_KEY
(&
Àaf_node
, 
i
Ë=
key
) {

439 
out_vÆue
 = (*)
	`mÆloc
(
SIZE_VALUE
 * ());

440 
	`mem˝y
(
out_vÆue
, 
	`LEAF_VALUE
(&
Àaf_node
, 
i
), 
SIZE_VALUE
);

441  
out_vÆue
;

445  
NULL
;

446 
	}
}

451 
	$cut
–
Àngth
 ) {

452 i‡(
Àngth
 % 2 == 0)

453  
Àngth
/2;

455  
Àngth
/2 + 1;

456 
	}
}

463 
	$gë_À·_ödex
(
I¡î«lPage
* 
∑ª¡
, 
off_t
 
À·_off£t
) {

465 
À·_ödex
 = 0;

466 
À·_ödex
 <
∑ª¡
->
num_keys
 &&

467 
	`INTERNAL_OFFSET
(
∑ª¡
, 
À·_ödex
Ë!
À·_off£t
)

468 
À·_ödex
++;

469  
À·_ödex
;

470 
	}
}

476 
	$ö£π_öto_Àaf
(
èbÀ_id
, 
LófPage
* 
Àaf_node
, 
uöt64_t
 
key
, c⁄° * 
vÆue
) {

477 
ö£πi⁄_poöt
;

478 
i
;

480 
ö£πi⁄_poöt
 = 0;

481 
ö£πi⁄_poöt
 < 
Àaf_node
->
num_keys
 &&

482 
	`LEAF_KEY
(
Àaf_node
, 
ö£πi⁄_poöt
Ë< 
key
)

483 
ö£πi⁄_poöt
++;

486 
i
 = 
Àaf_node
->
num_keys
 - 1; i >
ö£πi⁄_poöt
; i--) {

487 
	`LEAF_KEY
(
Àaf_node
, 
i
+1) = LEAF_KEY(leaf_node, i);

488 
	`mem˝y
(
	`LEAF_VALUE
(
Àaf_node
, 
i
+1), LEAF_VALUE÷óf_node, i), 
SIZE_VALUE
);

491 
	`LEAF_KEY
(
Àaf_node
, 
ö£πi⁄_poöt
Ë
key
;

492 
	`mem˝y
(
	`LEAF_VALUE
(
Àaf_node
, 
ö£πi⁄_poöt
), 
vÆue
, 
SIZE_VALUE
);

493 
Àaf_node
->
num_keys
++;

496 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
Àaf_node
);

497 
	}
}

504 
	$ö£π_öto_Àaf_a·î_•lôtög
(
èbÀ_id
, 
LófPage
* 
Àaf
, 
uöt64_t
 
key
, c⁄° * 
vÆue
) {

506 
ö£πi⁄_ödex
, 
•lô
, 
i
, 
j
;

507 
uöt64_t
 
√w_key
;

510 
LófPage
 
√w_Àaf
;

511 
√w_Àaf
.
is_Àaf
 = 
åue
;

512 
√w_Àaf
.
num_keys
 = 0;

514 
ö£πi⁄_ödex
 = 0;

515 
ö£πi⁄_ödex
 < 
‹dî_Àaf
 - 1 && 
	`LEAF_KEY
(
Àaf
, in£πi⁄_ödexË< 
key
)

516 
ö£πi⁄_ödex
++;

518 
•lô
 = 
	`cut
(
‹dî_Àaf
 - 1);

520 i‡(
ö£πi⁄_ödex
 < 
•lô
) {

522 
i
 = 
•lô
 - 1, 
j
 = 0; i < 
‹dî_Àaf
 - 1; i++, j++) {

523 
	`LEAF_KEY
(&
√w_Àaf
, 
j
ËLEAF_KEY(
Àaf
, 
i
);

524 
	`mem˝y
(
	`LEAF_VALUE
(&
√w_Àaf
, 
j
), LEAF_VALUE(
Àaf
, 
i
), 
SIZE_VALUE
);

526 
√w_Àaf
.
num_keys
++;

527 
Àaf
->
num_keys
--;

530 
i
 = 
•lô
 - 2; i >
ö£πi⁄_ödex
; i--) {

531 
	`LEAF_KEY
(
Àaf
, 
i
+1) = LEAF_KEY(leaf, i);

532 
	`mem˝y
(
	`LEAF_VALUE
(
Àaf
, 
i
+1), LEAF_VALUE÷óf, i), 
SIZE_VALUE
);

534 
	`LEAF_KEY
(
Àaf
, 
ö£πi⁄_ödex
Ë
key
;

535 
	`mem˝y
(
	`LEAF_VALUE
(
Àaf
, 
ö£πi⁄_ödex
), 
vÆue
, 
SIZE_VALUE
);

536 
Àaf
->
num_keys
++;

539 
i
 = 
•lô
, 
j
 = 0; i < 
‹dî_Àaf
 - 1; i++, j++) {

540 i‡(
i
 =
ö£πi⁄_ödex
) {

542 
j
++;

544 
	`LEAF_KEY
(&
√w_Àaf
, 
j
ËLEAF_KEY(
Àaf
, 
i
);

545 
	`mem˝y
(
	`LEAF_VALUE
(&
√w_Àaf
, 
j
), LEAF_VALUE(
Àaf
, 
i
), 
SIZE_VALUE
);

547 
√w_Àaf
.
num_keys
++;

548 
Àaf
->
num_keys
--;

550 
	`LEAF_KEY
(&
√w_Àaf
, 
ö£πi⁄_ödex
 - 
•lô
Ë
key
;

551 
	`mem˝y
(
	`LEAF_VALUE
(&
√w_Àaf
, 
ö£πi⁄_ödex
 - 
•lô
), 
vÆue
, 
SIZE_VALUE
);

552 
√w_Àaf
.
num_keys
++;

556 
√w_Àaf
.
fûe_off£t
 = 
	`gë_‰ì_∑ge
(
èbÀ_id
);

559 
√w_Àaf
.
∑ge_l¢
 = -1;

562 
√w_Àaf
.
siblög
 = 
Àaf
->sibling;

563 
Àaf
->
siblög
 = 
√w_Àaf
.
fûe_off£t
;

566 
i
 = 
Àaf
->
num_keys
; i < 
‹dî_Àaf
 - 1; i++) {

567 
	`LEAF_KEY
(
Àaf
, 
i
) = 0;

568 
	`mem£t
(
	`LEAF_VALUE
(
Àaf
, 
i
), 0, 
SIZE_VALUE
);

570 
i
 = 
√w_Àaf
.
num_keys
; i < 
‹dî_Àaf
 - 1; i++) {

571 
	`LEAF_KEY
(&
√w_Àaf
, 
i
) = 0;

572 
	`mem£t
(
	`LEAF_VALUE
(&
√w_Àaf
, 
i
), 0, 
SIZE_VALUE
);

575 
√w_Àaf
.
∑ª¡
 = 
Àaf
->parent;

577 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
Àaf
);

578 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
√w_Àaf
);

580 
√w_key
 = 
	`LEAF_KEY
(&
√w_Àaf
, 0);

583 
	`ö£π_öto_∑ª¡
(
èbÀ_id
, (
NodePage
*)
Àaf
, 
√w_key
, (NodePage*)&
√w_Àaf
);

584 
	}
}

590 
	$ö£π_öto_node
(
I¡î«lPage
* 
n
, 
À·_ödex
, 
uöt64_t
 
key
, 
off_t
 
right_off£t
) {

591 
i
;

593 
i
 = 
n
->
num_keys
; i > 
À·_ödex
; i--) {

594 
	`INTERNAL_OFFSET
(
n
, 
i
 + 1) = INTERNAL_OFFSET(n, i);

595 
	`INTERNAL_KEY
(
n
, 
i
) = INTERNAL_KEY(n, i - 1);

597 
	`INTERNAL_OFFSET
(
n
, 
À·_ödex
 + 1Ë
right_off£t
;

598 
	`INTERNAL_KEY
(
n
, 
À·_ödex
Ë
key
;

599 
n
->
num_keys
++;

600 
	}
}

606 
	$ö£π_öto_node_a·î_•lôtög
(
èbÀ_id
, 
I¡î«lPage
* 
ﬁd_node
, 
À·_ödex
, 
uöt64_t
 
key
, 
off_t
 
right_off£t
) {

607 
i
, 
j
, 
•lô
, 
k_¥ime
;

608 
uöt64_t
* 
ãmp_keys
;

609 
off_t
* 
ãmp_poöãrs
;

620 
ãmp_poöãrs
 = 
	`mÆloc
–(
‹dî_öã∫Æ
 + 1Ë* (
off_t
) );

621 i‡(
ãmp_poöãrs
 =
NULL
) {

622 
	`≥º‹
("TemporaryÖointersárray for splittingÇodes.");

623 
	`exô
(
EXIT_FAILURE
);

625 
ãmp_keys
 = 
	`mÆloc
–
‹dî_öã∫Æ
 * (
uöt64_t
) );

626 i‡(
ãmp_keys
 =
NULL
) {

627 
	`≥º‹
("Temporary keysárray for splittingÇodes.");

628 
	`exô
(
EXIT_FAILURE
);

631 
i
 = 0, 
j
 = 0; i < 
ﬁd_node
->
num_keys
 + 1; i++, j++) {

632 i‡(
j
 =
À·_ödex
 + 1) j++;

633 
ãmp_poöãrs
[
j
] = 
	`INTERNAL_OFFSET
(
ﬁd_node
, 
i
);

636 
i
 = 0, 
j
 = 0; i < 
ﬁd_node
->
num_keys
; i++, j++) {

637 i‡(
j
 =
À·_ödex
) j++;

638 
ãmp_keys
[
j
] = 
	`INTERNAL_KEY
(
ﬁd_node
, 
i
);

641 
ãmp_poöãrs
[
À·_ödex
 + 1] = 
right_off£t
;

642 
ãmp_keys
[
À·_ödex
] = 
key
;

648 
•lô
 = 
	`cut
(
‹dî_öã∫Æ
);

650 
I¡î«lPage
 
√w_node
;

651 
√w_node
.
num_keys
 = 0;

652 
√w_node
.
is_Àaf
 = 0;

653 
√w_node
.
fûe_off£t
 = 
	`gë_‰ì_∑ge
(
èbÀ_id
);

656 
√w_node
.
∑ge_l¢
 = -1;

658 
ﬁd_node
->
num_keys
 = 0;

659 
i
 = 0; i < 
•lô
 - 1; i++) {

660 
	`INTERNAL_OFFSET
(
ﬁd_node
, 
i
Ë
ãmp_poöãrs
[i];

661 
	`INTERNAL_KEY
(
ﬁd_node
, 
i
Ë
ãmp_keys
[i];

662 
ﬁd_node
->
num_keys
++;

664 
	`INTERNAL_OFFSET
(
ﬁd_node
, 
i
Ë
ãmp_poöãrs
[i];

665 
k_¥ime
 = 
ãmp_keys
[
•lô
 - 1];

666 ++
i
, 
j
 = 0; i < 
‹dî_öã∫Æ
; i++, j++) {

667 
	`INTERNAL_OFFSET
(&
√w_node
, 
j
Ë
ãmp_poöãrs
[
i
];

668 
	`INTERNAL_KEY
(&
√w_node
, 
j
Ë
ãmp_keys
[
i
];

669 
√w_node
.
num_keys
++;

671 
	`INTERNAL_OFFSET
(&
√w_node
, 
j
Ë
ãmp_poöãrs
[
i
];

672 
	`‰ì
(
ãmp_poöãrs
);

673 
	`‰ì
(
ãmp_keys
);

674 
√w_node
.
∑ª¡
 = 
ﬁd_node
->parent;

675 
i
 = 0; i <
√w_node
.
num_keys
; i++) {

676 
NodePage
 
chûd_∑ge
;

677 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
	`INTERNAL_OFFSET
(&
√w_node
, 
i
), (
Page
*)&
chûd_∑ge
);

678 
chûd_∑ge
.
∑ª¡
 = 
√w_node
.
fûe_off£t
;

679 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
chûd_∑ge
);

683 
i
 = 
ﬁd_node
->
num_keys
; i < 
‹dî_öã∫Æ
 - 1; i++) {

684 
	`INTERNAL_OFFSET
(
ﬁd_node
, 
i
+1) = 0;

685 
	`INTERNAL_KEY
(
ﬁd_node
, 
i
) = 0;

688 
i
 = 
√w_node
.
num_keys
; i < 
‹dî_öã∫Æ
 - 1; i++) {

689 
	`INTERNAL_OFFSET
(&
√w_node
, 
i
+1) = 0;

690 
	`INTERNAL_KEY
(&
√w_node
, 
i
) = 0;

694 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
√w_node
);

695 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
ﬁd_node
);

701 
	`ö£π_öto_∑ª¡
(
èbÀ_id
, (
NodePage
*)
ﬁd_node
, 
k_¥ime
, (NodePage*)&
√w_node
);

702 
	}
}

707 
	$ö£π_öto_∑ª¡
(
èbÀ_id
, 
NodePage
* 
À·
, 
uöt64_t
 
key
, NodePage* 
right
) {

709 
I¡î«lPage
 
∑ª¡_node
;

712 i‡(
À·
->
∑ª¡
 == 0) {

713 
	`ö£π_öto_√w_roŸ
(
èbÀ_id
, 
À·
, 
key
, 
right
);

717 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
À·
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

727 
À·_ödex
 = 
	`gë_À·_ödex
(&
∑ª¡_node
, 
À·
->
fûe_off£t
);

732 i‡(
∑ª¡_node
.
num_keys
 < 
‹dî_öã∫Æ
 - 1) {

733 
	`ö£π_öto_node
(&
∑ª¡_node
, 
À·_ödex
, 
key
, 
right
->
fûe_off£t
);

734 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
∑ª¡_node
);

742  
	`ö£π_öto_node_a·î_•lôtög
(
èbÀ_id
, &
∑ª¡_node
, 
À·_ödex
, 
key
, 
right
->
fûe_off£t
);

743 
	}
}

749 
	$ö£π_öto_√w_roŸ
(
èbÀ_id
, 
NodePage
* 
À·
, 
uöt64_t
 
key
, NodePage* 
right
) {

751 
I¡î«lPage
 
roŸ_node
;

752 
	`mem£t
(&
roŸ_node
, 0, (
I¡î«lPage
));

753 
roŸ_node
.
fûe_off£t
 = 
	`gë_‰ì_∑ge
(
èbÀ_id
);

756 
roŸ_node
.
∑ge_l¢
 = -1;

758 
	`INTERNAL_KEY
(&
roŸ_node
, 0Ë
key
;

759 
	`INTERNAL_OFFSET
(&
roŸ_node
, 0Ë
À·
->
fûe_off£t
;

760 
	`INTERNAL_OFFSET
(&
roŸ_node
, 1Ë
right
->
fûe_off£t
;

761 
roŸ_node
.
num_keys
++;

762 
roŸ_node
.
∑ª¡
 = 0;

763 
roŸ_node
.
is_Àaf
 = 0;

764 
À·
->
∑ª¡
 = 
roŸ_node
.
fûe_off£t
;

765 
right
->
∑ª¡
 = 
roŸ_node
.
fûe_off£t
;

767 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
roŸ_node
);

768 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
À·
);

769 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
right
);

771 
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
 = 
roŸ_node
.
fûe_off£t
;

772 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)(
dbhódî
 +Åable_id - 1));

773 
	}
}

777 
	$°¨t_√w_åì
(
èbÀ_id
, 
uöt64_t
 
key
, c⁄° * 
vÆue
) {

778 
LófPage
 
roŸ_node
;

780 
off_t
 
roŸ_off£t
 = 
	`gë_‰ì_∑ge
(
èbÀ_id
);

781 
roŸ_node
.
fûe_off£t
 = 
roŸ_off£t
;

783 
roŸ_node
.
∑ª¡
 = 0;

784 
roŸ_node
.
is_Àaf
 = 1;

785 
roŸ_node
.
num_keys
 = 1;

786 
	`LEAF_KEY
(&
roŸ_node
, 0Ë
key
;

787 
roŸ_node
.
siblög
 = 0;

790 
roŸ_node
.
∑ge_l¢
 = -1;

792 
	`mem˝y
(
	`LEAF_VALUE
(&
roŸ_node
, 0), 
vÆue
, 
SIZE_VALUE
);

794 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
roŸ_node
);

796 
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
 =Ñoot_offset;

797 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)(
dbhódî
 +Åable_id - 1));

798 
	}
}

806 
	$ö£π
(
èbÀ_id
, 
uöt64_t
 
key
, c⁄° * 
vÆue
) {

810 * 
vÆue_found
 = 
NULL
;

812 i‡((
vÆue_found
 = 
	`föd
(
èbÀ_id
, 
key
)) != 0) {

813 
	`‰ì
(
vÆue_found
);

820 i‡(
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
 == 0) {

821 
	`°¨t_√w_åì
(
èbÀ_id
, 
key
, 
vÆue
);

829 
LófPage
 
Àaf_node
;

830 
	`föd_Àaf
(
èbÀ_id
, 
key
, &
Àaf_node
);

835 i‡(
Àaf_node
.
num_keys
 < 
‹dî_Àaf
 - 1) {

836 
	`ö£π_öto_Àaf
(
èbÀ_id
, &
Àaf_node
, 
key
, 
vÆue
);

840 
	`ö£π_öto_Àaf_a·î_•lôtög
(
èbÀ_id
, &
Àaf_node
, 
key
, 
vÆue
);

843 
	}
}

853 
	$gë_√ighb‹_ödex
(
èbÀ_id
, 
NodePage
* 
node_∑ge
) {

855 
i
;

863 
I¡î«lPage
 
∑ª¡_node
;

864 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
node_∑ge
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

865 
i
 = 0; i <
∑ª¡_node
.
num_keys
; i++)

866 i‡(
	`INTERNAL_OFFSET
(&
∑ª¡_node
, 
i
Ë=
node_∑ge
->
fûe_off£t
)

867  
i
 - 1;

870 
	`as£π
("Search forÇonexistentÖointerÅoÇode inÖarent.");

872 
	}
}

874 
	$ªmove_íåy_‰om_node
(
èbÀ_id
, 
NodePage
* 
node_∑ge
, 
uöt64_t
 
key
) {

876 
i
;

877 
key_idx
 = 0;

879 i‡(
node_∑ge
->
is_Àaf
) {

880 
LófPage
* 
Àaf_node
 = (LófPage*)
node_∑ge
;

883 
i
 = 0; i < 
Àaf_node
->
num_keys
; i++) {

884 i‡(
	`LEAF_KEY
(
Àaf_node
, 
i
Ë=
key
) {

885 
key_idx
 = 
i
;

889 i‡(
i
 =
Àaf_node
->
num_keys
) {

890 
	`as£π
("remove_entry_from_node:Ço key inÅhisÖage");

894 
i
 = 
key_idx
; i < 
Àaf_node
->
num_keys
 - 1; i++) {

895 
	`LEAF_KEY
(
Àaf_node
, 
i
) = LEAF_KEY(leaf_node, i+1);

896 
	`mem˝y
(
	`LEAF_VALUE
(
Àaf_node
, 
i
), LEAF_VALUE÷óf_node, i+1), 
SIZE_VALUE
);

899 
	`LEAF_KEY
(
Àaf_node
,Üóf_node->
num_keys
 - 1) = 0;

900 
	`mem£t
(
	`LEAF_VALUE
(
Àaf_node
,Üóf_node->
num_keys
 - 1), 0, 
SIZE_VALUE
);

902 
Àaf_node
->
num_keys
--;

905 
I¡î«lPage
* 
öã∫Æ_node
 = (I¡î«lPage*)
node_∑ge
;

908 
i
 = 0; i < 
öã∫Æ_node
->
num_keys
; i++) {

909 i‡(
	`INTERNAL_KEY
(
öã∫Æ_node
, 
i
Ë=
key
) {

910 
key_idx
 = 
i
;

914 i‡(
i
 =
öã∫Æ_node
->
num_keys
) {

915 
	`as£π
("remove_entry_from_node:Ço key inÅhisÖage");

919 
i
 = 
key_idx
; i < 
öã∫Æ_node
->
num_keys
 - 1; i++) {

920 
	`INTERNAL_KEY
(
öã∫Æ_node
, 
i
) = INTERNAL_KEY(internal_node, i+1);

921 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, 
i
+1) = INTERNAL_OFFSET(internal_node, i+2);

924 
	`INTERNAL_KEY
(
öã∫Æ_node
, i¡î«l_node->
num_keys
 - 1) = 0;

925 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, i¡î«l_node->
num_keys
) = 0;

927 
öã∫Æ_node
->
num_keys
--;

930 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
node_∑ge
);

931 
	}
}

933 
	$adju°_roŸ
(
èbÀ_id
) {

935 
NodePage
 
roŸ_∑ge
;

936 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
dbhódî
[èbÀ_id - 1].
roŸ_off£t
, (
Page
*)&
roŸ_∑ge
);

943 i‡(
roŸ_∑ge
.
num_keys
 > 0)

953 i‡(!
roŸ_∑ge
.
is_Àaf
) {

954 
I¡î«lPage
* 
roŸ_node
 = (I¡î«lPage*)&
roŸ_∑ge
;

955 
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
 = 
	`INTERNAL_OFFSET
(
roŸ_node
, 0);

957 
NodePage
 
node_∑ge
;

958 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
dbhódî
[èbÀ_id - 1].
roŸ_off£t
, (
Page
*)&
node_∑ge
);

959 
node_∑ge
.
∑ª¡
 = 0;

961 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
node_∑ge
);

962 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)(
dbhódî
 +Åable_id - 1));

969 
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
 = 0;

970 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)(
dbhódî
 +Åable_id - 1));

973 
	`put_‰ì_∑ge
(
èbÀ_id
, 
roŸ_∑ge
.
fûe_off£t
);

974 
	}
}

982 
	$cﬂÀs˚_nodes
(
èbÀ_id
, 
NodePage
* 
node_∑ge
, NodePage* 
√ighb‹_∑ge
, 
√ighb‹_ödex
, 
k_¥ime
) {

984 
i
, 
j
, 
√ighb‹_ö£πi⁄_ödex
, 
n_íd
;

985 
NodePage
* 
tmp
;

991 i‡(
√ighb‹_ödex
 == -1) {

992 
tmp
 = 
node_∑ge
;

993 
node_∑ge
 = 
√ighb‹_∑ge
;

994 
√ighb‹_∑ge
 = 
tmp
;

1003 
√ighb‹_ö£πi⁄_ödex
 = 
√ighb‹_∑ge
->
num_keys
;

1010 i‡(!
node_∑ge
->
is_Àaf
) {

1011 
I¡î«lPage
* 
node
 = (I¡î«lPage*)
node_∑ge
;

1012 
I¡î«lPage
* 
√ighb‹_node
 = (I¡î«lPage*)
√ighb‹_∑ge
;

1017 
	`INTERNAL_KEY
(
√ighb‹_node
, 
√ighb‹_ö£πi⁄_ödex
Ë
k_¥ime
;

1018 
√ighb‹_node
->
num_keys
++;

1020 
n_íd
 = 
node
->
num_keys
;

1022 
i
 = 
√ighb‹_ö£πi⁄_ödex
 + 1, 
j
 = 0; j < 
n_íd
; i++, j++) {

1023 
	`INTERNAL_KEY
(
√ighb‹_node
, 
i
ËINTERNAL_KEY(
node
, 
j
);

1024 
	`INTERNAL_OFFSET
(
√ighb‹_node
, 
i
ËINTERNAL_OFFSET(
node
, 
j
);

1025 
√ighb‹_node
->
num_keys
++;

1026 
node
->
num_keys
--;

1033 
	`INTERNAL_OFFSET
(
√ighb‹_node
, 
i
ËINTERNAL_OFFSET(
node
, 
j
);

1038 
i
 = 0; i < 
√ighb‹_node
->
num_keys
 + 1; i++) {

1039 
NodePage
 
chûd_∑ge
;

1040 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
	`INTERNAL_OFFSET
(
√ighb‹_node
, 
i
), (
Page
*)&
chûd_∑ge
);

1041 
chûd_∑ge
.
∑ª¡
 = 
√ighb‹_node
->
fûe_off£t
;

1042 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
chûd_∑ge
);

1045 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
√ighb‹_node
);

1047 
	`put_‰ì_∑ge
(
èbÀ_id
, 
node
->
fûe_off£t
);

1057 
LófPage
* 
node
 = (LófPage*)
node_∑ge
;

1058 
LófPage
* 
√ighb‹_node
 = (LófPage*)
√ighb‹_∑ge
;

1060 
i
 = 
√ighb‹_ö£πi⁄_ödex
, 
j
 = 0; j < 
node
->
num_keys
; i++, j++) {

1061 
	`LEAF_KEY
(
√ighb‹_node
, 
i
ËLEAF_KEY(
node
, 
j
);

1062 
	`mem˝y
(
	`LEAF_VALUE
(
√ighb‹_node
, 
i
), LEAF_VALUE(
node
, 
j
), 
SIZE_VALUE
);

1063 
√ighb‹_node
->
num_keys
++;

1065 
√ighb‹_node
->
siblög
 = 
node
->sibling;

1067 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
√ighb‹_node
);

1069 
	`put_‰ì_∑ge
(
èbÀ_id
, 
node
->
fûe_off£t
);

1072 
NodePage
 
∑ª¡_node
;

1073 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
node_∑ge
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

1074 
	`dñëe_íåy
(
èbÀ_id
, &
∑ª¡_node
, 
k_¥ime
);

1075 
	}
}

1083 
	$ªdi°ribuã_nodes
(
èbÀ_id
, 
NodePage
* 
node_∑ge
, NodePage* 
√ighb‹_∑ge
,

1084 
√ighb‹_ödex
,

1085 
k_¥ime_ödex
, 
k_¥ime
) {

1087 
i
;

1094 i‡(
√ighb‹_ödex
 != -1) {

1095 i‡(!
node_∑ge
->
is_Àaf
) {

1096 
I¡î«lPage
* 
node
 = (I¡î«lPage*)
node_∑ge
;

1097 
I¡î«lPage
* 
√ighb‹_node
 = (I¡î«lPage*)
√ighb‹_∑ge
;

1098 
	`INTERNAL_OFFSET
(
node
,Çode->
num_keys
 + 1) = INTERNAL_OFFSET(node,Çode->num_keys);

1100 
i
 = 
node
->
num_keys
; i > 0; i--) {

1101 
	`INTERNAL_KEY
(
node
, 
i
) = INTERNAL_KEY(node, i - 1);

1102 
	`INTERNAL_OFFSET
(
node
, 
i
) = INTERNAL_OFFSET(node, i - 1);

1104 
	`INTERNAL_OFFSET
(
node
, 0ËINTERNAL_OFFSET(
√ighb‹_node
,Çeighb‹_node->
num_keys
);

1105 
NodePage
 
chûd_∑ge
;

1106 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
	`INTERNAL_OFFSET
(
node
, 0), (
Page
*)&
chûd_∑ge
);

1107 
chûd_∑ge
.
∑ª¡
 = 
node
->
fûe_off£t
;

1108 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
chûd_∑ge
);

1110 
	`INTERNAL_OFFSET
(
√ighb‹_node
,Çeighb‹_node->
num_keys
) = 0;

1111 
	`INTERNAL_KEY
(
node
, 0Ë
k_¥ime
;

1113 
I¡î«lPage
 
∑ª¡_node
;

1114 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
node
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

1115 
	`INTERNAL_KEY
(&
∑ª¡_node
, 
k_¥ime_ödex
ËINTERNAL_KEY(
√ighb‹_node
,Çeighb‹_node->
num_keys
 - 1);

1116 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
∑ª¡_node
);

1121 
node
->
num_keys
++;

1122 
√ighb‹_node
->
num_keys
--;

1124 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
node_∑ge
);

1125 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
√ighb‹_∑ge
);

1128 
LófPage
* 
node
 = (LófPage*)
node_∑ge
;

1129 
LófPage
* 
√ighb‹_node
 = (LófPage*)
√ighb‹_∑ge
;

1131 
i
 = 
node
->
num_keys
; i > 0; i--) {

1132 
	`LEAF_KEY
(
node
, 
i
) = LEAF_KEY(node, i - 1);

1133 
	`mem˝y
(
	`LEAF_VALUE
(
node
, 
i
), LEAF_VALUE“ode, i - 1), 
SIZE_VALUE
);

1135 
	`mem˝y
(
	`LEAF_VALUE
(
node
, 0), LEAF_VALUE(
√ighb‹_node
,Çeighb‹_node->
num_keys
 - 1), 
SIZE_VALUE
);

1136 
	`mem£t
(
	`LEAF_VALUE
(
√ighb‹_node
,Çeighb‹_node->
num_keys
 - 1), 0, 
SIZE_VALUE
);

1137 
	`LEAF_KEY
(
node
, 0ËLEAF_KEY(
√ighb‹_node
,Çeighb‹_node->
num_keys
 - 1);

1139 
I¡î«lPage
 
∑ª¡_node
;

1140 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
node
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

1141 
	`INTERNAL_KEY
(&
∑ª¡_node
, 
k_¥ime_ödex
Ë
	`LEAF_KEY
(
node
, 0);

1142 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
∑ª¡_node
);

1147 
node
->
num_keys
++;

1148 
√ighb‹_node
->
num_keys
--;

1150 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
node_∑ge
);

1151 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
√ighb‹_∑ge
);

1162 i‡(
node_∑ge
->
is_Àaf
) {

1163 
LófPage
* 
node
 = (LófPage*)
node_∑ge
;

1164 
LófPage
* 
√ighb‹_node
 = (LófPage*)
√ighb‹_∑ge
;;

1166 
	`LEAF_KEY
(
node
,Çode->
num_keys
ËLEAF_KEY(
√ighb‹_node
, 0);

1167 
	`mem˝y
(
	`LEAF_VALUE
(
node
,Çode->
num_keys
), LEAF_VALUE(
√ighb‹_node
, 0), 
SIZE_VALUE
);

1169 
I¡î«lPage
 
∑ª¡_node
;

1170 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
node
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

1171 
	`INTERNAL_KEY
(&
∑ª¡_node
, 
k_¥ime_ödex
Ë
	`LEAF_KEY
(
√ighb‹_node
, 1);

1172 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
∑ª¡_node
);

1174 
i
 = 0; i < 
√ighb‹_node
->
num_keys
 - 1; i++) {

1175 
	`LEAF_KEY
(
√ighb‹_node
, 
i
) = LEAF_KEY(neighbor_node, i + 1);

1176 
	`mem˝y
(
	`LEAF_VALUE
(
√ighb‹_node
, 
i
), LEAF_VALUE“eighb‹_node, i + 1), 
SIZE_VALUE
);

1182 
node
->
num_keys
++;

1183 
√ighb‹_node
->
num_keys
--;

1185 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
node_∑ge
);

1186 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
√ighb‹_∑ge
);

1190 
I¡î«lPage
* 
node
 = (I¡î«lPage*)
node_∑ge
;

1191 
I¡î«lPage
* 
√ighb‹_node
 = (I¡î«lPage*)
√ighb‹_∑ge
;

1193 
	`INTERNAL_KEY
(
node
,Çode->
num_keys
Ë
k_¥ime
;

1194 
	`INTERNAL_OFFSET
(
node
,Çode->
num_keys
 + 1ËINTERNAL_OFFSET(
√ighb‹_node
, 0);

1196 
NodePage
 
chûd_∑ge
;

1197 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
	`INTERNAL_OFFSET
(
node
,Çode->
num_keys
 + 1), (
Page
*)&
chûd_∑ge
);

1198 
chûd_∑ge
.
∑ª¡
 = 
node
->
fûe_off£t
;

1199 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
chûd_∑ge
);

1201 
I¡î«lPage
 
∑ª¡_node
;

1202 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
node
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

1203 
	`INTERNAL_KEY
(&
∑ª¡_node
, 
k_¥ime_ödex
ËINTERNAL_KEY(
√ighb‹_node
, 0);

1204 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
∑ª¡_node
);

1206 
i
 = 0; i < 
√ighb‹_node
->
num_keys
 - 1; i++) {

1207 
	`INTERNAL_KEY
(
√ighb‹_node
, 
i
) = INTERNAL_KEY(neighbor_node, i + 1);

1208 
	`INTERNAL_OFFSET
(
√ighb‹_node
, 
i
) = INTERNAL_OFFSET(neighbor_node, i + 1);

1211 
	`INTERNAL_OFFSET
(
√ighb‹_node
, 
i
) = INTERNAL_OFFSET(neighbor_node, i + 1);

1218 
node
->
num_keys
++;

1219 
√ighb‹_node
->
num_keys
--;

1221 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
node_∑ge
);

1222 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)
√ighb‹_∑ge
);

1226 
	}
}

1234 
	$dñëe_íåy
(
èbÀ_id
, 
NodePage
* 
node_∑ge
, 
uöt64_t
 
key
) {

1236 
mö_keys
;

1237 
off_t
 
√ighb‹_off£t
;

1238 
√ighb‹_ödex
;

1239 
k_¥ime_ödex
, 
k_¥ime
;

1240 
ˇ∑côy
;

1244 
	`ªmove_íåy_‰om_node
(
èbÀ_id
, 
node_∑ge
, 
key
);

1248 i‡(
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
 =
node_∑ge
->
fûe_off£t
) {

1249 
	`adju°_roŸ
(
èbÀ_id
);

1261 
mö_keys
 = 
node_∑ge
->
is_Àaf
 ? 
	`cut
(
‹dî_Àaf
 - 1Ë: cut(
‹dî_öã∫Æ
) - 1;

1267 i‡(
node_∑ge
->
num_keys
 >
mö_keys
)

1282 
√ighb‹_ödex
 = 
	`gë_√ighb‹_ödex
(
èbÀ_id
, 
node_∑ge
);

1283 
k_¥ime_ödex
 = 
√ighb‹_ödex
 == -1 ? 0 :Çeighbor_index;

1285 
I¡î«lPage
 
∑ª¡_node
;

1286 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
node_∑ge
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

1288 
k_¥ime
 = 
	`INTERNAL_KEY
(&
∑ª¡_node
, 
k_¥ime_ödex
);

1289 
√ighb‹_off£t
 = 
√ighb‹_ödex
 =-1 ? 
	`INTERNAL_OFFSET
(&
∑ª¡_node
, 1) :

1290 
	`INTERNAL_OFFSET
(&
∑ª¡_node
, 
√ighb‹_ödex
);

1292 
ˇ∑côy
 = 
node_∑ge
->
is_Àaf
 ? 
‹dî_Àaf
 : 
‹dî_öã∫Æ
 - 1;

1294 
NodePage
 
√ighb‹_∑ge
;

1295 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
√ighb‹_off£t
, (
Page
*)&
√ighb‹_∑ge
);

1298 i‡(
√ighb‹_∑ge
.
num_keys
 + 
node_∑ge
->num_key†< 
ˇ∑côy
)

1299 
	`cﬂÀs˚_nodes
(
èbÀ_id
, 
node_∑ge
, &
√ighb‹_∑ge
, 
√ighb‹_ödex
, 
k_¥ime
);

1304 
	`ªdi°ribuã_nodes
(
èbÀ_id
, 
node_∑ge
, &
√ighb‹_∑ge
, 
√ighb‹_ödex
, 
k_¥ime_ödex
, 
k_¥ime
);

1307 
	}
}

1311 
	$dñëe
(
èbÀ_id
, 
uöt64_t
 
key
) {

1313 * 
vÆue_found
 = 
NULL
;

1314 i‡((
vÆue_found
 = 
	`föd
(
èbÀ_id
, 
key
)) == 0) {

1316 
	`‰ì
(
vÆue_found
);

1320 
LófPage
 
Àaf_node
;

1321 
	`föd_Àaf
(
èbÀ_id
, 
key
, &
Àaf_node
);

1323 
	`dñëe_íåy
(
èbÀ_id
, (
NodePage
*)&
Àaf_node
, 
key
);

1326 
	}
}

1329 
	$öô_db
(
num_buf
){

1330 
i
;

1333 
buf_mgr
 = (
Buf„r
 *)
	`ˇŒoc
(
num_buf
, (Buffer));

1335 
i
 = 0; i < 
num_buf
; i++){

1336 
buf_mgr
[
i
].
‰ame
 = (
Page
*)
	`mÆloc
((Page));

1339 if(
buf_mgr
 =
NULL
){

1346 
buf_size
 = 
num_buf
;

1349 
log
 = 
	`›í
("log.db", 
O_RDWR
);

1354 if(
log
 > 0){

1356 
	`ªcovîy
();

1359 
	`˛o£
(
log
);

1360 
	`ªmove
("log.db");

1361 
log
 = -1;

1365 
	}
}

1367 
	$˛o£_èbÀ
(
èbÀ_id
){

1368 
i
;

1371 if(
èbÀ_id
 < 1 ||ÅabÀ_id > 10 || 
buf_size
 =-1 || 
buf_mgr
 =
NULL
){

1375 
i
 = 0; i < 
buf_size
; i++){

1376 if(
buf_mgr
[
i
].
èbÀ_id
 ==Åable_id){

1378 if(
buf_mgr
[
i
].
is_dúty
 == 1){

1379 
	`Êush_∑ge
(
èbÀ_id
, 
buf_mgr
[
i
].
‰ame
);

1382 
	`mem£t
(
buf_mgr
[
i
].
‰ame
, 0, (
Page
));

1383 
buf_mgr
[
i
].
èbÀ_id
 = 0;

1384 
buf_mgr
[
i
].
∑ge_off£t
 = 0;

1385 
buf_mgr
[
i
].
is_dúty
 = 0;

1386 
buf_mgr
[
i
].
ªfbô
 = 0;

1391 
èbÀ_ids
[
èbÀ_id
 -1] = 0;

1394 
	`˛o£_db
(
èbÀ_id
);

1397 
	}
}

1399 
	$shutdown_db
(){

1400 
i
,
èbÀ_id
 = -1;

1403 if(
buf_size
 =-1 || 
buf_mgr
 =
NULL
){

1407 
i
 = 0; i < 
buf_size
; i++){

1409 if(
buf_mgr
[
i
].
is_dúty
 == 1){

1410 
èbÀ_id
 = 
buf_mgr
[
i
].table_id;

1411 
	`Êush_∑ge
(
èbÀ_id
, 
buf_mgr
[
i
].
‰ame
);

1414 if(1 <
buf_mgr
[
i
].
èbÀ_id
 && buf_mgr[i].table_id <= 10){

1415 
	`‰ì
(
buf_mgr
[
i
].
‰ame
);

1420 
	`‰ì
(
buf_mgr
);

1423 
	}
}

1425 
	$lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
off_t
 
off£t
, 
Page
* 
∑ge
){

1426 
Page
 *
ãmp
;

1427 
buf_ödex
 = -1;

1429 
ãmp
 = 
	`check_buf„r_f‹_lﬂd
(
èbÀ_id
, 
off£t
);

1432 if(
ãmp
 !
NULL
){

1434 
	`mem˝y
(
∑ge
, 
ãmp
, (
Page
));

1435 
∑ge
->
fûe_off£t
 = 
off£t
;

1442 
buf_ödex
 = 
	`ª∂a˚_∑ge
(
NULL
);

1445 
	`lﬂd_∑ge
(
èbÀ_id
, 
off£t
, 
∑ge
);

1446 
∑ge
->
fûe_off£t
 = 
off£t
;

1453 
	`mem˝y
(
buf_mgr
[
buf_ödex
].
‰ame
, 
∑ge
, (
Page
));

1454 
buf_mgr
[
buf_ödex
].
èbÀ_id
 =Åable_id;

1455 
buf_mgr
[
buf_ödex
].
∑ge_off£t
 = 
off£t
;

1456 
buf_mgr
[
buf_ödex
].
is_dúty
 = 0;

1457 
buf_mgr
[
buf_ödex
].
ªfbô
 = 1;

1459 
	}
}

1460 
Page
* 
	$check_buf„r_f‹_lﬂd
(
èbÀ_id
, 
off_t
 
off£t
){

1461 
i
;

1463 if(
buf_size
 == -1){

1465  
NULL
;

1468 
i
 = 0; i < 
buf_size
; i++){

1469 if(
buf_mgr
[
èrgë_buf
].
èbÀ_id
 =èbÀ_id && buf_mgr[èrgë_buf].
∑ge_off£t
 =
off£t
){

1471 
buf_mgr
[
èrgë_buf
].
ªfbô
 = 1;

1473  
buf_mgr
[
èrgë_buf
].
‰ame
;

1475 
èrgë_buf
 = (èrgë_bu‡+ 1Ë% 
buf_size
;

1479  
NULL
;

1480 
	}
}

1481 
	$check_buf„r_f‹_Êush
(
èbÀ_id
, 
off_t
 
off£t
){

1482 
i
;

1484 if(
buf_size
 == -1){

1489 
i
 = 0; i < 
buf_size
; i++){

1490 if(
buf_mgr
[
èrgë_buf
].
èbÀ_id
 =èbÀ_id && buf_mgr[èrgë_buf].
∑ge_off£t
 =
off£t
){

1492 
buf_mgr
[
èrgë_buf
].
ªfbô
 = 1;

1494  
èrgë_buf
;

1496 
èrgë_buf
 = (èrgë_bu‡+ 1Ë% 
buf_size
;

1501 
	}
}

1503 
	$ª∂a˚_∑ge
(
FILE
 *
fûe
){

1505 
èrgë_ödex
 = -1;

1508 
èrgë_ödex
 == -1){

1511 if(
buf_mgr
[
˛ock_h™d
].
ªfbô
 == 0){

1513 
èrgë_ödex
 = 
˛ock_h™d
;

1516 if(
buf_mgr
[
˛ock_h™d
].
èbÀ_id
 == -1){

1517 
i
;

1518 
OuçutPage
 *
èrgë
;

1520 
	`mem˝y
((
Page
 *)
èrgë
, 
buf_mgr
[
˛ock_h™d
].
‰ame
, (Page));

1522 
i
 = 0; i < 
èrgë
->
fûe_off£t
; i++){

1523 
	`Ârötf
(
fûe
, "%" 
PRIu64
 ",%s," "%" PRIu64 ",%s\n", 
	`RESULT_KEY1
(
èrgë
, 
i
), 
	`RESULT_VALUE1
—¨gë, i), 
	`RESULT_KEY2
—¨gë, i), 
	`RESULT_VALUE2
(target, i) );

1526 
buf_mgr
[
˛ock_h™d
].
is_dúty
 = 0;

1530 if(
buf_mgr
[
˛ock_h™d
].
is_dúty
 == 1){

1533 
	`execuã_wÆ
();

1536 
	`Êush_∑ge
(
buf_mgr
[
˛ock_h™d
].
èbÀ_id
, buf_mgr[˛ock_h™d].
‰ame
);

1540 
	`mem£t
(
buf_mgr
[
˛ock_h™d
].
‰ame
, 0, (
Page
));

1541 
buf_mgr
[
˛ock_h™d
].
èbÀ_id
 = 0;

1542 
buf_mgr
[
˛ock_h™d
].
∑ge_off£t
 = 0;

1543 
buf_mgr
[
˛ock_h™d
].
is_dúty
 = 0;

1544 
buf_mgr
[
˛ock_h™d
].
ªfbô
 = 0;

1550 if(
buf_mgr
[
˛ock_h™d
].
ªfbô
 == 1){

1551 
buf_mgr
[
˛ock_h™d
].
ªfbô
 = 0;

1555 
˛ock_h™d
 = (˛ock_h™d + 1Ë% 
buf_size
;

1559  
èrgë_ödex
;

1560 
	}
}

1563 
	$Êush_∑ge_to_buf„r
(
èbÀ_id
, 
Page
 *
∑ge
){

1564 
i
, 
buf_ödex
 = -1, 
ödex
 = -1;

1569 
ödex
 = 
	`check_buf„r_f‹_Êush
(
èbÀ_id
, 
∑ge
->
fûe_off£t
);

1572 if(
ödex
 != -1){

1573 
	`mem˝y
(
buf_mgr
[
èrgë_buf
].
‰ame
, 
∑ge
, (
Page
));

1574 
buf_mgr
[
èrgë_buf
].
is_dúty
 = 1;

1579 
buf_ödex
 = 
	`ª∂a˚_∑ge
(
NULL
);

1583 
	`mem˝y
(
buf_mgr
[
buf_ödex
].
‰ame
, 
∑ge
, (
Page
));

1584 
buf_mgr
[
buf_ödex
].
èbÀ_id
 =Åable_id;

1585 
buf_mgr
[
buf_ödex
].
∑ge_off£t
 = 
∑ge
->
fûe_off£t
;

1587 
buf_mgr
[
buf_ödex
].
is_dúty
 = 1;

1588 
buf_mgr
[
buf_ödex
].
ªfbô
 = 1;

1590 
	}
}

1595 
	$joö_èbÀ
(
èbÀ_id_1
, 
èbÀ_id_2
, *
∑th«me
){

1596 
FILE
 *
r_Â
;

1597 
uöt64_t
 
num_1
 = -1, 
num_2
 = -1, 
mö_1
 = -1, 
mö_2
 = -1, 
max_1
 = -1, 
max_2
 = -1;

1598 
LófPage
 
Àaf_1
, 
Àaf_2
;

1599 
off_t
 
comp_sib_1
, 
comp_sib_2
;

1600 
comp_num_1
, 
comp_num_2
;

1601 
uöt64_t
 
comp_key_1
, 
comp_key_2
;

1604 if((
r_Â
 = 
	`f›í
(
∑th«me
, "wt")Ë=
NULL
){

1609 
	`èbÀ_öfo
(
èbÀ_id_1
, &
num_1
, &
mö_1
, &
max_1
);

1610 
	`èbÀ_öfo
(
èbÀ_id_2
, &
num_2
, &
mö_2
, &
max_2
);

1618 if(
max_1
 < 
mö_2
 || 
mö_1
 > 
max_2
){

1620 
	`f˛o£
(
r_Â
);

1631 if(
mö_1
 < 
mö_2
){

1634 
	`föd_Àaf
(
èbÀ_id_1
, 
mö_2
, &
Àaf_1
);

1635 
	`föd_Àaf
(
èbÀ_id_2
, 
mö_2
, &
Àaf_2
);

1641 
	`föd_Àaf
(
èbÀ_id_1
, 
mö_1
, &
Àaf_1
);

1642 
	`föd_Àaf
(
èbÀ_id_2
, 
mö_1
, &
Àaf_2
);

1646 
comp_sib_1
 = 
Àaf_1
.
siblög
;

1647 
comp_sib_2
 = 
Àaf_2
.
siblög
;

1648 
comp_num_1
 = 0;

1649 
comp_num_2
 = 0;

1656 (
comp_sib_1
 !0 || 
comp_num_1
 !
Àaf_1
.
num_keys
Ë&& (
comp_sib_2
 !0 || 
comp_num_2
 !
Àaf_2
.num_keys)){

1658 
comp_key_1
 = 
	`LEAF_KEY
(&
Àaf_1
, 
comp_num_1
);

1659 
comp_key_2
 = 
	`LEAF_KEY
(&
Àaf_2
, 
comp_num_2
);

1662 
comp_key_1
 < 
comp_key_2
){

1664 
comp_num_1
++;

1667 if((
comp_num_1
 =
Àaf_1
.
num_keys
Ë&& (
comp_sib_1
 != 0)){

1669 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id_1
, 
comp_sib_1
, (
Page
*)&
Àaf_1
);

1672 
comp_sib_1
 = 
Àaf_1
.
siblög
;

1675 
comp_num_1
 = 0;

1679 if(
comp_sib_1
 =0 && 
comp_num_1
 =
Àaf_1
.
num_keys
){

1680 
	`sync_buf„r
(
r_Â
);

1681 
	`f˛o£
(
r_Â
);

1686 
comp_key_1
 = 
	`LEAF_KEY
(&
Àaf_1
, 
comp_num_1
);

1688 
comp_key_1
 > 
comp_key_2
){

1690 
comp_num_2
++;

1693 if((
comp_num_2
 =
Àaf_2
.
num_keys
Ë&& (
comp_sib_2
 != 0)){

1695 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id_2
, 
comp_sib_2
, (
Page
*)&
Àaf_2
);

1698 
comp_sib_2
 = 
Àaf_2
.
siblög
;

1701 
comp_num_2
 = 0;

1705 if(
comp_sib_1
 =0 && 
comp_num_1
 =
Àaf_1
.
num_keys
){

1706 
	`sync_buf„r
(
r_Â
);

1707 
	`f˛o£
(
r_Â
);

1712 
comp_key_2
 = 
	`LEAF_KEY
(&
Àaf_2
, 
comp_num_2
);

1715 if(
comp_key_1
 =
comp_key_2
){

1718 
	`wrôe_ouçut_buf„r
(
r_Â
, 
comp_key_1
, 
	`LEAF_VALUE
(&
Àaf_1
, 
comp_num_1
), 
comp_key_2
, LEAF_VALUE(&
Àaf_2
, 
comp_num_2
));

1722 
comp_num_1
++;

1723 
comp_num_2
++;

1726 if((
comp_num_1
 =
Àaf_1
.
num_keys
Ë&& (
comp_sib_1
 != 0)){

1728 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id_1
, 
comp_sib_1
, (
Page
*)&
Àaf_1
);

1731 
comp_sib_1
 = 
Àaf_1
.
siblög
;

1734 
comp_num_1
 = 0;

1738 if((
comp_num_2
 =
Àaf_2
.
num_keys
Ë&& (
comp_sib_2
 != 0)){

1740 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id_2
, 
comp_sib_2
, (
Page
*)&
Àaf_2
);

1743 
comp_sib_2
 = 
Àaf_2
.
siblög
;

1746 
comp_num_2
 = 0;

1752 
	`sync_buf„r
(
r_Â
);

1753 
	`f˛o£
(
r_Â
);

1755 
	}
}

1756 
	$èbÀ_öfo
(
èbÀ_id
, 
uöt64_t
 *
num_keys
, uöt64_à*
mö_key
, uöt64_à*
max_key
){

1757 
HódîPage
 
ãmp_hódî
;

1758 
NodePage
 
∑ge
;

1759 
LófPage
 *
ãmp_Àaf
;

1760 
off_t
 
ãmp_siblög
;

1763 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 0, (
Page
*)(&
ãmp_hódî
));

1766 if(
ãmp_hódî
.
roŸ_off£t
 == 0){

1767 *
num_keys
 = 0;

1768 *
max_key
 = 0;

1774 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
ãmp_hódî
.
roŸ_off£t
, (
Page
*)&
∑ge
);

1777 !
∑ge
.
is_Àaf
){

1778 
I¡î«lPage
* 
öã∫Æ_node
 = (I¡î«lPage*)&
∑ge
;

1780 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, 0), (
Page
*)&
∑ge
);

1787 
ãmp_Àaf
 = (
LófPage
 *)&
∑ge
;

1789 *
num_keys
 = 
ãmp_Àaf
->num_keys;

1790 *
mö_key
 = 
	`LEAF_KEY
(
ãmp_Àaf
, 0);

1791 *
max_key
 = 
	`LEAF_KEY
(
ãmp_Àaf
,Åemp_Àaf->
num_keys
 - 1);

1792 
ãmp_siblög
 = 
ãmp_Àaf
->
siblög
;

1794 
ãmp_siblög
 != 0){

1796 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
ãmp_siblög
, (
Page
*)
ãmp_Àaf
);

1798 *
num_keys
 +
ãmp_Àaf
->num_keys;

1799 *
max_key
 = 
	`LEAF_KEY
(
ãmp_Àaf
,Åemp_Àaf->
num_keys
 - 1);

1800 
ãmp_siblög
 = 
ãmp_Àaf
->
siblög
;

1803 
	}
}

1804 
	$wrôe_ouçut_buf„r
(
FILE
 *
fûe
, 
uöt64_t
 
key1
, *
vÆue1
, uöt64_à
key2
, *
vÆue2
){

1805 
OuçutPage
 
ouçut
;

1808 if(
	`lﬂd_ouçut_∑ge
((
Page
*)&
ouçut
) == -1){

1809 
ouçut
.
ªsu…s
[0].
key1
 = key1;

1810 
	`°r˝y
(
ouçut
.
ªsu…s
[0].
vÆue1
, value1);

1811 
ouçut
.
ªsu…s
[0].
key2
 = key2;

1812 
	`°r˝y
(
ouçut
.
ªsu…s
[0].
vÆue2
, value2);

1813 
ouçut
.
fûe_off£t
 = 1;

1818 if(
ouçut
.
fûe_off£t
 < 
OUTPUT_ORDER
){

1819 
	`RESULT_KEY1
(&
ouçut
, ouçut.
fûe_off£t
Ë
key1
;

1820 
	`°r˝y
(
	`RESULT_VALUE1
(&
ouçut
, ouçut.
fûe_off£t
), 
vÆue1
);

1821 
	`RESULT_KEY2
(&
ouçut
, ouçut.
fûe_off£t
Ë
key2
;

1822 
	`°r˝y
(
	`RESULT_VALUE2
(&
ouçut
, ouçut.
fûe_off£t
), 
vÆue2
);

1824 
ouçut
.
fûe_off£t
++;

1828 
OuçutPage
 
√w
;

1830 
	`sync_buf„r
(
fûe
);

1832 
√w
.
ªsu…s
[0].
key1
 = key1;

1833 
	`°r˝y
(
√w
.
ªsu…s
[0].
vÆue1
, value1);

1834 
√w
.
ªsu…s
[0].
key2
 = key2;

1835 
	`°r˝y
(
√w
.
ªsu…s
[0].
vÆue2
, value2);

1836 
√w
.
fûe_off£t
 = 1;

1838 
	`Êush_ouçut_∑ge
(
fûe
, (
Page
 *)&
√w
);

1843 
	`Êush_ouçut_∑ge
(
fûe
, (
Page
 *)&
ouçut
);

1844 
	}
}

1845 
	$lﬂd_ouçut_∑ge
(
Page
 *
∑ge
){

1846 
Page
 *
ãmp
;

1848 
ãmp
 = 
	`check_buf„r_f‹_lﬂd
(-1, 0);

1851 if(
ãmp
 !
NULL
){

1853 
	`mem˝y
(
∑ge
, 
ãmp
, (
Page
));

1863 
	}
}

1864 
	$Êush_ouçut_∑ge
(
FILE
 *
fûe
, 
Page
 *
∑ge
){

1865 
i
, 
buf_ödex
 = -1, 
ödex
 = -1;

1870 
ödex
 = 
	`check_buf„r_f‹_Êush
(-1, 0);

1873 if(
ödex
 != -1){

1874 
	`mem˝y
(
buf_mgr
[
èrgë_buf
].
‰ame
, 
∑ge
, (
Page
));

1875 
buf_mgr
[
èrgë_buf
].
is_dúty
 = 1;

1880 
buf_ödex
 = 
	`ª∂a˚_∑ge
(
fûe
);

1884 
	`mem˝y
(
buf_mgr
[
buf_ödex
].
‰ame
, 
∑ge
, (
Page
));

1885 
buf_mgr
[
buf_ödex
].
èbÀ_id
 = -1;

1886 
buf_mgr
[
buf_ödex
].
∑ge_off£t
 = 0;

1888 
buf_mgr
[
buf_ödex
].
is_dúty
 = 1;

1889 
buf_mgr
[
buf_ödex
].
ªfbô
 = 1;

1891 
	}
}

1892 
	$sync_buf„r
(
FILE
 *
fûe
){

1893 
i
, 
ödex
, 
íd
;

1894 
OuçutPage
 
èrgë
;

1896 
ödex
 = 
	`check_buf„r_f‹_Êush
(-1, 0);

1898 
	`mem˝y
((
Page
 *)&
èrgë
, 
buf_mgr
[
ödex
].
‰ame
, (Page));

1899 
i
 = 0; i < 
èrgë
.
fûe_off£t
; i++){

1900 
	`Ârötf
(
fûe
, "%" 
PRIu64
 ",%s," "%" PRIu64 ",%s\n", 
	`RESULT_KEY1
(&
èrgë
, 
i
), 
	`RESULT_VALUE1
(&èrgë, i), 
	`RESULT_KEY2
(&èrgë, i), 
	`RESULT_VALUE2
(&target, i) );

1904 
	`mem£t
(
buf_mgr
[
ödex
].
‰ame
, 0, (
Page
));

1905 
buf_mgr
[
ödex
].
èbÀ_id
 = 0;

1906 
buf_mgr
[
ödex
].
∑ge_off£t
 = 0;

1907 
buf_mgr
[
ödex
].
is_dúty
 = 0;

1908 
buf_mgr
[
ödex
].
ªfbô
 = 0;

1909 
	}
}

1912 
	$begö_å™ß˘i⁄
(){

1915 i‡(
log
 < 0) {

1917 
log
 = 
	`›í
("log.db", 
O_CREAT
|
O_RDWR
, 
S_IRUSR
|
S_IWUSR
);

1918 i‡(
log
 < 0) {

1919 
	`as£π
("failedÅo createÇewÜog file");

1926 
xid
++;

1929 
	`¸óã_log
(0, 0, 0, 0, 0, 
NULL
, NULL);

1932 
	}
}

1933 
	$commô_å™ß˘i⁄
(){

1935 
	`¸óã_log
(2, 0, 0, 0, 0, 
NULL
, NULL);

1936 
	`Êush_log
(
log_h™d
);

1937 
	`fsync
(
log
);

1938 
log_h™d
 = 0;

1941 
	}
}

1942 
	$ab‹t_å™ß˘i⁄
(){

1945 
	}
}

1946 
	$upd©e
(
èbÀ_id
, 
öt64_t
 
key
, *
vÆue
){

1947 
ﬁd
[120];

1949 if(
	`föd
(
èbÀ_id
, 
key
Ë=
NULL
 || 
dbhódî
[èbÀ_id -1].
roŸ_off£t
 == 0){

1955 
LófPage
 
Àaf_node
;

1956 
fix_poöt
 = 0, 
loˇti⁄
;

1958 
	`föd_Àaf
(
èbÀ_id
, 
key
, &
Àaf_node
);

1960 
fix_poöt
 < 
Àaf_node
.
num_keys
 && 
	`LEAF_KEY
(&Àaf_node, fix_poötË!
key
){

1961 
fix_poöt
++;

1964 
	`°r˝y
(
ﬁd
, 
	`LEAF_VALUE
(&
Àaf_node
, 
fix_poöt
));

1966 
	`mem˝y
(
	`LEAF_VALUE
(&
Àaf_node
, 
fix_poöt
), 
vÆue
, 
SIZE_VALUE
);

1969 
Àaf_node
.
∑ge_l¢
 = 
l¢
;

1973 
loˇti⁄
 = 
Àaf_node
.
fûe_off£t
 + 128 + (
fix_poöt
 * 128) + 8;

1974 
	`¸óã_log
(1, 
èbÀ_id
, 
loˇti⁄
 / 
PAGE_SIZE
,Üoˇti⁄ % PAGE_SIZE, 
	`°æí
(
vÆue
), 
ﬁd
,value);

1977 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
Àaf_node
);

1981 
	}
}

1983 
	$¸óã_log
(
ty≥
, 
èbÀ_id
, 
≤um
, 
off£t
, 
Àngth
, *
ﬁd_image
, *
√w_image
){

1984 
LogRec‹d
 
√w_log
;

1987 
√w_log
.
l¢
 =Üsn;

1988 
√w_log
.
¥ev_l¢
 = 
l¢
 - 
SIZE_LOG
;

1989 
√w_log
.
xid
 = xid;

1990 
√w_log
.
ty≥
 =Åype;

1991 
√w_log
.
èbÀ_id
 =Åable_id;

1992 
√w_log
.
≤um
 =Önum;

1993 
√w_log
.
off£t
 = offset;

1994 
√w_log
.
Àngth
 =Üength;

1995 if(
ﬁd_image
 !
NULL
 & 
√w_image
 != NULL){

1996 
	`°r˝y
(
√w_log
.
ﬁd_image
, old_image);

1997 
	`°r˝y
(
√w_log
.
√w_image
,Çew_image);

2001 
l¢
 +
SIZE_LOG
;

2005 if(
log_h™d
 =
SIZE_LOG_BUFFER
){

2007 
	`Êush_log
(
SIZE_LOG_BUFFER
 / 3);

2008 
	`fsync
(
log
);

2010 
log_buf
[
log_h™d
++] = 
√w_log
;

2011 
	}
}

2013 
	$Êush_log
(
size
){

2014 
i
 = 0;

2017 
i
 = 0; i < 
size
; i++){

2018 
	`l£ek
(
log
, 
log_buf
[
i
].
¥ev_l¢
, 
SEEK_SET
);

2019 
	`wrôe
(
log
, 
log_buf
 + 
i
, 
SIZE_LOG
);

2023 
i
 = 
size
; i < 
SIZE_LOG_BUFFER
; i++){

2024 
log_buf
[
i
-
size
] =Üog_buf[i];

2028 
log_h™d
 -
size
;

2029 
	}
}

2030 
	$ªcovîy
(){

2031 
LogRec‹d
 
ªdo
;

2032 
off_t
 
fûe_size
, 
off£t
 = 0;

2033 
i
;

2036 
fûe_size
 = 
	`l£ek
(
log
, 0, 
SEEK_END
);

2038 
i
 = 0; i < 
fûe_size
 / 
SIZE_LOG
; i++){

2039 
	`l£ek
(
log
, 
off£t
, 
SEEK_SET
);

2040 
	`ªad
(
log
, &
ªdo
, 
SIZE_LOG
);

2041 
	`¥ötf
("%d %d %d %d %d %d %d %d %†%s\n", ()
ªdo
.
l¢
, (Ïedo.
¥ev_l¢
,Ñedo.
xid
,Ñedo.
ty≥
,Ñedo.
èbÀ_id
,Ñedo.
≤um
,Ñedo.
off£t
,Ñedo.
Àngth
,Ñedo.
ﬁd_image
,Ñedo.
√w_image
);

2042 
off£t
 +
SIZE_LOG
;

2044 
	}
}

	@src/file.c

1 
	~<sys/ty≥s.h
>

2 
	~<f˙é.h
>

3 
	~<°dlib.h
>

4 
	~<as£π.h
>

5 
	~<°dio.h
>

6 
	~<uni°d.h
>

7 
	~<°rög.h
>

8 
	~"fûe.h
"

10 
HódîPage
 
	gdbhódî
[10];

11 
	gdbfûe
[10] = {0,};

15 
off_t
 
	$gë_‰ì_∑ge
(
èbÀ_id
) {

16 
off_t
 
‰ì∑ge_off£t
;

18 
‰ì∑ge_off£t
 = 
dbhódî
[
èbÀ_id
 - 1].
‰ìli°
;

19 i‡(
‰ì∑ge_off£t
 == 0) {

21 
	`ex∑nd_fûe
(
èbÀ_id
, 
dbhódî
[èbÀ_id - 1].
num_∑ges
);

22 
‰ì∑ge_off£t
 = 
dbhódî
[
èbÀ_id
 - 1].
‰ìli°
;

25 
FªePage
 
‰ì∑ge
;

26 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
‰ì∑ge_off£t
, (
Page
*)&
‰ì∑ge
);

27 
dbhódî
[
èbÀ_id
 - 1].
‰ìli°
 = 
‰ì∑ge
.
√xt
;

29 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)(
dbhódî
 +Åable_id - 1));

31  
‰ì∑ge_off£t
;

32 
	}
}

35 
	$put_‰ì_∑ge
(
èbÀ_id
, 
off_t
 
∑ge_off£t
) {

36 
FªePage
 
‰ì∑ge
;

37 
	`mem£t
(&
‰ì∑ge
, 0, 
PAGE_SIZE
);

39 
‰ì∑ge
.
√xt
 = 
dbhódî
[
èbÀ_id
 - 1].
‰ìli°
;

40 
‰ì∑ge
.
fûe_off£t
 = 
∑ge_off£t
;

42 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)&
‰ì∑ge
);

44 
dbhódî
[
èbÀ_id
 - 1].
‰ìli°
 = 
∑ge_off£t
;

46 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)(
dbhódî
 +Åable_id - 1));

47 
	}
}

50 
	$ex∑nd_fûe
(
èbÀ_id
, 
size_t
 
˙t_∑ge_to_ex∑nd
) {

51 
off_t
 
off£t
 = 
dbhódî
[
èbÀ_id
 - 1].
num_∑ges
 * 
PAGE_SIZE
;

53 i‡(
dbhódî
[
èbÀ_id
 - 1].
num_∑ges
 > 1024 * 1024) {

55 
	`as£π
("Test: youáreálready havingá DB file overÅhan 4GB");

58 
i
;

59 
i
 = 0; i < 
˙t_∑ge_to_ex∑nd
; i++) {

60 
	`put_‰ì_∑ge
(
èbÀ_id
, 
off£t
);

61 
dbhódî
[
èbÀ_id
 - 1].
num_∑ges
++;

62 
off£t
 +
PAGE_SIZE
;

65 
	`Êush_∑ge_to_buf„r
(
èbÀ_id
, (
Page
*)(
dbhódî
 +Åable_id - 1));

66 
	}
}

68 
	$lﬂd_∑ge
(
èbÀ_id
, 
off_t
 
off£t
, 
Page
* 
∑ge
) {

69 
	`l£ek
(
dbfûe
[
èbÀ_id
 - 1], 
off£t
, 
SEEK_SET
);

70 
	`ªad
(
dbfûe
[
èbÀ_id
 - 1], 
∑ge
, 
PAGE_SIZE
);

71 
∑ge
->
fûe_off£t
 = 
off£t
;

72 
	}
}

74 
	$Êush_∑ge
(
èbÀ_id
, 
Page
* 
∑ge
) {

75 
	`l£ek
(
dbfûe
[
èbÀ_id
 - 1], 
∑ge
->
fûe_off£t
, 
SEEK_SET
);

76 
	`wrôe
(
dbfûe
[
èbÀ_id
 - 1], 
∑ge
, 
PAGE_SIZE
);

77 
	}
}

	@src/main.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<f˙é.h
>

4 
	~<uni°d.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<öây≥s.h
>

7 
	~"b±.h
"

8 
	~"fûe.h
"

9 
	~<°rög.h
>

10 
	~<time.h
>

13 
	$maö
–
¨gc
, ** 
¨gv
 ) {

14 
öput_vÆue_1
[
SIZE_VALUE
], 
öput_vÆue_2
[SIZE_VALUE];

15 
uöt64_t
 
°¨t
, 
íd
, 
jump
;

16 
èbÀ_1
 = 0, 
èbÀ_2
 = 0, 
èbÀ_10
 = 0;

17 
time_t
 
°¨t_t
, 
íd_t
;

19 
	`¥ötf
("WelcomeÅoÑecoveryÅest\n");

21 
	`öô_db
(100);

23 
èbÀ_1
 = 
	`›í_èbÀ
("DATA1");

24 
èbÀ_2
 = 
	`›í_èbÀ
("DATA2");

26 
	`ö£π
(
èbÀ_1
, 1, "A");

27 
	`ö£π
(
èbÀ_1
, 2, "B");

28 
	`ö£π
(
èbÀ_2
, 1, "C");

29 
	`ö£π
(
èbÀ_2
, 2, "D");

36 
	`begö_å™ß˘i⁄
();

37 
	`upd©e
(
èbÀ_1
, 1, "table1_A");

38 
	`upd©e
(
èbÀ_1
, 2, "table1_B");

39 
	`upd©e
(
èbÀ_2
, 1, "table2_C");

40 
	`upd©e
(
èbÀ_2
, 2, "table2_D");

41 
	`commô_å™ß˘i⁄
();

48 
	`˛o£_èbÀ
(
èbÀ_1
);

49 
	`˛o£_èbÀ
(
èbÀ_2
);

51 
	`ªmove
("DATA1");

52 
	`ªmove
("DATA2");

54  
EXIT_SUCCESS
;

55 
	}
}

	@
1
.
0
5
61
include/bpt.h
include/file.h
src/bpt.c
src/file.c
src/main.c
