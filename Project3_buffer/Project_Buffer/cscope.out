cscope 15 $HOME/mysql/Lab/Project3_buffer/Project_Buffer -q 0000000233 0000035863
	@include/bpt.h

1 #i‚de‡
__BPT_H__


2 
	#__BPT_H__


	)

4 
›í_èbÀ
(c⁄° * 
fûíame
);

5 * 
föd
(
èbÀ_id
, 
uöt64_t
 
key
);

6 
ö£π
(
èbÀ_id
, 
uöt64_t
 
key
, c⁄° * 
vÆue
);

7 
dñëe
(
èbÀ_id
, 
uöt64_t
 
key
);

9 
¥öt_åì
(
èbÀ_id
);

13 
öô_db
(
num_buf
);

15 
˛o£_èbÀ
(
èbÀ_id
);

17 
shutdown_db
();

	@include/file.h

1 
	~<°ddef.h
>

2 
	~<öây≥s.h
>

4 
	#BPTREE_INTERNAL_ORDER
 249

5 
	#BPTREE_LEAF_ORDER
 32

6 

	)

7 
	#PAGE_SIZE
 4096

	)

9 
	#SIZE_KEY
 8

	)

10 
	#SIZE_VALUE
 120

	)

11 
	#SIZE_RECORD
 (
SIZE_KEY
 + 
SIZE_VALUE
)

	)

13 
	#BPTREE_MAX_NODE
 (1024 * 1024)

14 

	)

25 
	s_Rec‹d
 {

26 
uöt64_t
 
	mkey
;

27 
	mvÆue
[
SIZE_VALUE
];

28 } 
	tRec‹d
;

30 
	s_I¡î«lRec‹d
 {

31 
uöt64_t
 
	mkey
;

32 
off_t
 
	moff£t
;

33 } 
	tI¡î«lRec‹d
;

35 
	s_Page
 {

36 
	mbyãs
[
PAGE_SIZE
];

39 
off_t
 
	mfûe_off£t
;

40 } 
	tPage
;

42 
	s_FªePage
 {

43 
off_t
 
	m√xt
;

44 
	mª£rved
[
PAGE_SIZE
 - 8];

47 
off_t
 
	mfûe_off£t
;

48 } 
	tFªePage
;

50 
	s_HódîPage
 {

51 
off_t
 
	m‰ìli°
;

52 
off_t
 
	mroŸ_off£t
;

53 
uöt64_t
 
	mnum_∑ges
;

54 
	mª£rved
[
PAGE_SIZE
 - 24];

57 
off_t
 
	mfûe_off£t
;

58 } 
	tHódîPage
;

60 
	#INTERNAL_KEY
(
n
, 
i
Ë(“)->
úec‹ds
[(i)+1].
key
)

	)

61 
	#INTERNAL_OFFSET
(
n
, 
i
Ë(“)->
úec‹ds
[(i)].
off£t
)

	)

62 
	s_I¡î«lPage
 {

65 
off_t
 
	m∑ª¡
;

66 
	mis_Àaf
;

67 
	mnum_keys
;

68 
	mª£rved
[112 - 16];

69 
I¡î«lRec‹d
 
	múec‹ds
[
BPTREE_INTERNAL_ORDER
];

71 
	m•a˚
[
PAGE_SIZE
];

74 
off_t
 
	mfûe_off£t
;

75 } 
	tI¡î«lPage
;

77 
	#LEAF_KEY
(
n
, 
i
Ë(“)->
ªc‹ds
[(i)].
key
)

	)

78 
	#LEAF_VALUE
(
n
, 
i
Ë(“)->
ªc‹ds
[(i)].
vÆue
)

	)

79 
	s_LófPage
 {

82 
off_t
 
	m∑ª¡
;

83 
	mis_Àaf
;

84 
	mnum_keys
;

85 
	mª£rved
[120 - 16];

86 
off_t
 
	msiblög
;

87 
Rec‹d
 
	mªc‹ds
[
BPTREE_LEAF_ORDER
-1];

89 
	m•a˚
[
PAGE_SIZE
];

93 
off_t
 
	mfûe_off£t
;

94 } 
	tLófPage
;

96 
	s_NodePage
 {

99 
off_t
 
	m∑ª¡
;

100 
	mis_Àaf
;

101 
	mnum_keys
;

103 
	m•a˚
[
PAGE_SIZE
];

107 
off_t
 
	mfûe_off£t
;

108 } 
	tNodePage
;

111 
›í_èbÀ
(c⁄° * 
fûíame
);

115 
˛o£_db
(
èbÀ_id
);

118 
off_t
 
gë_‰ì_∑ge
(
èbÀ_id
);

121 
put_‰ì_∑ge
(
èbÀ_id
, 
off_t
 
∑ge_off£t
);

124 
ex∑nd_fûe
(
èbÀ_id
, 
size_t
 
˙t_∑ge_to_ex∑nd
);

127 
lﬂd_∑ge
(
èbÀ_id
, 
off_t
 
off£t
, 
Page
* 
∑ge
);

130 
Êush_∑ge
(
èbÀ_id
, 
Page
* 
∑ge
);

132 
HódîPage
 
dbhódî
[10];

136 
	s_Buf„r
{

137 
Page
 *
	m‰ame
;

138 
	mèbÀ_id
;

139 
off_t
 
	m∑ge_off£t
;

140 
	mis_dúty
;

141 
	mpö_cou¡
;

143 
	mªfbô
;

144 } 
	tBuf„r
;

147 
lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
off_t
 
off£t
, 
Page
* 
∑ge
);

149 
Page
* 
is_ö_buf„r
(
èbÀ_id
, 
off_t
 
off£t
, 
ty≥
);

151 
ª∂a˚_∑ge
(
èbÀ_id
);

154 
dúty_⁄
(
èbÀ_id
, 
Page
* 
∑ge
);

	@src/bpt.c

4 
	#Vîsi⁄
 "1.14"

	)

57 
	~<°dio.h
>

58 
	~<°dlib.h
>

59 
	~<°dboﬁ.h
>

60 
	~<°döt.h
>

61 
	~<°rög.h
>

62 
	~<öây≥s.h
>

63 
	~<as£π.h
>

64 
	~<f˙é.h
>

65 
	~<uni°d.h
>

66 
	~"b±.h
"

67 
	~"fûe.h
"

68 #ifde‡
WINDOWS


69 
	#boﬁ
 

	)

70 
	#Ál£
 0

	)

71 
	#åue
 1

	)

78 
	#MIN_ORDER
 3

	)

79 
	#MAX_ORDER
 256

	)

82 
	#LICENSE_FILE
 "LICENSE.txt"

	)

83 
	#LICENSE_WARRANTEE
 0

	)

84 
	#LICENSE_WARRANTEE_START
 592

	)

85 
	#LICENSE_WARRANTEE_END
 624

	)

86 
	#LICENSE_CONDITIONS
 1

	)

87 
	#LICENSE_CONDITIONS_START
 70

	)

88 
	#LICENSE_CONDITIONS_END
 625

	)

91 
HódîPage
 
dbhódî
[10];

92 
dbfûe
[10];

93 
	gèbÀ_ids
[10] = {0,};

105 
	g‹dî_öã∫Æ
 = 
BPTREE_INTERNAL_ORDER
;

106 
	g‹dî_Àaf
 = 
BPTREE_LEAF_ORDER
;

113 
boﬁ
 
	gvîbo£_ouçut
 = 
Ál£
;

116 
Buf„r
 *
	gbuf_mgr
;

117 
	gbuf_size
 = -1;

118 
	g˛ock_h™d
 = 0;

124 
li˚n£_nŸi˚
( );

125 
¥öt_li˚n£
–
li˚n˚_∑π
 );

126 
ußge_1
( );

127 
ußge_2
( );

128 
föd_™d_¥öt
(
èbÀ_id
, 
uöt64_t
 
key
);

129 
boﬁ
 
föd_Àaf
(
èbÀ_id
, 
uöt64_t
 
key
, 
LófPage
* 
out_Àaf_node
);

132 
°¨t_√w_åì
(
èbÀ_id
, 
uöt64_t
 
key
, c⁄° * 
vÆue
);

133 
ö£π_öto_Àaf
(
èlbe_id
, 
LófPage
* 
Àaf_node
, 
uöt64_t
 
key
, c⁄° * 
vÆue
);

134 
ö£π_öto_Àaf_a·î_•lôtög
(
èbÀ_id
, 
LófPage
* 
Àaf_node
, 
uöt64_t
 
key
, c⁄° * 
vÆue
);

135 
ö£π_öto_∑ª¡
(
èbÀ_id
, 
NodePage
* 
À·
, 
uöt64_t
 
key
, NodePage* 
right
);

136 
ö£π_öto_√w_roŸ
(
èbÀ_id
, 
NodePage
* 
À·
, 
uöt64_t
 
key
, NodePage* 
right
);

137 
gë_À·_ödex
(
I¡î«lPage
* 
∑ª¡
, 
off_t
 
À·_off£t
);

138 
ö£π_öto_node
(
I¡î«lPage
 * 
∑ª¡
, 
À·_ödex
, 
uöt64_t
 
key
, 
off_t
 
right_off£t
);

139 
ö£π_öto_node_a·î_•lôtög
(
èbÀ_id
, 
I¡î«lPage
* 
∑ª¡
, 
À·_ödex
, 
uöt64_t
 
key
, 
off_t
 
right_off£t
);

142 
gë_√ighb‹_ödex
(
èbÀ_id
, 
NodePage
* 
node_∑ge
);

143 
adju°_roŸ
(
èbÀ_id
);

144 
cﬂÀs˚_nodes
(
èbÀ_id
, 
NodePage
* 
node_∑ge
, NodePage* 
√ighb‹_∑ge
,

145 
√ighb‹_ödex
, 
k_¥ime
);

146 
ªdi°ribuã_nodes
(
èbÀ_id
, 
NodePage
* 
node_∑ge
, NodePage* 
√ighb‹_∑ge
,

147 
√ighb‹_ödex
,

148 
k_¥ime_ödex
, 
k_¥ime
);

149 
dñëe_íåy
(
èbÀ_id
, 
NodePage
* 
node_∑ge
, 
uöt64_t
 
key
);

158 
	$li˚n£_nŸi˚
( ) {

159 
	`¥ötf
("bpt version %s -- Copyright (C) 2010 Amittai Aviram "

160 "hâp://www.amôèi.com\n", 
Vîsi⁄
);

161 
	`¥ötf
("ThisÖrogram comes with ABSOLUTELY NO WARRANTY; for details "

165 
	}
}

170 
	$¥öt_li˚n£
–
li˚n£_∑π
 ) {

171 
°¨t
, 
íd
, 
löe
;

172 
FILE
 * 
Â
;

173 
buf„r
[0x100];

175 
li˚n£_∑π
) {

176 
LICENSE_WARRANTEE
:

177 
°¨t
 = 
LICENSE_WARRANTEE_START
;

178 
íd
 = 
LICENSE_WARRANTEE_END
;

180 
LICENSE_CONDITIONS
:

181 
°¨t
 = 
LICENSE_CONDITIONS_START
;

182 
íd
 = 
LICENSE_CONDITIONS_END
;

188 
Â
 = 
	`f›í
(
LICENSE_FILE
, "r");

189 i‡(
Â
 =
NULL
) {

190 
	`≥º‹
("print_license: fopen");

191 
	`exô
(
EXIT_FAILURE
);

193 
löe
 = 0;Üöê< 
°¨t
;Üine++)

194 
	`fgës
(
buf„r
, (buf„r), 
Â
);

195  ; 
löe
 < 
íd
;Üine++) {

196 
	`fgës
(
buf„r
, (buf„r), 
Â
);

197 
	`¥ötf
("%s", 
buf„r
);

199 
	`f˛o£
(
Â
);

200 
	}
}

204 
	$ußge_1
( ) {

205 
	`¥ötf
("B+ Tªêo‡Ordî %d(I¡î«l).\n", 
‹dî_öã∫Æ
);

206 
	`¥ötf
("Following Silberschatz, Korth, Sidarshan, Database Concepts, "

211 
	`¥ötf
("(%d <‹dî <%d).\n", 
MIN_ORDER
, 
MAX_ORDER
);

212 
	`¥ötf
("To start with input fromá file ofÇewline-delimited integers, \n"

215 
	}
}

219 
	$ußge_2
( ) {

220 
	`¥ötf
("Enterány ofÅhe following commandsáfterÅheÖrompt > :\n"

236 
	}
}

239 
	$›í_èbÀ
(c⁄° * 
fûíame
) {

240 
i
;

243 
i
 = 0; i < 10; i++){

244 if(
èbÀ_ids
[
i
] == 0){

245 
èbÀ_ids
[
i
] = 1;

251 if(
i
 == 10){

255 
dbfûe
[
i
] = 
	`›í
(
fûíame
, 
O_RDWR
);

256 i‡(
dbfûe
[
i
] < 0) {

258 
dbfûe
[
i
] = 
	`›í
(
fûíame
, 
O_CREAT
|
O_RDWR
, 
S_IRUSR
|
S_IWUSR
);

259 i‡(
dbfûe
[
i
] < 0) {

260 
	`as£π
("failedÅo createÇew db file");

264 
	`mem£t
((
dbhódî
+
i
), 0, 
PAGE_SIZE
);

265 
dbhódî
[
i
].
‰ìli°
 = 0;

266 
dbhódî
[
i
].
roŸ_off£t
 = 0;

267 
dbhódî
[
i
].
num_∑ges
 = 1;

268 
dbhódî
[
i
].
fûe_off£t
 = 0;

269 
	`dúty_⁄
(
i
+1, (
Page
*)(
dbhódî
 + i));

272 
	`lﬂd_∑ge_‰om_buf„r
(
i
+1, 0, (
Page
*)(
dbhódî
+i));

273 
dbhódî
[
i
].
fûe_off£t
 = 0;

276  
i
+1;

277 
	}
}

280 
	$˛o£_db
(
èbÀ_id
) {

281 
	`˛o£
(
dbfûe
[
èbÀ_id
 - 1]);

282 
	}
}

297 
off_t
 
	gqueue
[
BPTREE_MAX_NODE
];

298 
	$¥öt_åì
(
èbÀ_id
) {

300 
i
;

301 
‰⁄t
 = 0;

302 
ª¨
 = 0;

304 i‡(
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
 == 0) {

305 
	`¥ötf
("EmptyÅree.\n");

309 
queue
[
ª¨
] = 
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
;

310 
ª¨
++;

311 
queue
[
ª¨
] = 0;

312 
ª¨
++;

313 
‰⁄t
 < 
ª¨
) {

314 
off_t
 
∑ge_off£t
 = 
queue
[
‰⁄t
];

315 
‰⁄t
++;

317 i‡(
∑ge_off£t
 == 0) {

318 
	`¥ötf
("\n");

320 i‡(
‰⁄t
 =
ª¨
) ;

323 
queue
[
ª¨
] = 0;

324 
ª¨
++;

328 
NodePage
 
node_∑ge
;

329 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
∑ge_off£t
, (
Page
*)&
node_∑ge
);

330 i‡(
node_∑ge
.
is_Àaf
 == 1) {

332 
LófPage
* 
Àaf_node
 = (LófPage*)&
node_∑ge
;

333 
i
 = 0; i < 
Àaf_node
->
num_keys
; i++) {

334 
	`¥ötf
("%" 
PRIu64
 " ", 
	`LEAF_KEY
(
Àaf_node
, 
i
));

336 
	`¥ötf
("| ");

339 
I¡î«lPage
* 
öã∫Æ_node
 = (I¡î«lPage*)&
node_∑ge
;

340 
i
 = 0; i < 
öã∫Æ_node
->
num_keys
; i++) {

341 
	`¥ötf
("%" 
PRIu64
 " ", 
	`INTERNAL_KEY
(
öã∫Æ_node
, 
i
));

342 
queue
[
ª¨
] = 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, 
i
);

343 
ª¨
++;

345 
queue
[
ª¨
] = 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, 
i
);

346 
ª¨
++;

347 
	`¥ötf
("| ");

350 
	}
}

355 
	$föd_™d_¥öt
(
èbÀ_id
, 
uöt64_t
 
key
) {

356 * 
vÆue_found
 = 
NULL
;

357 
vÆue_found
 = 
	`föd
(
èbÀ_id
, 
key
);

358 i‡(
vÆue_found
 =
NULL
) {

359 
	`¥ötf
("Rec‹dÇŸ found undî key %" 
PRIu64
 ".\n", 
key
);

362 
	`¥ötf
("key %" 
PRIu64
 ", vÆuê[%s].\n", 
key
, 
vÆue_found
);

363 
	`‰ì
(
vÆue_found
);

365 
	}
}

372 
boﬁ
 
	$föd_Àaf
(
èbÀ_id
, 
uöt64_t
 
key
, 
LófPage
* 
out_Àaf_node
) {

373 
i
 = 0;

374 
off_t
 
roŸ_off£t
 = 
dbhódî
[
èbÀ_id
 - 1].root_offset;

376 i‡(
roŸ_off£t
 == 0) {

377  
Ál£
;

380 
NodePage
 
∑ge
;

381 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
roŸ_off£t
, (
Page
*)&
∑ge
);

383 !
∑ge
.
is_Àaf
) {

384 
I¡î«lPage
* 
öã∫Æ_node
 = (I¡î«lPage*)&
∑ge
;

386 
i
 = 0;

387 
i
 < 
öã∫Æ_node
->
num_keys
) {

388 i‡(
key
 >
	`INTERNAL_KEY
(
öã∫Æ_node
, 
i
)) i++;

392 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, 
i
), (
Page
*)&
∑ge
);

395 
	`mem˝y
(
out_Àaf_node
, &
∑ge
, (
LófPage
));

397  
åue
;

398 
	}
}

404 * 
	$föd
(
èbÀ_id
, 
uöt64_t
 
key
) {

405 
i
 = 0;

406 * 
out_vÆue
;

408 
LófPage
 
Àaf_node
;

409 i‡(!
	`föd_Àaf
(
èbÀ_id
, 
key
, &
Àaf_node
)) {

410  
NULL
;

413 
i
 = 0; i < 
Àaf_node
.
num_keys
; i++) {

414 i‡(
	`LEAF_KEY
(&
Àaf_node
, 
i
Ë=
key
) {

415 
out_vÆue
 = (*)
	`mÆloc
(
SIZE_VALUE
 * ());

416 
	`mem˝y
(
out_vÆue
, 
	`LEAF_VALUE
(&
Àaf_node
, 
i
), 
SIZE_VALUE
);

417  
out_vÆue
;

421  
NULL
;

422 
	}
}

427 
	$cut
–
Àngth
 ) {

428 i‡(
Àngth
 % 2 == 0)

429  
Àngth
/2;

431  
Àngth
/2 + 1;

432 
	}
}

439 
	$gë_À·_ödex
(
I¡î«lPage
* 
∑ª¡
, 
off_t
 
À·_off£t
) {

441 
À·_ödex
 = 0;

442 
À·_ödex
 <
∑ª¡
->
num_keys
 &&

443 
	`INTERNAL_OFFSET
(
∑ª¡
, 
À·_ödex
Ë!
À·_off£t
)

444 
À·_ödex
++;

445  
À·_ödex
;

446 
	}
}

452 
	$ö£π_öto_Àaf
(
èbÀ_id
, 
LófPage
* 
Àaf_node
, 
uöt64_t
 
key
, c⁄° * 
vÆue
) {

453 
ö£πi⁄_poöt
;

454 
i
;

456 
ö£πi⁄_poöt
 = 0;

457 
ö£πi⁄_poöt
 < 
Àaf_node
->
num_keys
 &&

458 
	`LEAF_KEY
(
Àaf_node
, 
ö£πi⁄_poöt
Ë< 
key
)

459 
ö£πi⁄_poöt
++;

462 
i
 = 
Àaf_node
->
num_keys
 - 1; i >
ö£πi⁄_poöt
; i--) {

463 
	`LEAF_KEY
(
Àaf_node
, 
i
+1) = LEAF_KEY(leaf_node, i);

464 
	`mem˝y
(
	`LEAF_VALUE
(
Àaf_node
, 
i
+1), LEAF_VALUE÷óf_node, i), 
SIZE_VALUE
);

467 
	`LEAF_KEY
(
Àaf_node
, 
ö£πi⁄_poöt
Ë
key
;

468 
	`mem˝y
(
	`LEAF_VALUE
(
Àaf_node
, 
ö£πi⁄_poöt
), 
vÆue
, 
SIZE_VALUE
);

469 
Àaf_node
->
num_keys
++;

472 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)
Àaf_node
);

473 
	}
}

480 
	$ö£π_öto_Àaf_a·î_•lôtög
(
èbÀ_id
, 
LófPage
* 
Àaf
, 
uöt64_t
 
key
, c⁄° * 
vÆue
) {

482 
ö£πi⁄_ödex
, 
•lô
, 
i
, 
j
;

483 
uöt64_t
 
√w_key
;

486 
LófPage
 
√w_Àaf
;

487 
√w_Àaf
.
is_Àaf
 = 
åue
;

488 
√w_Àaf
.
num_keys
 = 0;

490 
ö£πi⁄_ödex
 = 0;

491 
ö£πi⁄_ödex
 < 
‹dî_Àaf
 - 1 && 
	`LEAF_KEY
(
Àaf
, in£πi⁄_ödexË< 
key
)

492 
ö£πi⁄_ödex
++;

494 
•lô
 = 
	`cut
(
‹dî_Àaf
 - 1);

496 i‡(
ö£πi⁄_ödex
 < 
•lô
) {

498 
i
 = 
•lô
 - 1, 
j
 = 0; i < 
‹dî_Àaf
 - 1; i++, j++) {

499 
	`LEAF_KEY
(&
√w_Àaf
, 
j
ËLEAF_KEY(
Àaf
, 
i
);

500 
	`mem˝y
(
	`LEAF_VALUE
(&
√w_Àaf
, 
j
), LEAF_VALUE(
Àaf
, 
i
), 
SIZE_VALUE
);

502 
√w_Àaf
.
num_keys
++;

503 
Àaf
->
num_keys
--;

506 
i
 = 
•lô
 - 2; i >
ö£πi⁄_ödex
; i--) {

507 
	`LEAF_KEY
(
Àaf
, 
i
+1) = LEAF_KEY(leaf, i);

508 
	`mem˝y
(
	`LEAF_VALUE
(
Àaf
, 
i
+1), LEAF_VALUE÷óf, i), 
SIZE_VALUE
);

510 
	`LEAF_KEY
(
Àaf
, 
ö£πi⁄_ödex
Ë
key
;

511 
	`mem˝y
(
	`LEAF_VALUE
(
Àaf
, 
ö£πi⁄_ödex
), 
vÆue
, 
SIZE_VALUE
);

512 
Àaf
->
num_keys
++;

515 
i
 = 
•lô
, 
j
 = 0; i < 
‹dî_Àaf
 - 1; i++, j++) {

516 i‡(
i
 =
ö£πi⁄_ödex
) {

518 
j
++;

520 
	`LEAF_KEY
(&
√w_Àaf
, 
j
ËLEAF_KEY(
Àaf
, 
i
);

521 
	`mem˝y
(
	`LEAF_VALUE
(&
√w_Àaf
, 
j
), LEAF_VALUE(
Àaf
, 
i
), 
SIZE_VALUE
);

523 
√w_Àaf
.
num_keys
++;

524 
Àaf
->
num_keys
--;

526 
	`LEAF_KEY
(&
√w_Àaf
, 
ö£πi⁄_ödex
 - 
•lô
Ë
key
;

527 
	`mem˝y
(
	`LEAF_VALUE
(&
√w_Àaf
, 
ö£πi⁄_ödex
 - 
•lô
), 
vÆue
, 
SIZE_VALUE
);

528 
√w_Àaf
.
num_keys
++;

532 
√w_Àaf
.
fûe_off£t
 = 
	`gë_‰ì_∑ge
(
èbÀ_id
);

535 
√w_Àaf
.
siblög
 = 
Àaf
->sibling;

536 
Àaf
->
siblög
 = 
√w_Àaf
.
fûe_off£t
;

539 
i
 = 
Àaf
->
num_keys
; i < 
‹dî_Àaf
 - 1; i++) {

540 
	`LEAF_KEY
(
Àaf
, 
i
) = 0;

541 
	`mem£t
(
	`LEAF_VALUE
(
Àaf
, 
i
), 0, 
SIZE_VALUE
);

543 
i
 = 
√w_Àaf
.
num_keys
; i < 
‹dî_Àaf
 - 1; i++) {

544 
	`LEAF_KEY
(&
√w_Àaf
, 
i
) = 0;

545 
	`mem£t
(
	`LEAF_VALUE
(&
√w_Àaf
, 
i
), 0, 
SIZE_VALUE
);

548 
√w_Àaf
.
∑ª¡
 = 
Àaf
->parent;

550 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)
Àaf
);

551 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)&
√w_Àaf
);

553 
√w_key
 = 
	`LEAF_KEY
(&
√w_Àaf
, 0);

556 
	`ö£π_öto_∑ª¡
(
èbÀ_id
, (
NodePage
*)
Àaf
, 
√w_key
, (NodePage*)&
√w_Àaf
);

557 
	}
}

563 
	$ö£π_öto_node
(
I¡î«lPage
* 
n
, 
À·_ödex
, 
uöt64_t
 
key
, 
off_t
 
right_off£t
) {

564 
i
;

566 
i
 = 
n
->
num_keys
; i > 
À·_ödex
; i--) {

567 
	`INTERNAL_OFFSET
(
n
, 
i
 + 1) = INTERNAL_OFFSET(n, i);

568 
	`INTERNAL_KEY
(
n
, 
i
) = INTERNAL_KEY(n, i - 1);

570 
	`INTERNAL_OFFSET
(
n
, 
À·_ödex
 + 1Ë
right_off£t
;

571 
	`INTERNAL_KEY
(
n
, 
À·_ödex
Ë
key
;

572 
n
->
num_keys
++;

573 
	}
}

579 
	$ö£π_öto_node_a·î_•lôtög
(
èbÀ_id
, 
I¡î«lPage
* 
ﬁd_node
, 
À·_ödex
, 
uöt64_t
 
key
, 
off_t
 
right_off£t
) {

580 
i
, 
j
, 
•lô
, 
k_¥ime
;

581 
uöt64_t
* 
ãmp_keys
;

582 
off_t
* 
ãmp_poöãrs
;

593 
ãmp_poöãrs
 = 
	`mÆloc
–(
‹dî_öã∫Æ
 + 1Ë* (
off_t
) );

594 i‡(
ãmp_poöãrs
 =
NULL
) {

595 
	`≥º‹
("TemporaryÖointersárray for splittingÇodes.");

596 
	`exô
(
EXIT_FAILURE
);

598 
ãmp_keys
 = 
	`mÆloc
–
‹dî_öã∫Æ
 * (
uöt64_t
) );

599 i‡(
ãmp_keys
 =
NULL
) {

600 
	`≥º‹
("Temporary keysárray for splittingÇodes.");

601 
	`exô
(
EXIT_FAILURE
);

604 
i
 = 0, 
j
 = 0; i < 
ﬁd_node
->
num_keys
 + 1; i++, j++) {

605 i‡(
j
 =
À·_ödex
 + 1) j++;

606 
ãmp_poöãrs
[
j
] = 
	`INTERNAL_OFFSET
(
ﬁd_node
, 
i
);

609 
i
 = 0, 
j
 = 0; i < 
ﬁd_node
->
num_keys
; i++, j++) {

610 i‡(
j
 =
À·_ödex
) j++;

611 
ãmp_keys
[
j
] = 
	`INTERNAL_KEY
(
ﬁd_node
, 
i
);

614 
ãmp_poöãrs
[
À·_ödex
 + 1] = 
right_off£t
;

615 
ãmp_keys
[
À·_ödex
] = 
key
;

621 
•lô
 = 
	`cut
(
‹dî_öã∫Æ
);

623 
I¡î«lPage
 
√w_node
;

624 
√w_node
.
num_keys
 = 0;

625 
√w_node
.
is_Àaf
 = 0;

626 
√w_node
.
fûe_off£t
 = 
	`gë_‰ì_∑ge
(
èbÀ_id
);

628 
ﬁd_node
->
num_keys
 = 0;

629 
i
 = 0; i < 
•lô
 - 1; i++) {

630 
	`INTERNAL_OFFSET
(
ﬁd_node
, 
i
Ë
ãmp_poöãrs
[i];

631 
	`INTERNAL_KEY
(
ﬁd_node
, 
i
Ë
ãmp_keys
[i];

632 
ﬁd_node
->
num_keys
++;

634 
	`INTERNAL_OFFSET
(
ﬁd_node
, 
i
Ë
ãmp_poöãrs
[i];

635 
k_¥ime
 = 
ãmp_keys
[
•lô
 - 1];

636 ++
i
, 
j
 = 0; i < 
‹dî_öã∫Æ
; i++, j++) {

637 
	`INTERNAL_OFFSET
(&
√w_node
, 
j
Ë
ãmp_poöãrs
[
i
];

638 
	`INTERNAL_KEY
(&
√w_node
, 
j
Ë
ãmp_keys
[
i
];

639 
√w_node
.
num_keys
++;

641 
	`INTERNAL_OFFSET
(&
√w_node
, 
j
Ë
ãmp_poöãrs
[
i
];

642 
	`‰ì
(
ãmp_poöãrs
);

643 
	`‰ì
(
ãmp_keys
);

644 
√w_node
.
∑ª¡
 = 
ﬁd_node
->parent;

645 
i
 = 0; i <
√w_node
.
num_keys
; i++) {

646 
NodePage
 
chûd_∑ge
;

647 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
	`INTERNAL_OFFSET
(&
√w_node
, 
i
), (
Page
*)&
chûd_∑ge
);

648 
chûd_∑ge
.
∑ª¡
 = 
√w_node
.
fûe_off£t
;

649 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)&
chûd_∑ge
);

653 
i
 = 
ﬁd_node
->
num_keys
; i < 
‹dî_öã∫Æ
 - 1; i++) {

654 
	`INTERNAL_OFFSET
(
ﬁd_node
, 
i
+1) = 0;

655 
	`INTERNAL_KEY
(
ﬁd_node
, 
i
) = 0;

658 
i
 = 
√w_node
.
num_keys
; i < 
‹dî_öã∫Æ
 - 1; i++) {

659 
	`INTERNAL_OFFSET
(&
√w_node
, 
i
+1) = 0;

660 
	`INTERNAL_KEY
(&
√w_node
, 
i
) = 0;

664 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)&
√w_node
);

665 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)
ﬁd_node
);

671 
	`ö£π_öto_∑ª¡
(
èbÀ_id
, (
NodePage
*)
ﬁd_node
, 
k_¥ime
, (NodePage*)&
√w_node
);

672 
	}
}

677 
	$ö£π_öto_∑ª¡
(
èbÀ_id
, 
NodePage
* 
À·
, 
uöt64_t
 
key
, NodePage* 
right
) {

679 
I¡î«lPage
 
∑ª¡_node
;

682 i‡(
À·
->
∑ª¡
 == 0) {

683 
	`ö£π_öto_√w_roŸ
(
èbÀ_id
, 
À·
, 
key
, 
right
);

687 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
À·
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

697 
À·_ödex
 = 
	`gë_À·_ödex
(&
∑ª¡_node
, 
À·
->
fûe_off£t
);

702 i‡(
∑ª¡_node
.
num_keys
 < 
‹dî_öã∫Æ
 - 1) {

703 
	`ö£π_öto_node
(&
∑ª¡_node
, 
À·_ödex
, 
key
, 
right
->
fûe_off£t
);

704 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)&
∑ª¡_node
);

712  
	`ö£π_öto_node_a·î_•lôtög
(
èbÀ_id
, &
∑ª¡_node
, 
À·_ödex
, 
key
, 
right
->
fûe_off£t
);

713 
	}
}

719 
	$ö£π_öto_√w_roŸ
(
èbÀ_id
, 
NodePage
* 
À·
, 
uöt64_t
 
key
, NodePage* 
right
) {

721 
I¡î«lPage
 
roŸ_node
;

722 
	`mem£t
(&
roŸ_node
, 0, (
I¡î«lPage
));

723 
roŸ_node
.
fûe_off£t
 = 
	`gë_‰ì_∑ge
(
èbÀ_id
);

724 
	`INTERNAL_KEY
(&
roŸ_node
, 0Ë
key
;

725 
	`INTERNAL_OFFSET
(&
roŸ_node
, 0Ë
À·
->
fûe_off£t
;

726 
	`INTERNAL_OFFSET
(&
roŸ_node
, 1Ë
right
->
fûe_off£t
;

727 
roŸ_node
.
num_keys
++;

728 
roŸ_node
.
∑ª¡
 = 0;

729 
roŸ_node
.
is_Àaf
 = 0;

730 
À·
->
∑ª¡
 = 
roŸ_node
.
fûe_off£t
;

731 
right
->
∑ª¡
 = 
roŸ_node
.
fûe_off£t
;

733 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)&
roŸ_node
);

734 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)
À·
);

735 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)
right
);

737 
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
 = 
roŸ_node
.
fûe_off£t
;

738 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)(
dbhódî
 +Åable_id - 1));

739 
	}
}

743 
	$°¨t_√w_åì
(
èbÀ_id
, 
uöt64_t
 
key
, c⁄° * 
vÆue
) {

744 
LófPage
 
roŸ_node
;

746 
off_t
 
roŸ_off£t
 = 
	`gë_‰ì_∑ge
(
èbÀ_id
);

747 
roŸ_node
.
fûe_off£t
 = 
roŸ_off£t
;

749 
roŸ_node
.
∑ª¡
 = 0;

750 
roŸ_node
.
is_Àaf
 = 1;

751 
roŸ_node
.
num_keys
 = 1;

752 
	`LEAF_KEY
(&
roŸ_node
, 0Ë
key
;

753 
roŸ_node
.
siblög
 = 0;

754 
	`mem˝y
(
	`LEAF_VALUE
(&
roŸ_node
, 0), 
vÆue
, 
SIZE_VALUE
);

756 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)&
roŸ_node
);

758 
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
 =Ñoot_offset;

759 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)(
dbhódî
 +Åable_id - 1));

760 
	}
}

768 
	$ö£π
(
èbÀ_id
, 
uöt64_t
 
key
, c⁄° * 
vÆue
) {

772 * 
vÆue_found
 = 
NULL
;

774 i‡((
vÆue_found
 = 
	`föd
(
èbÀ_id
, 
key
)) != 0) {

775 
	`‰ì
(
vÆue_found
);

782 i‡(
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
 == 0) {

783 
	`°¨t_√w_åì
(
èbÀ_id
, 
key
, 
vÆue
);

791 
LófPage
 
Àaf_node
;

792 
	`föd_Àaf
(
èbÀ_id
, 
key
, &
Àaf_node
);

797 i‡(
Àaf_node
.
num_keys
 < 
‹dî_Àaf
 - 1) {

798 
	`ö£π_öto_Àaf
(
èbÀ_id
, &
Àaf_node
, 
key
, 
vÆue
);

802 
	`ö£π_öto_Àaf_a·î_•lôtög
(
èbÀ_id
, &
Àaf_node
, 
key
, 
vÆue
);

805 
	}
}

815 
	$gë_√ighb‹_ödex
(
èbÀ_id
, 
NodePage
* 
node_∑ge
) {

817 
i
;

825 
I¡î«lPage
 
∑ª¡_node
;

826 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
node_∑ge
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

827 
i
 = 0; i <
∑ª¡_node
.
num_keys
; i++)

828 i‡(
	`INTERNAL_OFFSET
(&
∑ª¡_node
, 
i
Ë=
node_∑ge
->
fûe_off£t
)

829  
i
 - 1;

832 
	`as£π
("Search forÇonexistentÖointerÅoÇode inÖarent.");

834 
	}
}

836 
	$ªmove_íåy_‰om_node
(
èbÀ_id
, 
NodePage
* 
node_∑ge
, 
uöt64_t
 
key
) {

838 
i
;

839 
key_idx
 = 0;

841 i‡(
node_∑ge
->
is_Àaf
) {

842 
LófPage
* 
Àaf_node
 = (LófPage*)
node_∑ge
;

845 
i
 = 0; i < 
Àaf_node
->
num_keys
; i++) {

846 i‡(
	`LEAF_KEY
(
Àaf_node
, 
i
Ë=
key
) {

847 
key_idx
 = 
i
;

851 i‡(
i
 =
Àaf_node
->
num_keys
) {

852 
	`as£π
("remove_entry_from_node:Ço key inÅhisÖage");

856 
i
 = 
key_idx
; i < 
Àaf_node
->
num_keys
 - 1; i++) {

857 
	`LEAF_KEY
(
Àaf_node
, 
i
) = LEAF_KEY(leaf_node, i+1);

858 
	`mem˝y
(
	`LEAF_VALUE
(
Àaf_node
, 
i
), LEAF_VALUE÷óf_node, i+1), 
SIZE_VALUE
);

861 
	`LEAF_KEY
(
Àaf_node
,Üóf_node->
num_keys
 - 1) = 0;

862 
	`mem£t
(
	`LEAF_VALUE
(
Àaf_node
,Üóf_node->
num_keys
 - 1), 0, 
SIZE_VALUE
);

864 
Àaf_node
->
num_keys
--;

867 
I¡î«lPage
* 
öã∫Æ_node
 = (I¡î«lPage*)
node_∑ge
;

870 
i
 = 0; i < 
öã∫Æ_node
->
num_keys
; i++) {

871 i‡(
	`INTERNAL_KEY
(
öã∫Æ_node
, 
i
Ë=
key
) {

872 
key_idx
 = 
i
;

876 i‡(
i
 =
öã∫Æ_node
->
num_keys
) {

877 
	`as£π
("remove_entry_from_node:Ço key inÅhisÖage");

881 
i
 = 
key_idx
; i < 
öã∫Æ_node
->
num_keys
 - 1; i++) {

882 
	`INTERNAL_KEY
(
öã∫Æ_node
, 
i
) = INTERNAL_KEY(internal_node, i+1);

883 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, 
i
+1) = INTERNAL_OFFSET(internal_node, i+2);

886 
	`INTERNAL_KEY
(
öã∫Æ_node
, i¡î«l_node->
num_keys
 - 1) = 0;

887 
	`INTERNAL_OFFSET
(
öã∫Æ_node
, i¡î«l_node->
num_keys
) = 0;

889 
öã∫Æ_node
->
num_keys
--;

892 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)
node_∑ge
);

893 
	}
}

895 
	$adju°_roŸ
(
èbÀ_id
) {

897 
NodePage
 
roŸ_∑ge
;

898 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
dbhódî
[èbÀ_id - 1].
roŸ_off£t
, (
Page
*)&
roŸ_∑ge
);

905 i‡(
roŸ_∑ge
.
num_keys
 > 0)

915 i‡(!
roŸ_∑ge
.
is_Àaf
) {

916 
I¡î«lPage
* 
roŸ_node
 = (I¡î«lPage*)&
roŸ_∑ge
;

917 
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
 = 
	`INTERNAL_OFFSET
(
roŸ_node
, 0);

919 
NodePage
 
node_∑ge
;

920 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
dbhódî
[èbÀ_id - 1].
roŸ_off£t
, (
Page
*)&
node_∑ge
);

921 
node_∑ge
.
∑ª¡
 = 0;

923 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)&
node_∑ge
);

924 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)(
dbhódî
 +Åable_id - 1));

931 
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
 = 0;

932 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)(
dbhódî
 +Åable_id - 1));

935 
	`put_‰ì_∑ge
(
èbÀ_id
, 
roŸ_∑ge
.
fûe_off£t
);

936 
	}
}

944 
	$cﬂÀs˚_nodes
(
èbÀ_id
, 
NodePage
* 
node_∑ge
, NodePage* 
√ighb‹_∑ge
, 
√ighb‹_ödex
, 
k_¥ime
) {

946 
i
, 
j
, 
√ighb‹_ö£πi⁄_ödex
, 
n_íd
;

947 
NodePage
* 
tmp
;

953 i‡(
√ighb‹_ödex
 == -1) {

954 
tmp
 = 
node_∑ge
;

955 
node_∑ge
 = 
√ighb‹_∑ge
;

956 
√ighb‹_∑ge
 = 
tmp
;

965 
√ighb‹_ö£πi⁄_ödex
 = 
√ighb‹_∑ge
->
num_keys
;

972 i‡(!
node_∑ge
->
is_Àaf
) {

973 
I¡î«lPage
* 
node
 = (I¡î«lPage*)
node_∑ge
;

974 
I¡î«lPage
* 
√ighb‹_node
 = (I¡î«lPage*)
√ighb‹_∑ge
;

979 
	`INTERNAL_KEY
(
√ighb‹_node
, 
√ighb‹_ö£πi⁄_ödex
Ë
k_¥ime
;

980 
√ighb‹_node
->
num_keys
++;

982 
n_íd
 = 
node
->
num_keys
;

984 
i
 = 
√ighb‹_ö£πi⁄_ödex
 + 1, 
j
 = 0; j < 
n_íd
; i++, j++) {

985 
	`INTERNAL_KEY
(
√ighb‹_node
, 
i
ËINTERNAL_KEY(
node
, 
j
);

986 
	`INTERNAL_OFFSET
(
√ighb‹_node
, 
i
ËINTERNAL_OFFSET(
node
, 
j
);

987 
√ighb‹_node
->
num_keys
++;

988 
node
->
num_keys
--;

995 
	`INTERNAL_OFFSET
(
√ighb‹_node
, 
i
ËINTERNAL_OFFSET(
node
, 
j
);

1000 
i
 = 0; i < 
√ighb‹_node
->
num_keys
 + 1; i++) {

1001 
NodePage
 
chûd_∑ge
;

1002 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
	`INTERNAL_OFFSET
(
√ighb‹_node
, 
i
), (
Page
*)&
chûd_∑ge
);

1003 
chûd_∑ge
.
∑ª¡
 = 
√ighb‹_node
->
fûe_off£t
;

1004 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)&
chûd_∑ge
);

1007 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)
√ighb‹_node
);

1009 
	`put_‰ì_∑ge
(
èbÀ_id
, 
node
->
fûe_off£t
);

1019 
LófPage
* 
node
 = (LófPage*)
node_∑ge
;

1020 
LófPage
* 
√ighb‹_node
 = (LófPage*)
√ighb‹_∑ge
;

1022 
i
 = 
√ighb‹_ö£πi⁄_ödex
, 
j
 = 0; j < 
node
->
num_keys
; i++, j++) {

1023 
	`LEAF_KEY
(
√ighb‹_node
, 
i
ËLEAF_KEY(
node
, 
j
);

1024 
	`mem˝y
(
	`LEAF_VALUE
(
√ighb‹_node
, 
i
), LEAF_VALUE(
node
, 
j
), 
SIZE_VALUE
);

1025 
√ighb‹_node
->
num_keys
++;

1027 
√ighb‹_node
->
siblög
 = 
node
->sibling;

1029 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)
√ighb‹_node
);

1031 
	`put_‰ì_∑ge
(
èbÀ_id
, 
node
->
fûe_off£t
);

1034 
NodePage
 
∑ª¡_node
;

1035 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
node_∑ge
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

1036 
	`dñëe_íåy
(
èbÀ_id
, &
∑ª¡_node
, 
k_¥ime
);

1037 
	}
}

1045 
	$ªdi°ribuã_nodes
(
èbÀ_id
, 
NodePage
* 
node_∑ge
, NodePage* 
√ighb‹_∑ge
,

1046 
√ighb‹_ödex
,

1047 
k_¥ime_ödex
, 
k_¥ime
) {

1049 
i
;

1056 i‡(
√ighb‹_ödex
 != -1) {

1057 i‡(!
node_∑ge
->
is_Àaf
) {

1058 
I¡î«lPage
* 
node
 = (I¡î«lPage*)
node_∑ge
;

1059 
I¡î«lPage
* 
√ighb‹_node
 = (I¡î«lPage*)
√ighb‹_∑ge
;

1060 
	`INTERNAL_OFFSET
(
node
,Çode->
num_keys
 + 1) = INTERNAL_OFFSET(node,Çode->num_keys);

1062 
i
 = 
node
->
num_keys
; i > 0; i--) {

1063 
	`INTERNAL_KEY
(
node
, 
i
) = INTERNAL_KEY(node, i - 1);

1064 
	`INTERNAL_OFFSET
(
node
, 
i
) = INTERNAL_OFFSET(node, i - 1);

1066 
	`INTERNAL_OFFSET
(
node
, 0ËINTERNAL_OFFSET(
√ighb‹_node
,Çeighb‹_node->
num_keys
);

1067 
NodePage
 
chûd_∑ge
;

1068 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
	`INTERNAL_OFFSET
(
node
, 0), (
Page
*)&
chûd_∑ge
);

1069 
chûd_∑ge
.
∑ª¡
 = 
node
->
fûe_off£t
;

1070 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)&
chûd_∑ge
);

1072 
	`INTERNAL_OFFSET
(
√ighb‹_node
,Çeighb‹_node->
num_keys
) = 0;

1073 
	`INTERNAL_KEY
(
node
, 0Ë
k_¥ime
;

1075 
I¡î«lPage
 
∑ª¡_node
;

1076 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
node
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

1077 
	`INTERNAL_KEY
(&
∑ª¡_node
, 
k_¥ime_ödex
ËINTERNAL_KEY(
√ighb‹_node
,Çeighb‹_node->
num_keys
 - 1);

1078 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)&
∑ª¡_node
);

1083 
node
->
num_keys
++;

1084 
√ighb‹_node
->
num_keys
--;

1086 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)
node_∑ge
);

1087 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)
√ighb‹_∑ge
);

1090 
LófPage
* 
node
 = (LófPage*)
node_∑ge
;

1091 
LófPage
* 
√ighb‹_node
 = (LófPage*)
√ighb‹_∑ge
;

1093 
i
 = 
node
->
num_keys
; i > 0; i--) {

1094 
	`LEAF_KEY
(
node
, 
i
) = LEAF_KEY(node, i - 1);

1095 
	`mem˝y
(
	`LEAF_VALUE
(
node
, 
i
), LEAF_VALUE“ode, i - 1), 
SIZE_VALUE
);

1097 
	`mem˝y
(
	`LEAF_VALUE
(
node
, 0), LEAF_VALUE(
√ighb‹_node
,Çeighb‹_node->
num_keys
 - 1), 
SIZE_VALUE
);

1098 
	`mem£t
(
	`LEAF_VALUE
(
√ighb‹_node
,Çeighb‹_node->
num_keys
 - 1), 0, 
SIZE_VALUE
);

1099 
	`LEAF_KEY
(
node
, 0ËLEAF_KEY(
√ighb‹_node
,Çeighb‹_node->
num_keys
 - 1);

1101 
I¡î«lPage
 
∑ª¡_node
;

1102 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
node
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

1103 
	`INTERNAL_KEY
(&
∑ª¡_node
, 
k_¥ime_ödex
Ë
	`LEAF_KEY
(
node
, 0);

1104 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)&
∑ª¡_node
);

1109 
node
->
num_keys
++;

1110 
√ighb‹_node
->
num_keys
--;

1112 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)
node_∑ge
);

1113 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)
√ighb‹_∑ge
);

1124 i‡(
node_∑ge
->
is_Àaf
) {

1125 
LófPage
* 
node
 = (LófPage*)
node_∑ge
;

1126 
LófPage
* 
√ighb‹_node
 = (LófPage*)
√ighb‹_∑ge
;;

1128 
	`LEAF_KEY
(
node
,Çode->
num_keys
ËLEAF_KEY(
√ighb‹_node
, 0);

1129 
	`mem˝y
(
	`LEAF_VALUE
(
node
,Çode->
num_keys
), LEAF_VALUE(
√ighb‹_node
, 0), 
SIZE_VALUE
);

1131 
I¡î«lPage
 
∑ª¡_node
;

1132 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
node
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

1133 
	`INTERNAL_KEY
(&
∑ª¡_node
, 
k_¥ime_ödex
Ë
	`LEAF_KEY
(
√ighb‹_node
, 1);

1134 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)&
∑ª¡_node
);

1136 
i
 = 0; i < 
√ighb‹_node
->
num_keys
 - 1; i++) {

1137 
	`LEAF_KEY
(
√ighb‹_node
, 
i
) = LEAF_KEY(neighbor_node, i + 1);

1138 
	`mem˝y
(
	`LEAF_VALUE
(
√ighb‹_node
, 
i
), LEAF_VALUE“eighb‹_node, i + 1), 
SIZE_VALUE
);

1144 
node
->
num_keys
++;

1145 
√ighb‹_node
->
num_keys
--;

1147 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)
node_∑ge
);

1148 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)
√ighb‹_∑ge
);

1152 
I¡î«lPage
* 
node
 = (I¡î«lPage*)
node_∑ge
;

1153 
I¡î«lPage
* 
√ighb‹_node
 = (I¡î«lPage*)
√ighb‹_∑ge
;

1155 
	`INTERNAL_KEY
(
node
,Çode->
num_keys
Ë
k_¥ime
;

1156 
	`INTERNAL_OFFSET
(
node
,Çode->
num_keys
 + 1ËINTERNAL_OFFSET(
√ighb‹_node
, 0);

1158 
NodePage
 
chûd_∑ge
;

1159 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
	`INTERNAL_OFFSET
(
node
,Çode->
num_keys
 + 1), (
Page
*)&
chûd_∑ge
);

1160 
chûd_∑ge
.
∑ª¡
 = 
node
->
fûe_off£t
;

1161 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)&
chûd_∑ge
);

1163 
I¡î«lPage
 
∑ª¡_node
;

1164 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
node
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

1165 
	`INTERNAL_KEY
(&
∑ª¡_node
, 
k_¥ime_ödex
ËINTERNAL_KEY(
√ighb‹_node
, 0);

1166 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)&
∑ª¡_node
);

1168 
i
 = 0; i < 
√ighb‹_node
->
num_keys
 - 1; i++) {

1169 
	`INTERNAL_KEY
(
√ighb‹_node
, 
i
) = INTERNAL_KEY(neighbor_node, i + 1);

1170 
	`INTERNAL_OFFSET
(
√ighb‹_node
, 
i
) = INTERNAL_OFFSET(neighbor_node, i + 1);

1173 
	`INTERNAL_OFFSET
(
√ighb‹_node
, 
i
) = INTERNAL_OFFSET(neighbor_node, i + 1);

1180 
node
->
num_keys
++;

1181 
√ighb‹_node
->
num_keys
--;

1183 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)
node_∑ge
);

1184 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)
√ighb‹_∑ge
);

1188 
	}
}

1196 
	$dñëe_íåy
(
èbÀ_id
, 
NodePage
* 
node_∑ge
, 
uöt64_t
 
key
) {

1198 
mö_keys
;

1199 
off_t
 
√ighb‹_off£t
;

1200 
√ighb‹_ödex
;

1201 
k_¥ime_ödex
, 
k_¥ime
;

1202 
ˇ∑côy
;

1206 
	`ªmove_íåy_‰om_node
(
èbÀ_id
, 
node_∑ge
, 
key
);

1210 i‡(
dbhódî
[
èbÀ_id
 - 1].
roŸ_off£t
 =
node_∑ge
->
fûe_off£t
) {

1211 
	`adju°_roŸ
(
èbÀ_id
);

1223 
mö_keys
 = 
node_∑ge
->
is_Àaf
 ? 
	`cut
(
‹dî_Àaf
 - 1Ë: cut(
‹dî_öã∫Æ
) - 1;

1229 i‡(
node_∑ge
->
num_keys
 >
mö_keys
)

1244 
√ighb‹_ödex
 = 
	`gë_√ighb‹_ödex
(
èbÀ_id
, 
node_∑ge
);

1245 
k_¥ime_ödex
 = 
√ighb‹_ödex
 == -1 ? 0 :Çeighbor_index;

1247 
I¡î«lPage
 
∑ª¡_node
;

1248 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
node_∑ge
->
∑ª¡
, (
Page
*)&
∑ª¡_node
);

1250 
k_¥ime
 = 
	`INTERNAL_KEY
(&
∑ª¡_node
, 
k_¥ime_ödex
);

1251 
√ighb‹_off£t
 = 
√ighb‹_ödex
 =-1 ? 
	`INTERNAL_OFFSET
(&
∑ª¡_node
, 1) :

1252 
	`INTERNAL_OFFSET
(&
∑ª¡_node
, 
√ighb‹_ödex
);

1254 
ˇ∑côy
 = 
node_∑ge
->
is_Àaf
 ? 
‹dî_Àaf
 : 
‹dî_öã∫Æ
 - 1;

1256 
NodePage
 
√ighb‹_∑ge
;

1257 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
√ighb‹_off£t
, (
Page
*)&
√ighb‹_∑ge
);

1260 i‡(
√ighb‹_∑ge
.
num_keys
 + 
node_∑ge
->num_key†< 
ˇ∑côy
)

1261 
	`cﬂÀs˚_nodes
(
èbÀ_id
, 
node_∑ge
, &
√ighb‹_∑ge
, 
√ighb‹_ödex
, 
k_¥ime
);

1266 
	`ªdi°ribuã_nodes
(
èbÀ_id
, 
node_∑ge
, &
√ighb‹_∑ge
, 
√ighb‹_ödex
, 
k_¥ime_ödex
, 
k_¥ime
);

1269 
	}
}

1273 
	$dñëe
(
èbÀ_id
, 
uöt64_t
 
key
) {

1275 * 
vÆue_found
 = 
NULL
;

1276 i‡((
vÆue_found
 = 
	`föd
(
èbÀ_id
, 
key
)) == 0) {

1278 
	`‰ì
(
vÆue_found
);

1282 
LófPage
 
Àaf_node
;

1283 
	`föd_Àaf
(
èbÀ_id
, 
key
, &
Àaf_node
);

1285 
	`dñëe_íåy
(
èbÀ_id
, (
NodePage
*)&
Àaf_node
, 
key
);

1288 
	}
}

1291 
	$öô_db
(
num_buf
){

1293 
buf_mgr
 = (
Buf„r
 *)
	`ˇŒoc
(
num_buf
, (Buffer));

1295 if(
buf_mgr
 =
NULL
){

1301 
buf_size
 = 
num_buf
;

1304 
	}
}

1306 
	$˛o£_èbÀ
(
èbÀ_id
){

1307 
i
;

1310 if(
èbÀ_id
 < 1 ||ÅabÀ_id > 10 || 
buf_size
 =-1 || 
buf_mgr
 =
NULL
){

1314 
i
 = 0; i < 
buf_size
; i++){

1315 if(
buf_mgr
[
i
].
èbÀ_id
 ==Åable_id){

1317 if(
buf_mgr
[
i
].
is_dúty
 == 1){

1318 
	`Êush_∑ge
(
èbÀ_id
, 
buf_mgr
[
i
].
‰ame
);

1321 
	`mem£t
(
buf_mgr
+
i
, 0, (
Buf„r
));

1326 
èbÀ_ids
[
èbÀ_id
 -1] = 0;

1329 
	}
}

1331 
	$shutdown_db
(){

1332 
i
,
èbÀ_id
 = -1;

1335 if(
buf_size
 =-1 || 
buf_mgr
 =
NULL
){

1339 
i
 = 0; i < 
buf_size
; i++){

1341 if(
buf_mgr
[
i
].
is_dúty
 == 1){

1342 
èbÀ_id
 = 
buf_mgr
[
i
].table_id;

1343 
	`Êush_∑ge
(
èbÀ_id
, 
buf_mgr
[
i
].
‰ame
);

1348 
	`‰ì
(
buf_mgr
);

1351 
	}
}

1353 
	$lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
off_t
 
off£t
, 
Page
* 
∑ge
){

1354 
Page
 *
ãmp
;

1355 
buf_ödex
 = -1;

1357 
ãmp
 = 
	`is_ö_buf„r
(
èbÀ_id
, 
off£t
, 1);

1360 if(
ãmp
 !
NULL
){

1361 
∑ge
 = 
ãmp
;

1362 
∑ge
->
fûe_off£t
 = 
off£t
;

1369 
buf_ödex
 = 
	`ª∂a˚_∑ge
(
èbÀ_id
);

1372 
	`lﬂd_∑ge
(
èbÀ_id
, 
off£t
, 
∑ge
);

1373 
∑ge
->
fûe_off£t
 = 
off£t
;

1377 if(
buf_ödex
 != -1){

1380 
buf_mgr
[
buf_ödex
].
‰ame
 = 
∑ge
;

1381 
buf_mgr
[
buf_ödex
].
èbÀ_id
 =Åable_id;

1382 
buf_mgr
[
buf_ödex
].
∑ge_off£t
 = 
off£t
;

1383 
buf_mgr
[
buf_ödex
].
is_dúty
 = 0;

1384 
buf_mgr
[
buf_ödex
].
pö_cou¡
 = 1;

1385 
buf_mgr
[
buf_ödex
].
ªfbô
 = 1;

1388 
	}
}

1392 
Page
* 
	$is_ö_buf„r
(
èbÀ_id
, 
off_t
 
off£t
, 
ty≥
){

1393 
i
;

1395 if(
buf_size
 == -1){

1397  
NULL
;

1400 
i
 = 0; i < 
buf_size
; i++){

1401 if(
buf_mgr
[
i
].
èbÀ_id
 =èbÀ_id && buf_mgr[i].
∑ge_off£t
 =
off£t
){

1404 if(
ty≥
 == 1){

1405 
buf_mgr
[
i
].
pö_cou¡
++;

1409 
buf_mgr
[
i
].
is_dúty
 = 1;

1410 
buf_mgr
[
i
].
pö_cou¡
--;

1412  
buf_mgr
[
i
].
‰ame
;

1417  
NULL
;

1418 
	}
}

1420 
	$ª∂a˚_∑ge
(
èbÀ_id
){

1422 
Page
 *
èrgë_∑ge
 = 
NULL
;

1423 
èrgë_ödex
 = -1, 
ödex
 = 0;

1426 
èrgë_∑ge
 =
NULL
 && 
ödex
 !
buf_size
){

1429 if(
buf_mgr
[
˛ock_h™d
].
pö_cou¡
 =0 && buf_mgr[˛ock_h™d].
ªfbô
 == 0){

1431 
èrgë_ödex
 = 
˛ock_h™d
;

1434 
èrgë_∑ge
 = 
buf_mgr
[
˛ock_h™d
].
‰ame
;

1437 if(
buf_mgr
[
˛ock_h™d
].
is_dúty
 == 1){

1439 
	`Êush_∑ge
(
èbÀ_id
, 
èrgë_∑ge
);

1446 if(
buf_mgr
[
˛ock_h™d
].
pö_cou¡
 =0 && buf_mgr[˛ock_h™d].
ªfbô
 == 1){

1447 
buf_mgr
[
˛ock_h™d
].
ªfbô
 = 0;

1451 
˛ock_h™d
 = (˛ock_h™d + 1Ë% 
buf_size
;

1453 
ödex
++;

1456  
èrgë_ödex
;

1457 
	}
}

1460 
	$dúty_⁄
(
èbÀ_id
, 
Page
 *
∑ge
){

1461 
i
, 
buf_ödex
 = -1;

1462 
Page
 *
ãmp
;

1467 
ãmp
 = 
	`is_ö_buf„r
(
èbÀ_id
, 
∑ge
->
fûe_off£t
, 0);

1470 if(
ãmp
 =
NULL
){

1471 
buf_ödex
 = 
	`ª∂a˚_∑ge
(
èbÀ_id
);

1474 if(
buf_ödex
 == -1){

1475 
	`Êush_∑ge
(
èbÀ_id
, 
∑ge
);

1481 
buf_mgr
[
buf_ödex
].
‰ame
 = 
∑ge
;

1482 
buf_mgr
[
buf_ödex
].
èbÀ_id
 =Åable_id;

1483 
buf_mgr
[
buf_ödex
].
∑ge_off£t
 = 
∑ge
->
fûe_off£t
;

1485 
buf_mgr
[
buf_ödex
].
is_dúty
 = 1;

1486 
buf_mgr
[
buf_ödex
].
pö_cou¡
 = 1;

1487 
buf_mgr
[
buf_ödex
].
ªfbô
 = 1;

1490 
	}
}

	@src/file.c

1 
	~<sys/ty≥s.h
>

2 
	~<f˙é.h
>

3 
	~<°dlib.h
>

4 
	~<as£π.h
>

5 
	~<°dio.h
>

6 
	~<uni°d.h
>

7 
	~<°rög.h
>

8 
	~"fûe.h
"

10 
HódîPage
 
	gdbhódî
[10];

11 
	gdbfûe
[10];

15 
off_t
 
	$gë_‰ì_∑ge
(
èbÀ_id
) {

16 
off_t
 
‰ì∑ge_off£t
;

18 
‰ì∑ge_off£t
 = 
dbhódî
[
èbÀ_id
 - 1].
‰ìli°
;

19 i‡(
‰ì∑ge_off£t
 == 0) {

21 
	`ex∑nd_fûe
(
èbÀ_id
, 
dbhódî
[èbÀ_id - 1].
num_∑ges
);

22 
‰ì∑ge_off£t
 = 
dbhódî
[
èbÀ_id
 - 1].
‰ìli°
;

25 
FªePage
 
‰ì∑ge
;

26 
	`lﬂd_∑ge_‰om_buf„r
(
èbÀ_id
, 
‰ì∑ge_off£t
, (
Page
*)&
‰ì∑ge
);

27 
dbhódî
[
èbÀ_id
 - 1].
‰ìli°
 = 
‰ì∑ge
.
√xt
;

29 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)(
dbhódî
 +Åable_id - 1));

31  
‰ì∑ge_off£t
;

32 
	}
}

35 
	$put_‰ì_∑ge
(
èbÀ_id
, 
off_t
 
∑ge_off£t
) {

36 
FªePage
 
‰ì∑ge
;

37 
	`mem£t
(&
‰ì∑ge
, 0, 
PAGE_SIZE
);

39 
‰ì∑ge
.
√xt
 = 
dbhódî
[
èbÀ_id
 - 1].
‰ìli°
;

40 
‰ì∑ge
.
fûe_off£t
 = 
∑ge_off£t
;

42 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)&
‰ì∑ge
);

44 
dbhódî
[
èbÀ_id
 - 1].
‰ìli°
 = 
∑ge_off£t
;

46 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)(
dbhódî
 +Åable_id - 1));

47 
	}
}

50 
	$ex∑nd_fûe
(
èbÀ_id
, 
size_t
 
˙t_∑ge_to_ex∑nd
) {

51 
off_t
 
off£t
 = 
dbhódî
[
èbÀ_id
 - 1].
num_∑ges
 * 
PAGE_SIZE
;

53 i‡(
dbhódî
[
èbÀ_id
 - 1].
num_∑ges
 > 1024 * 1024) {

55 
	`as£π
("Test: youáreálready havingá DB file overÅhan 4GB");

58 
i
;

59 
i
 = 0; i < 
˙t_∑ge_to_ex∑nd
; i++) {

60 
	`put_‰ì_∑ge
(
èbÀ_id
, 
off£t
);

61 
dbhódî
[
èbÀ_id
 - 1].
num_∑ges
++;

62 
off£t
 +
PAGE_SIZE
;

65 
	`dúty_⁄
(
èbÀ_id
, (
Page
*)(
dbhódî
 +Åable_id - 1));

66 
	}
}

68 
	$lﬂd_∑ge
(
èbÀ_id
, 
off_t
 
off£t
, 
Page
* 
∑ge
) {

69 
	`l£ek
(
dbfûe
[
èbÀ_id
 - 1], 
off£t
, 
SEEK_SET
);

70 
	`ªad
(
dbfûe
[
èbÀ_id
 - 1], 
∑ge
, 
PAGE_SIZE
);

71 
∑ge
->
fûe_off£t
 = 
off£t
;

72 
	}
}

74 
	$Êush_∑ge
(
èbÀ_id
, 
Page
* 
∑ge
) {

75 
	`l£ek
(
dbfûe
[
èbÀ_id
 - 1], 
∑ge
->
fûe_off£t
, 
SEEK_SET
);

76 
	`wrôe
(
dbfûe
[
èbÀ_id
 - 1], 
∑ge
, 
PAGE_SIZE
);

77 
	}
}

	@src/main.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<f˙é.h
>

4 
	~<uni°d.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<öây≥s.h
>

7 
	~"b±.h
"

8 
	~"fûe.h
"

11 
	$maö
–
¨gc
, ** 
¨gv
 ) {

12 
uöt64_t
 
öput_key
;

13 
öput_vÆue
[
SIZE_VALUE
];

14 
ö°ru˘i⁄
;

15 
èbÀ
 = 0;

17 
	`li˚n£_nŸi˚
();

18 
	`ußge_1
();

19 
	`ußge_2
();

21 
	`öô_db
(3);

22 
èbÀ
 = 
	`›í_èbÀ
("test.db");

23 
	`¥ötf
("> ");

24 
	`sˇnf
("%c", &
ö°ru˘i⁄
Ë!
EOF
) {

25 
ö°ru˘i⁄
) {

27 
	`sˇnf
("%" 
PRIu64
 " %s", &
öput_key
, 
öput_vÆue
);

28 
	`ö£π
(
èbÀ
, 
öput_key
, 
öput_vÆue
);

32 
	`sˇnf
("%" 
PRIu64
 "", &
öput_key
);

33 
	`dñëe
(
èbÀ
, 
öput_key
);

38 
	`sˇnf
("%" 
PRIu64
 "", &
öput_key
);

39 
	`föd_™d_¥öt
(
èbÀ
, 
öput_key
);

42 
	`gëch¨
() != ()'\n');

43  
EXIT_SUCCESS
;

49 
	`ußge_2
();

52 
	`gëch¨
() != ()'\n');

53 
	`¥ötf
("> ");

55 
	`¥ötf
("\n");

57 
	`˛o£_db
(
èbÀ
);

59  
EXIT_SUCCESS
;

60 
	}
}

	@
1
.
0
5
61
include/bpt.h
include/file.h
src/bpt.c
src/file.c
src/main.c
